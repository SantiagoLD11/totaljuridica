{"version":3,"sources":["webpack:///src/app/main/apps/contacts/contact-form/contact-form.component.ts","webpack:///src/app/main/apps/contacts/contact-form/contact-form.component.html","webpack:///src/app/main/apps/contacts/contact-list/contact-list.component.ts","webpack:///src/app/main/apps/contacts/contact-list/contact-list.component.html","webpack:///src/app/main/apps/contacts/contact.model.ts","webpack:///src/app/main/apps/contacts/contacts.component.ts","webpack:///src/app/main/apps/contacts/contacts.component.html","webpack:///src/app/main/apps/contacts/contacts.module.ts","webpack:///src/app/main/apps/contacts/contacts.service.ts","webpack:///src/app/main/apps/contacts/selected-bar/selected-bar.component.ts","webpack:///src/app/main/apps/contacts/selected-bar/selected-bar.component.html","webpack:///src/app/main/apps/contacts/sidebars/main/main.component.ts","webpack:///src/app/main/apps/contacts/sidebars/main/main.component.html"],"names":["matDialogRef","ContactsContactFormDialogComponent","_data","_formBuilder","action","dialogTitle","contact","contactForm","createContactForm","group","id","name","lastName","avatar","nickname","company","jobTitle","email","phone","address","birthday","notes","selector","templateUrl","styleUrls","encapsulation","None","$event","stopPropagation","ContactsContactListComponent","_contactsService","_matDialog","displayedColumns","_unsubscribeAll","dataSource","FilesDataSource","onContactsChanged","pipe","subscribe","contacts","checkboxes","map","onSelectedContactsChanged","selectedContacts","hasOwnProperty","includes","onUserDataChanged","user","onFilterChanged","deselectContacts","next","complete","dialogRef","open","panelClass","data","afterClosed","response","actionType","formData","updateContact","getRawValue","deleteContact","confirmDialogRef","disableClose","componentInstance","confirmMessage","result","contactId","toggleSelectedContact","starred","splice","indexOf","push","updateUserData","animations","Contact","generateGUID","ContactsComponent","_fuseSidebarService","searchInput","hasSelectedContacts","length","valueChanges","searchText","onSearchTextChanged","getSidebar","toggleOpen","toggleSidebar","newContact","routes","path","component","resolve","ContactsModule","forChild","declarations","imports","providers","entryComponents","ContactsService","_httpClient","route","state","Promise","reject","all","getContacts","getUserData","then","files","filter","filterBy","get","_contact","frequentContacts","filterArrayByString","index","selectContacts","filterParameter","filterValue","undefined","post","userData","contactIndex","find","ContactsSelectedBarComponent","setTimeout","isIndeterminate","deleteSelectedContacts","deselectAll","selectAll","ContactsMainSidebarComponent","changeFilter"],"mappings":"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","file":"contacts-contacts-module-es5.js","sourcesContent":["import { Component, Inject, ViewEncapsulation } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\nimport { Contact } from 'app/main/apps/contacts/contact.model';\r\n\r\n@Component({\r\n    selector     : 'contacts-contact-form-dialog',\r\n    templateUrl  : './contact-form.component.html',\r\n    styleUrls    : ['./contact-form.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class ContactsContactFormDialogComponent\r\n{\r\n    action: string;\r\n    contact: Contact;\r\n    contactForm: FormGroup;\r\n    dialogTitle: string;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {MatDialogRef<ContactsContactFormDialogComponent>} matDialogRef\r\n     * @param _data\r\n     * @param {FormBuilder} _formBuilder\r\n     */\r\n    constructor(\r\n        public matDialogRef: MatDialogRef<ContactsContactFormDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) private _data: any,\r\n        private _formBuilder: FormBuilder\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.action = _data.action;\r\n\r\n        if ( this.action === 'edit' )\r\n        {\r\n            this.dialogTitle = 'Edit Contact';\r\n            this.contact = _data.contact;\r\n        }\r\n        else\r\n        {\r\n            this.dialogTitle = 'New Contact';\r\n            this.contact = new Contact({});\r\n        }\r\n\r\n        this.contactForm = this.createContactForm();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Create contact form\r\n     *\r\n     * @returns {FormGroup}\r\n     */\r\n    createContactForm(): FormGroup\r\n    {\r\n        return this._formBuilder.group({\r\n            id      : [this.contact.id],\r\n            name    : [this.contact.name],\r\n            lastName: [this.contact.lastName],\r\n            avatar  : [this.contact.avatar],\r\n            nickname: [this.contact.nickname],\r\n            company : [this.contact.company],\r\n            jobTitle: [this.contact.jobTitle],\r\n            email   : [this.contact.email],\r\n            phone   : [this.contact.phone],\r\n            address : [this.contact.address],\r\n            birthday: [this.contact.birthday],\r\n            notes   : [this.contact.notes]\r\n        });\r\n    }\r\n}\r\n","<div class=\"dialog-content-wrapper\">\r\n    <mat-toolbar matDialogTitle class=\"mat-accent m-0\">\r\n        <mat-toolbar-row fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <span class=\"title dialog-title\">{{dialogTitle}}</span>\r\n            <button mat-icon-button (click)=\"matDialogRef.close()\" aria-label=\"Close dialog\">\r\n                <mat-icon>close</mat-icon>\r\n            </button>\r\n        </mat-toolbar-row>\r\n\r\n        <mat-toolbar-row class=\"toolbar-bottom py-16\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n            <img [src]=\"contact.avatar\" class=\"avatar contact-avatar huge m-0\"\r\n                 [alt]=\"contact.name\"/>\r\n            <div class=\"contact-name mt-8\">{{contact.name}} {{contact.lastName}}</div>\r\n        </mat-toolbar-row>\r\n    </mat-toolbar>\r\n\r\n    <div mat-dialog-content class=\"p-24 pb-0 m-0\" fusePerfectScrollbar>\r\n\r\n        <form [formGroup]=\"contactForm\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n                <mat-form-field appearance=\"outline\" fxFlex>\r\n                    <mat-label>Name</mat-label>\r\n                    <mat-icon matSuffix class=\"secondary-text\">account_circle</mat-icon>\r\n                    <input name=\"name\" formControlName=\"name\" matInput required>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n                <mat-form-field appearance=\"outline\" fxFlex>\r\n                    <mat-label>Lastname</mat-label>\r\n                    <mat-icon matSuffix class=\"secondary-text\">account_circle</mat-icon>\r\n                    <input name=\"lastName\" formControlName=\"lastName\" matInput>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n                <mat-form-field appearance=\"outline\" fxFlex>\r\n                    <mat-label>Nickname</mat-label>\r\n                    <mat-icon matSuffix class=\"secondary-text\">star</mat-icon>\r\n                    <input name=\"nickname\" formControlName=\"nickname\" matInput>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n                <mat-form-field appearance=\"outline\" fxFlex>\r\n                    <mat-label>Phone number</mat-label>\r\n                    <mat-icon matSuffix class=\"secondary-text\">phone</mat-icon>\r\n                    <input formControlName=\"phone\" matInput>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n                <mat-form-field appearance=\"outline\" fxFlex>\r\n                    <mat-label>Email</mat-label>\r\n                    <mat-icon matSuffix class=\"secondary-text\">email</mat-icon>\r\n                    <input name=\"email\" formControlName=\"email\" matInput type=\"email\">\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n                <mat-form-field appearance=\"outline\" fxFlex>\r\n                    <mat-label>Company</mat-label>\r\n                    <mat-icon matSuffix class=\"secondary-text\">domain</mat-icon>\r\n                    <input name=\"company\" formControlName=\"company\" matInput>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n                <mat-form-field appearance=\"outline\" fxFlex>\r\n                    <mat-label>Job title</mat-label>\r\n                    <mat-icon matSuffix class=\"secondary-text\">work</mat-icon>\r\n                    <input name=\"jobTitle\" formControlName=\"jobTitle\" matInput>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n                <mat-form-field appearance=\"outline\" fxFlex>\r\n                    <mat-label>Birthday</mat-label>\r\n                    <input matInput [matDatepicker]=\"birthdayDatePicker\" name=\"birthday\" formControlName=\"birthday\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"birthdayDatePicker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #birthdayDatePicker></mat-datepicker>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n                <mat-form-field appearance=\"outline\" fxFlex>\r\n                    <mat-label>Address</mat-label>\r\n                    <mat-icon matSuffix class=\"secondary-text\">home</mat-icon>\r\n                    <input name=\"address\" formControlName=\"address\" matInput>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" class=\"textarea-wrapper\" fxLayoutAlign=\"start start\">\r\n                <mat-form-field appearance=\"outline\" fxFlex>\r\n                    <mat-label>Notes</mat-label>\r\n                    <textarea name=\"notes\" formControlName=\"notes\" matInput type=\"text\" max-rows=\"4\"></textarea>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n        </form>\r\n\r\n    </div>\r\n\r\n    <div mat-dialog-actions class=\"m-0 p-16\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n\r\n        <button *ngIf=\"action === 'edit'\"\r\n                mat-button\r\n                class=\"mr-8\"\r\n                (click)=\"matDialogRef.close(['delete',contactForm])\"\r\n                aria-label=\"Delete\"\r\n                matTooltip=\"Delete\">\r\n            DELETE\r\n        </button>\r\n\r\n        <button *ngIf=\"action !== 'edit'\"\r\n                mat-button\r\n                class=\"save-button\"\r\n                (click)=\"matDialogRef.close(contactForm)\"\r\n                [disabled]=\"contactForm.invalid\"\r\n                aria-label=\"SAVE\">\r\n            ADD\r\n        </button>\r\n\r\n        <button *ngIf=\"action === 'edit'\"\r\n                mat-button\r\n                class=\"save-button\"\r\n                (click)=\"matDialogRef.close(['save',contactForm])\"\r\n                [disabled]=\"contactForm.invalid\"\r\n                aria-label=\"SAVE\">\r\n            SAVE\r\n        </button>\r\n\r\n    </div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\n\r\nimport { ContactsService } from 'app/main/apps/contacts/contacts.service';\r\nimport { ContactsContactFormDialogComponent } from 'app/main/apps/contacts/contact-form/contact-form.component';\r\n\r\n@Component({\r\n    selector     : 'contacts-contact-list',\r\n    templateUrl  : './contact-list.component.html',\r\n    styleUrls    : ['./contact-list.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class ContactsContactListComponent implements OnInit, OnDestroy\r\n{\r\n    @ViewChild('dialogContent')\r\n    dialogContent: TemplateRef<any>;\r\n\r\n    contacts: any;\r\n    user: any;\r\n    dataSource: FilesDataSource | null;\r\n    displayedColumns = ['checkbox', 'avatar', 'name', 'email', 'phone', 'jobTitle', 'buttons'];\r\n    selectedContacts: any[];\r\n    checkboxes: {};\r\n    dialogRef: any;\r\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ContactsService} _contactsService\r\n     * @param {MatDialog} _matDialog\r\n     */\r\n    constructor(\r\n        private _contactsService: ContactsService,\r\n        public _matDialog: MatDialog\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this.dataSource = new FilesDataSource(this._contactsService);\r\n\r\n        this._contactsService.onContactsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(contacts => {\r\n                this.contacts = contacts;\r\n\r\n                this.checkboxes = {};\r\n                contacts.map(contact => {\r\n                    this.checkboxes[contact.id] = false;\r\n                });\r\n            });\r\n\r\n        this._contactsService.onSelectedContactsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(selectedContacts => {\r\n                for ( const id in this.checkboxes )\r\n                {\r\n                    if ( !this.checkboxes.hasOwnProperty(id) )\r\n                    {\r\n                        continue;\r\n                    }\r\n\r\n                    this.checkboxes[id] = selectedContacts.includes(id);\r\n                }\r\n                this.selectedContacts = selectedContacts;\r\n            });\r\n\r\n        this._contactsService.onUserDataChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(user => {\r\n                this.user = user;\r\n            });\r\n\r\n        this._contactsService.onFilterChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(() => {\r\n                this._contactsService.deselectContacts();\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Edit contact\r\n     *\r\n     * @param contact\r\n     */\r\n    editContact(contact): void\r\n    {\r\n        this.dialogRef = this._matDialog.open(ContactsContactFormDialogComponent, {\r\n            panelClass: 'contact-form-dialog',\r\n            data      : {\r\n                contact: contact,\r\n                action : 'edit'\r\n            }\r\n        });\r\n\r\n        this.dialogRef.afterClosed()\r\n            .subscribe(response => {\r\n                if ( !response )\r\n                {\r\n                    return;\r\n                }\r\n                const actionType: string = response[0];\r\n                const formData: FormGroup = response[1];\r\n                switch ( actionType )\r\n                {\r\n                    /**\r\n                     * Save\r\n                     */\r\n                    case 'save':\r\n\r\n                        this._contactsService.updateContact(formData.getRawValue());\r\n\r\n                        break;\r\n                    /**\r\n                     * Delete\r\n                     */\r\n                    case 'delete':\r\n\r\n                        this.deleteContact(contact);\r\n\r\n                        break;\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Delete Contact\r\n     */\r\n    deleteContact(contact): void\r\n    {\r\n        this.confirmDialogRef = this._matDialog.open(FuseConfirmDialogComponent, {\r\n            disableClose: false\r\n        });\r\n\r\n        this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n        this.confirmDialogRef.afterClosed().subscribe(result => {\r\n            if ( result )\r\n            {\r\n                this._contactsService.deleteContact(contact);\r\n            }\r\n            this.confirmDialogRef = null;\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * On selected change\r\n     *\r\n     * @param contactId\r\n     */\r\n    onSelectedChange(contactId): void\r\n    {\r\n        this._contactsService.toggleSelectedContact(contactId);\r\n    }\r\n\r\n    /**\r\n     * Toggle star\r\n     *\r\n     * @param contactId\r\n     */\r\n    toggleStar(contactId): void\r\n    {\r\n        if ( this.user.starred.includes(contactId) )\r\n        {\r\n            this.user.starred.splice(this.user.starred.indexOf(contactId), 1);\r\n        }\r\n        else\r\n        {\r\n            this.user.starred.push(contactId);\r\n        }\r\n\r\n        this._contactsService.updateUserData(this.user);\r\n    }\r\n}\r\n\r\nexport class FilesDataSource extends DataSource<any>\r\n{\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ContactsService} _contactsService\r\n     */\r\n    constructor(\r\n        private _contactsService: ContactsService\r\n    )\r\n    {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Connect function called by the table to retrieve one stream containing the data to render.\r\n     * @returns {Observable<any[]>}\r\n     */\r\n    connect(): Observable<any[]>\r\n    {\r\n        return this._contactsService.onContactsChanged;\r\n    }\r\n\r\n    /**\r\n     * Disconnect\r\n     */\r\n    disconnect(): void\r\n    {\r\n    }\r\n}\r\n","<mat-table #table [dataSource]=\"dataSource\"\r\n           [@animateStagger]=\"{value:'50'}\">\r\n    <!-- Checkbox Column -->\r\n    <ng-container matColumnDef=\"checkbox\">\r\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\r\n        <mat-cell *matCellDef=\"let contact\">\r\n            <mat-checkbox [(ngModel)]=\"checkboxes[contact.id]\" (ngModelChange)=\"onSelectedChange(contact.id)\"\r\n                          (click)=\"$event.stopPropagation()\">\r\n            </mat-checkbox>\r\n        </mat-cell>\r\n    </ng-container>\r\n\r\n    <!-- Avatar Column -->\r\n    <ng-container matColumnDef=\"avatar\">\r\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\r\n        <mat-cell *matCellDef=\"let contact\">\r\n            <img class=\"avatar\" *ngIf=\"contact.avatar\" [alt]=\"contact.name\"\r\n                 [src]=\"contact.avatar\"/>\r\n        </mat-cell>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n        <mat-header-cell *matHeaderCellDef>Name</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let contact\">\r\n            <p class=\"text-truncate font-weight-600\">{{contact.name}} {{contact.lastName}}</p>\r\n        </mat-cell>\r\n    </ng-container>\r\n\r\n    <!-- Email Column -->\r\n    <ng-container matColumnDef=\"email\">\r\n        <mat-header-cell *matHeaderCellDef fxHide fxShow.gt-sm>Email</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let contact\" fxHide fxShow.gt-sm>\r\n            <p class=\"email text-truncate\">\r\n                {{contact.email}}\r\n            </p>\r\n        </mat-cell>\r\n    </ng-container>\r\n\r\n    <!-- Phone Column -->\r\n    <ng-container matColumnDef=\"phone\">\r\n        <mat-header-cell *matHeaderCellDef fxHide fxShow.gt-md>Phone</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let contact\" fxHide fxShow.gt-md>\r\n            <p class=\"phone text-truncate\">\r\n                {{contact.phone}}\r\n            </p>\r\n        </mat-cell>\r\n    </ng-container>\r\n\r\n    <!-- Job Title Column -->\r\n    <ng-container matColumnDef=\"jobTitle\">\r\n        <mat-header-cell *matHeaderCellDef fxHide fxShow.gt-lg>Job title</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let contact\" fxHide fxShow.gt-lg>\r\n            <p class=\"job-title text-truncate\">\r\n                {{contact.jobTitle}}\r\n            </p>\r\n        </mat-cell>\r\n    </ng-container>\r\n\r\n    <!-- Company Column -->\r\n    <ng-container matColumnDef=\"company\">\r\n        <mat-header-cell *matHeaderCellDef fxHide fxShow.gt-lg>Company</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let contact\" fxHide fxShow.gt-lg>\r\n            <p class=\"company text-truncate\">\r\n                {{contact.company}}\r\n            </p>\r\n        </mat-cell>\r\n    </ng-container>\r\n\r\n    <!-- Buttons Column -->\r\n    <ng-container matColumnDef=\"buttons\">\r\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\r\n        <mat-cell *matCellDef=\"let contact\">\r\n            <div fxFlex=\"row\" fxLayoutAlign=\"end center\">\r\n                <button mat-icon-button (click)=\"$event.stopPropagation();toggleStar(contact.id)\" aria-label=\"Toggle star\">\r\n                    <mat-icon class=\"amber-fg\" *ngIf=\"user.starred.includes(contact.id)\">star</mat-icon>\r\n                    <mat-icon class=\"secondary-text\" *ngIf=\"!user.starred.includes(contact.id)\">star_border</mat-icon>\r\n                </button>\r\n\r\n                <button mat-icon-button [matMenuTriggerFor]=\"moreMenu\" aria-label=\"More\"\r\n                        (click)=\"$event.stopPropagation();\">\r\n                    <mat-icon class=\"secondary-text\">more_vert</mat-icon>\r\n                </button>\r\n\r\n                <mat-menu #moreMenu=\"matMenu\">\r\n                    <button mat-menu-item aria-label=\"remove\" (click)=\"deleteContact(contact)\">\r\n                        <mat-icon>delete</mat-icon>\r\n                        <span>Remove</span>\r\n                    </button>\r\n                </mat-menu>\r\n            </div>\r\n\r\n        </mat-cell>\r\n    </ng-container>\r\n\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let contact; columns: displayedColumns;\"\r\n             class=\"contact\"\r\n             (click)=\"editContact(contact)\"\r\n             [ngClass]=\"{'accent-50':checkboxes[contact.id]}\"\r\n             [@animate]=\"{value:'*',params:{y:'100%'}}\">\r\n    </mat-row>\r\n</mat-table>\r\n\r\n\r\n","import { FuseUtils } from '@fuse/utils';\r\n\r\nexport class Contact\r\n{\r\n    id: string;\r\n    name: string;\r\n    lastName: string;\r\n    avatar: string;\r\n    nickname: string;\r\n    company: string;\r\n    jobTitle: string;\r\n    email: string;\r\n    phone: string;\r\n    address: string;\r\n    birthday: string;\r\n    notes: string;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param contact\r\n     */\r\n    constructor(contact)\r\n    {\r\n        {\r\n            this.id = contact.id || FuseUtils.generateGUID();\r\n            this.name = contact.name || '';\r\n            this.lastName = contact.lastName || '';\r\n            this.avatar = contact.avatar || 'assets/images/avatars/profile.jpg';\r\n            this.nickname = contact.nickname || '';\r\n            this.company = contact.company || '';\r\n            this.jobTitle = contact.jobTitle || '';\r\n            this.email = contact.email || '';\r\n            this.phone = contact.phone || '';\r\n            this.address = contact.address || '';\r\n            this.birthday = contact.birthday || '';\r\n            this.notes = contact.notes || '';\r\n        }\r\n    }\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseSidebarService } from '@fuse/components/sidebar/sidebar.service';\r\n\r\nimport { ContactsService } from 'app/main/apps/contacts/contacts.service';\r\nimport { ContactsContactFormDialogComponent } from 'app/main/apps/contacts/contact-form/contact-form.component';\r\n\r\n@Component({\r\n    selector     : 'contacts',\r\n    templateUrl  : './contacts.component.html',\r\n    styleUrls    : ['./contacts.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class ContactsComponent implements OnInit, OnDestroy\r\n{\r\n    dialogRef: any;\r\n    hasSelectedContacts: boolean;\r\n    searchInput: FormControl;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ContactsService} _contactsService\r\n     * @param {FuseSidebarService} _fuseSidebarService\r\n     * @param {MatDialog} _matDialog\r\n     */\r\n    constructor(\r\n        private _contactsService: ContactsService,\r\n        private _fuseSidebarService: FuseSidebarService,\r\n        private _matDialog: MatDialog\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.searchInput = new FormControl('');\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._contactsService.onSelectedContactsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(selectedContacts => {\r\n                this.hasSelectedContacts = selectedContacts.length > 0;\r\n            });\r\n\r\n        this.searchInput.valueChanges\r\n            .pipe(\r\n                takeUntil(this._unsubscribeAll),\r\n                debounceTime(300),\r\n                distinctUntilChanged()\r\n            )\r\n            .subscribe(searchText => {\r\n                this._contactsService.onSearchTextChanged.next(searchText);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * New contact\r\n     */\r\n    newContact(): void\r\n    {\r\n        this.dialogRef = this._matDialog.open(ContactsContactFormDialogComponent, {\r\n            panelClass: 'contact-form-dialog',\r\n            data      : {\r\n                action: 'new'\r\n            }\r\n        });\r\n\r\n        this.dialogRef.afterClosed()\r\n            .subscribe((response: FormGroup) => {\r\n                if ( !response )\r\n                {\r\n                    return;\r\n                }\r\n\r\n                this._contactsService.updateContact(response.getRawValue());\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Toggle the sidebar\r\n     *\r\n     * @param name\r\n     */\r\n    toggleSidebar(name): void\r\n    {\r\n        this._fuseSidebarService.getSidebar(name).toggleOpen();\r\n    }\r\n}\r\n","<div id=\"contacts\" class=\"page-layout simple left-sidebar inner-sidebar inner-scroll\">\r\n\r\n    <!-- HEADER -->\r\n    <div class=\"header accent p-16 p-sm-24\" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n         fxLayout.gt-xs=\"row\" fxLayoutAlign.gt-xs=\"space-between center\">\r\n\r\n        <!-- APP TITLE -->\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n            <button mat-icon-button class=\"sidebar-toggle mr-12\" fxHide.gt-sm\r\n                    (click)=\"toggleSidebar('contacts-main-sidebar')\">\r\n                <mat-icon>menu</mat-icon>\r\n            </button>\r\n\r\n            <div class=\"logo\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                <mat-icon class=\"logo-icon mr-16\"\r\n                          [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">account_box\r\n                </mat-icon>\r\n                <span class=\"logo-text h1\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">\r\n                    Contacts\r\n                </span>\r\n            </div>\r\n\r\n        </div>\r\n        <!-- / APP TITLE -->\r\n\r\n        <!-- SEARCH -->\r\n        <div class=\"ml-sm-32\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxFlex>\r\n\r\n            <div class=\"search-wrapper mt-16 mt-sm-0\">\r\n\r\n                <div class=\"search\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                    <mat-icon>search</mat-icon>\r\n                    <input [formControl]=\"searchInput\" placeholder=\"Search for a contact\">\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        <!-- / SEARCH -->\r\n\r\n    </div>\r\n    <!-- / HEADER -->\r\n\r\n    <!-- SELECTED BAR -->\r\n    <selected-bar class=\"accent-600\" *ngIf=\"hasSelectedContacts\" [@slideInTop]></selected-bar>\r\n    <!-- / SELECTED BAR -->\r\n\r\n    <!-- CONTENT -->\r\n    <div class=\"content\">\r\n\r\n        <!-- SIDEBAR -->\r\n        <fuse-sidebar class=\"sidebar\" name=\"contacts-main-sidebar\" position=\"left\" lockedOpen=\"gt-sm\">\r\n\r\n            <!-- SIDEBAR CONTENT -->\r\n            <div class=\"content\" fusePerfectScrollbar>\r\n                <contacts-main-sidebar [@animate]=\"{value:'*'}\"></contacts-main-sidebar>\r\n            </div>\r\n            <!-- / SIDEBAR CONTENT -->\r\n\r\n        </fuse-sidebar>\r\n        <!-- / SIDEBAR -->\r\n\r\n        <!-- CENTER -->\r\n        <div class=\"center p-24 pb-56 pr-sm-92\" fusePerfectScrollbar>\r\n\r\n            <!-- CONTENT -->\r\n            <div class=\"content\">\r\n                <contacts-contact-list></contacts-contact-list>\r\n            </div>\r\n            <!-- / CONTENT -->\r\n\r\n        </div>\r\n        <!-- / CENTER -->\r\n\r\n    </div>\r\n    <!-- / CONTENT-->\r\n\r\n</div>\r\n\r\n<!-- ADD CONTACT BUTTON -->\r\n<button mat-fab class=\"accent\" id=\"add-contact-button\" (click)=\"newContact()\" aria-label=\"add contact\"\r\n        [@animate]=\"{value:'*', params:{delay:'300ms',scale:'.2'}}\">\r\n    <mat-icon>person_add</mat-icon>\r\n</button>\r\n<!-- / ADD CONTACT BUTTON -->\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\n\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { FuseConfirmDialogModule, FuseSidebarModule } from '@fuse/components';\r\n\r\nimport { ContactsComponent } from 'app/main/apps/contacts/contacts.component';\r\nimport { ContactsService } from 'app/main/apps/contacts/contacts.service';\r\nimport { ContactsContactListComponent } from 'app/main/apps/contacts/contact-list/contact-list.component';\r\nimport { ContactsSelectedBarComponent } from 'app/main/apps/contacts/selected-bar/selected-bar.component';\r\nimport { ContactsMainSidebarComponent } from 'app/main/apps/contacts/sidebars/main/main.component';\r\nimport { ContactsContactFormDialogComponent } from 'app/main/apps/contacts/contact-form/contact-form.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path     : '**',\r\n        component: ContactsComponent,\r\n        resolve  : {\r\n            contacts: ContactsService\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    declarations   : [\r\n        ContactsComponent,\r\n        ContactsContactListComponent,\r\n        ContactsSelectedBarComponent,\r\n        ContactsMainSidebarComponent,\r\n        ContactsContactFormDialogComponent\r\n    ],\r\n    imports        : [\r\n        RouterModule.forChild(routes),\r\n\r\n        MatButtonModule,\r\n        MatCheckboxModule,\r\n        MatDatepickerModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatMenuModule,\r\n        MatRippleModule,\r\n        MatTableModule,\r\n        MatToolbarModule,\r\n\r\n        FuseSharedModule,\r\n        FuseConfirmDialogModule,\r\n        FuseSidebarModule\r\n    ],\r\n    providers      : [\r\n        ContactsService\r\n    ],\r\n    entryComponents: [\r\n        ContactsContactFormDialogComponent\r\n    ]\r\n})\r\nexport class ContactsModule\r\n{\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\n\r\nimport { FuseUtils } from '@fuse/utils';\r\n\r\nimport { Contact } from 'app/main/apps/contacts/contact.model';\r\n\r\n@Injectable()\r\nexport class ContactsService implements Resolve<any>\r\n{\r\n    onContactsChanged: BehaviorSubject<any>;\r\n    onSelectedContactsChanged: BehaviorSubject<any>;\r\n    onUserDataChanged: BehaviorSubject<any>;\r\n    onSearchTextChanged: Subject<any>;\r\n    onFilterChanged: Subject<any>;\r\n\r\n    contacts: Contact[];\r\n    user: any;\r\n    selectedContacts: string[] = [];\r\n\r\n    searchText: string;\r\n    filterBy: string;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {HttpClient} _httpClient\r\n     */\r\n    constructor(\r\n        private _httpClient: HttpClient\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.onContactsChanged = new BehaviorSubject([]);\r\n        this.onSelectedContactsChanged = new BehaviorSubject([]);\r\n        this.onUserDataChanged = new BehaviorSubject([]);\r\n        this.onSearchTextChanged = new Subject();\r\n        this.onFilterChanged = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Resolver\r\n     *\r\n     * @param {ActivatedRouteSnapshot} route\r\n     * @param {RouterStateSnapshot} state\r\n     * @returns {Observable<any> | Promise<any> | any}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            Promise.all([\r\n                this.getContacts(),\r\n                this.getUserData()\r\n            ]).then(\r\n                ([files]) => {\r\n\r\n                    this.onSearchTextChanged.subscribe(searchText => {\r\n                        this.searchText = searchText;\r\n                        this.getContacts();\r\n                    });\r\n\r\n                    this.onFilterChanged.subscribe(filter => {\r\n                        this.filterBy = filter;\r\n                        this.getContacts();\r\n                    });\r\n\r\n                    resolve();\r\n\r\n                },\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get contacts\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getContacts(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n                this._httpClient.get('api/contacts-contacts')\r\n                    .subscribe((response: any) => {\r\n\r\n                        this.contacts = response;\r\n\r\n                        if ( this.filterBy === 'starred' )\r\n                        {\r\n                            this.contacts = this.contacts.filter(_contact => {\r\n                                return this.user.starred.includes(_contact.id);\r\n                            });\r\n                        }\r\n\r\n                        if ( this.filterBy === 'frequent' )\r\n                        {\r\n                            this.contacts = this.contacts.filter(_contact => {\r\n                                return this.user.frequentContacts.includes(_contact.id);\r\n                            });\r\n                        }\r\n\r\n                        if ( this.searchText && this.searchText !== '' )\r\n                        {\r\n                            this.contacts = FuseUtils.filterArrayByString(this.contacts, this.searchText);\r\n                        }\r\n\r\n                        this.contacts = this.contacts.map(contact => {\r\n                            return new Contact(contact);\r\n                        });\r\n\r\n                        this.onContactsChanged.next(this.contacts);\r\n                        resolve(this.contacts);\r\n                    }, reject);\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Get user data\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getUserData(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n                this._httpClient.get('api/contacts-user/5725a6802d10e277a0f35724')\r\n                    .subscribe((response: any) => {\r\n                        this.user = response;\r\n                        this.onUserDataChanged.next(this.user);\r\n                        resolve(this.user);\r\n                    }, reject);\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Toggle selected contact by id\r\n     *\r\n     * @param id\r\n     */\r\n    toggleSelectedContact(id): void\r\n    {\r\n        // First, check if we already have that contact as selected...\r\n        if ( this.selectedContacts.length > 0 )\r\n        {\r\n            const index = this.selectedContacts.indexOf(id);\r\n\r\n            if ( index !== -1 )\r\n            {\r\n                this.selectedContacts.splice(index, 1);\r\n\r\n                // Trigger the next event\r\n                this.onSelectedContactsChanged.next(this.selectedContacts);\r\n\r\n                // Return\r\n                return;\r\n            }\r\n        }\r\n\r\n        // If we don't have it, push as selected\r\n        this.selectedContacts.push(id);\r\n\r\n        // Trigger the next event\r\n        this.onSelectedContactsChanged.next(this.selectedContacts);\r\n    }\r\n\r\n    /**\r\n     * Toggle select all\r\n     */\r\n    toggleSelectAll(): void\r\n    {\r\n        if ( this.selectedContacts.length > 0 )\r\n        {\r\n            this.deselectContacts();\r\n        }\r\n        else\r\n        {\r\n            this.selectContacts();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Select contacts\r\n     *\r\n     * @param filterParameter\r\n     * @param filterValue\r\n     */\r\n    selectContacts(filterParameter?, filterValue?): void\r\n    {\r\n        this.selectedContacts = [];\r\n\r\n        // If there is no filter, select all contacts\r\n        if ( filterParameter === undefined || filterValue === undefined )\r\n        {\r\n            this.selectedContacts = [];\r\n            this.contacts.map(contact => {\r\n                this.selectedContacts.push(contact.id);\r\n            });\r\n        }\r\n\r\n        // Trigger the next event\r\n        this.onSelectedContactsChanged.next(this.selectedContacts);\r\n    }\r\n\r\n    /**\r\n     * Update contact\r\n     *\r\n     * @param contact\r\n     * @returns {Promise<any>}\r\n     */\r\n    updateContact(contact): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._httpClient.post('api/contacts-contacts/' + contact.id, {...contact})\r\n                .subscribe(response => {\r\n                    this.getContacts();\r\n                    resolve(response);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update user data\r\n     *\r\n     * @param userData\r\n     * @returns {Promise<any>}\r\n     */\r\n    updateUserData(userData): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.post('api/contacts-user/' + this.user.id, {...userData})\r\n                .subscribe(response => {\r\n                    this.getUserData();\r\n                    this.getContacts();\r\n                    resolve(response);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Deselect contacts\r\n     */\r\n    deselectContacts(): void\r\n    {\r\n        this.selectedContacts = [];\r\n\r\n        // Trigger the next event\r\n        this.onSelectedContactsChanged.next(this.selectedContacts);\r\n    }\r\n\r\n    /**\r\n     * Delete contact\r\n     *\r\n     * @param contact\r\n     */\r\n    deleteContact(contact): void\r\n    {\r\n        const contactIndex = this.contacts.indexOf(contact);\r\n        this.contacts.splice(contactIndex, 1);\r\n        this.onContactsChanged.next(this.contacts);\r\n    }\r\n\r\n    /**\r\n     * Delete selected contacts\r\n     */\r\n    deleteSelectedContacts(): void\r\n    {\r\n        for ( const contactId of this.selectedContacts )\r\n        {\r\n            const contact = this.contacts.find(_contact => {\r\n                return _contact.id === contactId;\r\n            });\r\n            const contactIndex = this.contacts.indexOf(contact);\r\n            this.contacts.splice(contactIndex, 1);\r\n        }\r\n        this.onContactsChanged.next(this.contacts);\r\n        this.deselectContacts();\r\n    }\r\n\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\n\r\nimport { ContactsService } from 'app/main/apps/contacts/contacts.service';\r\n\r\n@Component({\r\n    selector   : 'selected-bar',\r\n    templateUrl: './selected-bar.component.html',\r\n    styleUrls  : ['./selected-bar.component.scss']\r\n})\r\nexport class ContactsSelectedBarComponent implements OnInit, OnDestroy\r\n{\r\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n    hasSelectedContacts: boolean;\r\n    isIndeterminate: boolean;\r\n    selectedContacts: string[];\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ContactsService} _contactsService\r\n     * @param {MatDialog} _matDialog\r\n     */\r\n    constructor(\r\n        private _contactsService: ContactsService,\r\n        public _matDialog: MatDialog\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._contactsService.onSelectedContactsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(selectedContacts => {\r\n                this.selectedContacts = selectedContacts;\r\n                setTimeout(() => {\r\n                    this.hasSelectedContacts = selectedContacts.length > 0;\r\n                    this.isIndeterminate = (selectedContacts.length !== this._contactsService.contacts.length && selectedContacts.length > 0);\r\n                }, 0);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Select all\r\n     */\r\n    selectAll(): void\r\n    {\r\n        this._contactsService.selectContacts();\r\n    }\r\n\r\n    /**\r\n     * Deselect all\r\n     */\r\n    deselectAll(): void\r\n    {\r\n        this._contactsService.deselectContacts();\r\n    }\r\n\r\n    /**\r\n     * Delete selected contacts\r\n     */\r\n    deleteSelectedContacts(): void\r\n    {\r\n        this.confirmDialogRef = this._matDialog.open(FuseConfirmDialogComponent, {\r\n            disableClose: false\r\n        });\r\n\r\n        this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete all selected contacts?';\r\n\r\n        this.confirmDialogRef.afterClosed()\r\n            .subscribe(result => {\r\n                if ( result )\r\n                {\r\n                    this._contactsService.deleteSelectedContacts();\r\n                }\r\n                this.confirmDialogRef = null;\r\n            });\r\n    }\r\n}\r\n","<div fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"p-24\">\r\n\r\n    <div class=\"close-button-wrapper\" fxFlex=\"0 1 auto\" fxFlex.gt-sm=\"220px\" (click)=\"deselectAll()\">\r\n        <button class=\"p-8\" mat-button fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n            <mat-icon class=\"mr-8\">arrow_back</mat-icon>\r\n            <span class=\"text-uppercase\">Back</span>\r\n        </button>\r\n    </div>\r\n\r\n    <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutAlign.gt-sm=\"space-between center\">\r\n\r\n        <div>\r\n            <span class=\"selected-contacts-count\">\r\n                <span class=\"mr-4\">{{selectedContacts.length}}</span>\r\n                <span>selected</span>\r\n            </span>\r\n\r\n            <button mat-icon-button [matMenuTriggerFor]=\"selectMenu\">\r\n                <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n            <mat-menu #selectMenu=\"matMenu\">\r\n                <button mat-menu-item (click)=\"selectAll()\">Select all</button>\r\n                <button mat-menu-item (click)=\"deselectAll()\">Deselect all</button>\r\n            </mat-menu>\r\n\r\n        </div>\r\n\r\n        <div class=\"multi-select-actions\">\r\n            <button mat-icon-button (click)=\"deleteSelectedContacts()\" aria-label=\"delete selected\">\r\n                <mat-icon>delete</mat-icon>\r\n            </button>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { ContactsService } from 'app/main/apps/contacts/contacts.service';\r\n\r\n@Component({\r\n    selector   : 'contacts-main-sidebar',\r\n    templateUrl: './main.component.html',\r\n    styleUrls  : ['./main.component.scss']\r\n})\r\nexport class ContactsMainSidebarComponent implements OnInit, OnDestroy\r\n{\r\n    user: any;\r\n    filterBy: string;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ContactsService} _contactsService\r\n     */\r\n    constructor(\r\n        private _contactsService: ContactsService\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this.filterBy = this._contactsService.filterBy || 'all';\r\n\r\n        this._contactsService.onUserDataChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(user => {\r\n                this.user = user;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Change the filter\r\n     *\r\n     * @param filter\r\n     */\r\n    changeFilter(filter): void\r\n    {\r\n        this.filterBy = filter;\r\n        this._contactsService.onFilterChanged.next(this.filterBy);\r\n    }\r\n}\r\n","<div class=\"sidebar-content\">\r\n\r\n    <div class=\"card\">\r\n\r\n        <!-- SIDEBAR HEADER -->\r\n        <div class=\"header p-24\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n            <!-- USER -->\r\n            <img [src]=\"user.avatar\" class=\"avatar mr-16\" [alt]=\"user.name\"/>\r\n            <span class=\"h5\">{{user.name}}</span>\r\n            <!-- / USER -->\r\n\r\n        </div>\r\n        <!-- / SIDEBAR HEADER -->\r\n\r\n        <!-- SIDEBAR CONTENT -->\r\n        <div class=\"content py-16\" fusePerfectScrollbar>\r\n\r\n            <div class=\"nav material2\">\r\n\r\n                <div class=\"nav-item\" aria-label=\"inbox\">\r\n                    <a class=\"nav-link\" matRipple (click)=\"changeFilter('all')\"\r\n                       [ngClass]=\"{'active accent':filterBy ==='all'}\">\r\n                        <span class=\"title\">All Contacts</span>\r\n                    </a>\r\n                </div>\r\n\r\n                <div class=\"nav-item\" aria-label=\"frequently contacted\" (click)=\"changeFilter('frequent')\">\r\n                    <a class=\"nav-link\" matRipple [ngClass]=\"{'active accent':filterBy ==='frequent'}\">\r\n                        <div class=\"title\">Freequently contacted</div>\r\n                    </a>\r\n                </div>\r\n\r\n                <div class=\"nav-item\" aria-label=\"starred\" (click)=\"changeFilter('starred')\">\r\n                    <a class=\"nav-link\" matRipple [ngClass]=\"{'active accent':filterBy ==='starred'}\">\r\n                        <div class=\"title\">Starred Contacts</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n<!-- / SIDEBAR CONTENT -->\r\n"]}