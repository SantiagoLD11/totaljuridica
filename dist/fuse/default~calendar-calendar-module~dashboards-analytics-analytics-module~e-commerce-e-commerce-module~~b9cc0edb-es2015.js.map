{"version":3,"sources":["./src/app/main/pages/authentication/login-2/login.service.ts"],"names":[],"mappings":"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","file":"default~calendar-calendar-module~dashboards-analytics-analytics-module~e-commerce-e-commerce-module~~b9cc0edb-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { environment } from 'environments/environment';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport interface UserDetails {\r\n    id: string;\r\n    streetAddr1: string;\r\n    email: string;\r\n    phone: string;\r\n    Pagina_Web: string;\r\n    R8184516: string;\r\n}\r\n\r\ninterface TokenResponse {\r\n    sessionId: string;\r\n    status: number;\r\n}\r\n\r\ninterface TokenResponseid {\r\n    id: string;\r\n}\r\n\r\nexport interface TokenPayload {\r\n    email: string;\r\n    password: string;\r\n    name?: string;\r\n}\r\n\r\n@Injectable()\r\nexport class LoginService\r\n{\r\n    routeParams: any;\r\n    token: any;\r\n    tipo: any;\r\n    onOrderChanged: BehaviorSubject<any>;\r\n    private id: string;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {HttpClient} _httpClient\r\n     */\r\n    constructor(\r\n        private http: HttpClient\r\n    )\r\n    {\r\n\r\n    }\r\n\r\n    public saveTipo(tipo: string): void {\r\n        this.setLocalItem('tipo-contacto', tipo, this.getTimeExpire());\r\n        this.tipo = tipo;\r\n    }\r\n\r\n    public getTipo(): string {\r\n        let tipo = this.getLocalItem('tipo-contacto');\r\n        return tipo;\r\n    }\r\n\r\n    public saveToken(token: string): void {\r\n        this.setLocalItem('mean-token', token, this.getTimeExpire());\r\n        this.token = token;\r\n    }\r\n\r\n    public getToken(): string {\r\n        let LocalItem = this.getLocalItem('mean-token');\r\n        return LocalItem;\r\n    }\r\n\r\n    private saveId(id: string): void {\r\n        this.setLocalItem('mean-id', id, this.getTimeExpire());\r\n        this.id = id;\r\n    }\r\n\r\n    private saveContactoId(id: string): void {\r\n        this.setLocalItem('contactoId', id, this.getTimeExpire());\r\n    }\r\n\r\n    setLocalItem(key, id, time?) {\r\n        time = time || 0;\r\n        let timestamp = this.setTimeToLive(time);\r\n        let storageObj = {\r\n            'timestamp': timestamp,\r\n            'value': id\r\n        };\r\n        //console.log('lo que se va a almacenar en el storage ' + key);\r\n        //console.log(storageObj);\r\n        sessionStorage.setItem(key, JSON.stringify(storageObj));\r\n    }\r\n\r\n    //funcion get\r\n    getLocalItem(key) {\r\n        let storage = sessionStorage.getItem(key);\r\n        //console.log('lo que tiene el storage en el get ' + key);\r\n        //console.log(storage);\r\n        let item = null;\r\n\r\n        if (storage) {\r\n            item = JSON.parse(storage);\r\n        }\r\n\r\n        if (item) { // If item exists evaluate, else return\r\n            let time = this.evaluateTimeToLive(item.timestamp);\r\n            if (time) {\r\n                //console.log('el tiempo de vida es correcto');\r\n                return item.value;\r\n            } else {\r\n                //console.log('no alcanzo');\r\n                sessionStorage.removeItem(key);\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    setTimeToLive(lifespan) {\r\n        let currentTime = new Date().getTime();\r\n        let timeToLive;\r\n        if (lifespan !== 0) {\r\n            timeToLive = currentTime + lifespan;\r\n        } else {\r\n            timeToLive = 0; // Lifespan is now infinite and dependent only browser\r\n        }\r\n        return timeToLive;\r\n    }\r\n\r\n    // obtiene la fecha actual y suma el tiempo limite de sesión\r\n    getTimeExpire() {\r\n        var min = 60 * 1000;\r\n        var after = 30 * min;\r\n        return after;\r\n    }\r\n\r\n    //Evalua el tiempo determina para la sesión\r\n    evaluateTimeToLive(timestamp) {\r\n\r\n        //console.log('la fecha a evaluar');\r\n        //console.log(timestamp);\r\n        let currentTime = new Date().getTime();\r\n        if (currentTime <= timestamp || timestamp === 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // tslint:disable-next-line:comment-format\r\n    //remove the item session from the storage\r\n    removeLocalItem(key) {\r\n        return sessionStorage.removeItem(key);\r\n    }\r\n\r\n    public getId(): string {\r\n        let id = this.getLocalItem('mean-id');\r\n        return id;\r\n    }\r\n\r\n    public getUserDetails(): UserDetails {\r\n        const token = this.getToken();\r\n        let payload;\r\n        if (token) {\r\n            payload = token.split('.')[1];\r\n            payload = window.atob(payload);\r\n            return JSON.parse(payload);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public getIdUserLoggedIn(): string {\r\n        return this.getId();\r\n    }\r\n\r\n    public isLoggedIn(): boolean {\r\n        const user = this.getToken();\r\n        if (user) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private request(method: 'post' | 'get', type: 'login' | 'register' | 'profile', user?: TokenPayload): Observable<any> {\r\n        let base;\r\n\r\n        if (method === 'get') {\r\n            //console.log('lega aaaa');\r\n            base = this.http.get(`${environment.url}rest/api/login?loginName=${environment.usr}&password=${environment.pass}&output=json`); //, user);\r\n        } else {\r\n            // base = this.http.post(`/api/${type}`, { headers: { Authorization: `Bearer ${this.getToken()}` }});\r\n        }\r\n\r\n        const request = base.pipe(\r\n            map((data: TokenResponse) => {\r\n                console.log(data);\r\n                if (data.sessionId) {\r\n                    //this.getIdUser(user.email, user.password);\r\n                }\r\n                return data;\r\n            })\r\n        );\r\n        return request;\r\n    }\r\n\r\n    public getIdUser(username: string, password: string, sessionId: string): Observable<any> {\r\n        let query = \"select R15454162,name,id,tipo%23value from Contacto where Usuario_Portal ='\" + username + encodeURI(\"'\") + \" and Password_Portal='\" + password + encodeURI(\"'\");\r\n        let url = `${environment.url}rest/api/selectQuery?maxRows=1000&query=` + query + \"&sessionId=\" + sessionId + \"&output=json&maxRows=1\";\r\n        let base = this.http.get(url);\r\n        const request = base.pipe(\r\n            map((data) => {\r\n                if ((data != \"\") && (data != undefined)) {\r\n                    this.SaveProfile(JSON.stringify(data[0]));\r\n                    this.saveContactoId(data[0][2]);\r\n                    this.saveTipo(data[0][3]);\r\n                    //this.getEnterpriseId(data[0][0], sessionId);\r\n\r\n                    this.saveId(data[0][0]);\r\n                    this.saveToken(sessionId);\r\n                } else {\r\n                    this.saveContactoId('');\r\n                    this.SaveProfile(\"\");\r\n                    this.saveId(\"\");\r\n                    this.saveToken(\"\");\r\n                    this.saveTipo(\"\");\r\n                    return Observable.throw(\"Error al loguear\");\r\n                }\r\n                return data;\r\n            })\r\n        );\r\n        return request;\r\n    }\r\n\r\n    public getIdUserByEmail(username: string, sessionId: string): Observable<any> {\r\n        let query = encodeURI(\"select id,name,Correo_Electronico,Telefono_movil,NombreCiudad,contrasea,id,NombreDepartamento from Contactos where Correo_Electronico='\") + username + encodeURI(\"'\");\r\n        let url = `${environment.url}rest/api/selectQuery?maxRows=1000&query=` + query + \"&sessionId=\" + sessionId + \"&output=json&maxRows=1\";\r\n        let base = this.http.get(url);\r\n        const request = base.pipe(\r\n            map((data) => {\r\n                if ((data != \"\") && (data != undefined)) {\r\n                    return data;\r\n                } else {\r\n                    return Observable.throw(\"Error al loguear\");\r\n                }\r\n            })\r\n        );\r\n        return request;\r\n    }\r\n\r\n\r\n    public getEnterpriseId(idCustomer: string, sessionid: string): Observable<any> {\r\n        // solo status = Creado o con este id: 8168024 lo deja pasar\r\n        const query = encodeURI(`Select Razon_Social,NIT,Telefono,Direccion,URL_Logo,IdCiudadTxt from Cliente1 where id =${idCustomer}`);\r\n        const url = `${environment.url}rest/api/selectQuery?maxRows=1000&query=` + query + \"&sessionId=\" + sessionid + \"&output=json&maxRows=10000\";\r\n        let base;\r\n        base = this.http.get(url);\r\n        return base.pipe(\r\n            map((res) => {\r\n                if (res[0]) {\r\n                    this.setCiudadesTxt(res[0][5]);\r\n                    this.saveEnterpriseData(res.toString());\r\n                }\r\n                return res;\r\n            })\r\n        );\r\n    }\r\n\r\n    public getLoginPersona(username: string, password: string, sessionId: string): Observable<any> {\r\n        this.saveToken(sessionId);\r\n        let query = encodeURI(`select id,name,Numero_Documento,email from Candidato where Numero_Documento='${username}' and Password_Paciente='${password}'`);\r\n        let url = `${environment.url}rest/api/selectQuery?maxRows=1000&query=${query}&sessionId=${sessionId}&output=json&maxRows=1`;\r\n        let base = this.http.get(url);\r\n        const request = base.pipe(\r\n            map((data) => {\r\n                if ((data != \"\") && (data != undefined)) {\r\n                    this.SaveProfile(JSON.stringify(data[0]));\r\n                    return data;\r\n                } else {\r\n                    return Observable.throw(\"Error al loguear\");\r\n                }\r\n            })\r\n        );\r\n        return request;\r\n    }\r\n\r\n    private saveEnterpriseData(entData) {\r\n        sessionStorage.setItem(\"EntrepriseData\", entData);\r\n    }\r\n\r\n    public GetEnterpriseData() {\r\n        return sessionStorage.getItem(\"EntrepriseData\");\r\n    }\r\n\r\n    private getContactData(CommercialId: string, sessionid: string) {\r\n        let query = encodeURI(\"select name,phone,mobilePhone,email from usuarios where id='\") + CommercialId + encodeURI(\"'\");\r\n        let url = `${environment.url}rest/api/selectQuery?maxRows=1000&query=` + query + \"&sessionId=\" + sessionid + \"&output=json&maxRows=10000\";\r\n\r\n        let base;\r\n        base = this.http.get(url);\r\n\r\n        this.http.get(url).subscribe(res => {\r\n            if (res[0]) {\r\n                this.SaveContactData(JSON.stringify(res[0]));\r\n            }\r\n        });\r\n    }\r\n\r\n    private SaveContactData(ContactData) {\r\n        sessionStorage.setItem(\"ContactData\", ContactData);\r\n    }\r\n\r\n    public GetContactData() {\r\n        return (sessionStorage.getItem(\"ContactData\"));\r\n    }\r\n\r\n    public setEmailLogin(email) {\r\n        sessionStorage.setItem(\"emailLogin\", email);\r\n    }\r\n\r\n    public getEmailLogin() {\r\n        return sessionStorage.getItem(\"emailLogin\");\r\n    }\r\n\r\n    public setLineaNegocio(linea) {\r\n        //console.log(\"la linea \" + linea);\r\n        sessionStorage.setItem(\"lineaNegocio\", linea);\r\n    }\r\n\r\n    public getLineaNegocio() {\r\n        //console.log(\"la que entrega linea \" + sessionStorage.getItem(\"lineaNegocio\"));\r\n        return sessionStorage.getItem(\"lineaNegocio\");\r\n    }\r\n\r\n    public setCiudadesTxt(ciudades) {\r\n        //console.log(\"la linea \" + linea);\r\n        sessionStorage.setItem(\"ciudadesTxt\", ciudades);\r\n    }\r\n\r\n    public getCiudadesTxt() {\r\n        //console.log(\"la que entrega linea \" + sessionStorage.getItem(\"lineaNegocio\"));\r\n        return sessionStorage.getItem(\"ciudadesTxt\");\r\n    }\r\n\r\n    public setLogo(linea) {\r\n        //console.log(\"el logo \" + linea);\r\n        sessionStorage.setItem(\"logo\", linea);\r\n    }\r\n\r\n    public getLogo() {\r\n        //console.log(\"getLogo \" + sessionStorage.getItem(\"logo\"));\r\n        return sessionStorage.getItem(\"logo\");\r\n    }\r\n\r\n\r\n    private SaveProfile(profile) {\r\n        sessionStorage.setItem(\"Profile\", profile);\r\n    }\r\n    public GetProfile() {\r\n        var profile = sessionStorage.getItem(\"Profile\");\r\n        return profile;\r\n    }\r\n\r\n    public register(user: TokenPayload): Observable<any> {\r\n        return this.request('post', 'register', user);\r\n    }\r\n\r\n    public login(user: TokenPayload): Observable<any> {\r\n        return this.request('get', 'login', user);\r\n    }\r\n\r\n    public loginPersona(user: string, password, session): Observable<any> {\r\n        return this.getLoginPersona(user, password, session);\r\n    }\r\n\r\n    public profile(): Observable<any> {\r\n        return this.request('get', 'profile');\r\n    }\r\n\r\n    public logout(): void {\r\n        this.SaveProfile(\"\");\r\n        this.saveId(\"\");\r\n        this.saveToken(\"\");\r\n        //this.router.navigateByUrl('/authentication/login');\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}