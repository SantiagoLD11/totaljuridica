{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js","webpack:///src/app/main/apps/chat/chat-start/chat-start.component.ts","webpack:///src/app/main/apps/chat/chat-start/chat-start.component.html","webpack:///src/app/main/apps/chat/chat-view/chat-view.component.ts","webpack:///src/app/main/apps/chat/chat-view/chat-view.component.html","webpack:///src/app/main/apps/chat/chat.component.ts","webpack:///src/app/main/apps/chat/chat.component.html","webpack:///src/app/main/apps/chat/chat.module.ts","webpack:///src/app/main/apps/chat/chat.service.ts","webpack:///src/app/main/apps/chat/sidenavs/left/chats/chats.component.ts","webpack:///src/app/main/apps/chat/sidenavs/left/chats/chats.component.html","webpack:///src/app/main/apps/chat/sidenavs/left/left.component.ts","webpack:///src/app/main/apps/chat/sidenavs/left/left.component.html","webpack:///src/app/main/apps/chat/sidenavs/left/user/user.component.ts","webpack:///src/app/main/apps/chat/sidenavs/left/user/user.component.html","webpack:///src/app/main/apps/chat/sidenavs/right/contact/contact.component.ts","webpack:///src/app/main/apps/chat/sidenavs/right/contact/contact.component.html","webpack:///src/app/main/apps/chat/sidenavs/right/right.component.ts","webpack:///src/app/main/apps/chat/sidenavs/right/right.component.html"],"names":["_c0","_c1","_c2","_c3","_c4","_c5","MatCardContent","ɵfac","MatCardContent_Factory","t","ɵdir","type","selectors","hostAttrs","args","selector","host","MatCardTitle","MatCardTitle_Factory","MatCardSubtitle","MatCardSubtitle_Factory","MatCardActions","align","MatCardActions_Factory","hostVars","hostBindings","MatCardActions_HostBindings","rf","ctx","inputs","exportAs","propDecorators","MatCardFooter","MatCardFooter_Factory","MatCardImage","MatCardImage_Factory","MatCardSmImage","MatCardSmImage_Factory","MatCardMdImage","MatCardMdImage_Factory","MatCardLgImage","MatCardLgImage_Factory","MatCardXlImage","MatCardXlImage_Factory","MatCardAvatar","MatCardAvatar_Factory","MatCard","_animationMode","MatCard_Factory","ɵcmp","MatCard_HostBindings","ngContentSelectors","decls","vars","template","MatCard_Template","styles","encapsulation","changeDetection","ctorParameters","String","decorators","None","OnPush","MatCardHeader","MatCardHeader_Factory","consts","MatCardHeader_Template","MatCardTitleGroup","MatCardTitleGroup_Factory","MatCardTitleGroup_Template","MatCardModule","ɵmod","ɵinj","factory","MatCardModule_Factory","imports","ngJitMode","declarations","exports","ChatStartComponent","templateUrl","styleUrls","animations","ChatViewComponent","_chatService","_unsubscribeAll","user","onChatSelected","pipe","subscribe","chatData","selectedChat","contact","dialog","readyToReply","replyInput","replyInputField","first","nativeElement","next","complete","message","i","who","id","length","selectContact","setTimeout","focusReplyInput","scrollToBottom","focus","speed","directiveScroll","update","event","preventDefault","replyForm","form","value","time","Date","toISOString","push","reset","updateDialog","chatId","then","response","reply","ChatComponent","routes","path","component","children","resolve","chat","ChatModule","forChild","providers","ChatService","_httpClient","onContactSelected","onChatsUpdated","onUserUpdated","onLeftSidenavViewChanged","onRightSidenavViewChanged","route","state","Promise","reject","all","getContacts","getChats","getUser","contacts","chats","contactId","chatItem","chatList","find","item","createNewChat","newChats","getChat","get","chatContact","generateGUID","chatListItem","lastMessageTime","name","unread","post","newUserData","updatedUser","status","userData","newData","updatedChat","ChatChatsSidenavComponent","_fuseMatSidenavHelperService","_mediaObserver","chatSearch","searchText","updatedChats","isActive","getSidenav","toggle","setUserStatus","view","console","log","changeLeftSidenavView","logout","ChatLeftSidenavComponent","ChatUserSidenavComponent","userForm","mood","valueChanges","data","updateUserData","ChatContactSidenavComponent","ChatRightSidenavComponent"],"mappings":"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","file":"chat-chat-module-es5.js","sourcesContent":["import { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/card.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\", [[\"mat-card-footer\"]]];\nconst _c1 = [\"*\", \"mat-card-footer\"];\nconst _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nconst _c5 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\nclass MatCardContent {\n}\nMatCardContent.ɵfac = function MatCardContent_Factory(t) { return new (t || MatCardContent)(); };\nMatCardContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardContent, selectors: [[\"mat-card-content\"], [\"\", \"mat-card-content\", \"\"], [\"\", \"matCardContent\", \"\"]], hostAttrs: [1, \"mat-card-content\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                host: { 'class': 'mat-card-content' }\n            }]\n    }], null, null); })();\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardTitle {\n}\nMatCardTitle.ɵfac = function MatCardTitle_Factory(t) { return new (t || MatCardTitle)(); };\nMatCardTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardTitle, selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]], hostAttrs: [1, \"mat-card-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                host: {\n                    'class': 'mat-card-title'\n                }\n            }]\n    }], null, null); })();\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardSubtitle {\n}\nMatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) { return new (t || MatCardSubtitle)(); };\nMatCardSubtitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSubtitle, selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], hostAttrs: [1, \"mat-card-subtitle\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                host: {\n                    'class': 'mat-card-subtitle'\n                }\n            }]\n    }], null, null); })();\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardActions {\n    constructor() {\n        /**\n         * Position of the actions inside the card.\n         */\n        this.align = 'start';\n    }\n}\nMatCardActions.ɵfac = function MatCardActions_Factory(t) { return new (t || MatCardActions)(); };\nMatCardActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardActions, selectors: [[\"mat-card-actions\"]], hostAttrs: [1, \"mat-card-actions\"], hostVars: 2, hostBindings: function MatCardActions_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\" }, exportAs: [\"matCardActions\"] });\nMatCardActions.propDecorators = {\n    align: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-actions',\n                exportAs: 'matCardActions',\n                host: {\n                    'class': 'mat-card-actions',\n                    '[class.mat-card-actions-align-end]': 'align === \"end\"'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Position of the actions inside the card.\n     * @type {?}\n     */\n    MatCardActions.prototype.align;\n}\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardFooter {\n}\nMatCardFooter.ɵfac = function MatCardFooter_Factory(t) { return new (t || MatCardFooter)(); };\nMatCardFooter.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardFooter, selectors: [[\"mat-card-footer\"]], hostAttrs: [1, \"mat-card-footer\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-footer',\n                host: { 'class': 'mat-card-footer' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardImage {\n}\nMatCardImage.ɵfac = function MatCardImage_Factory(t) { return new (t || MatCardImage)(); };\nMatCardImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardImage, selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]], hostAttrs: [1, \"mat-card-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-image], [matCardImage]',\n                host: { 'class': 'mat-card-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardSmImage {\n}\nMatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) { return new (t || MatCardSmImage)(); };\nMatCardSmImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSmImage, selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]], hostAttrs: [1, \"mat-card-sm-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-sm-image], [matCardImageSmall]',\n                host: { 'class': 'mat-card-sm-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardMdImage {\n}\nMatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) { return new (t || MatCardMdImage)(); };\nMatCardMdImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardMdImage, selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]], hostAttrs: [1, \"mat-card-md-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-md-image], [matCardImageMedium]',\n                host: { 'class': 'mat-card-md-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardLgImage {\n}\nMatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) { return new (t || MatCardLgImage)(); };\nMatCardLgImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardLgImage, selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]], hostAttrs: [1, \"mat-card-lg-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-lg-image], [matCardImageLarge]',\n                host: { 'class': 'mat-card-lg-image' }\n            }]\n    }], null, null); })();\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardXlImage {\n}\nMatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) { return new (t || MatCardXlImage)(); };\nMatCardXlImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardXlImage, selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], hostAttrs: [1, \"mat-card-xl-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                host: { 'class': 'mat-card-xl-image' }\n            }]\n    }], null, null); })();\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardAvatar {\n}\nMatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) { return new (t || MatCardAvatar)(); };\nMatCardAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardAvatar, selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], hostAttrs: [1, \"mat-card-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-avatar], [matCardAvatar]',\n                host: { 'class': 'mat-card-avatar' }\n            }]\n    }], null, null); })();\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nclass MatCard {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    /**\n     * @param {?=} _animationMode\n     */\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n}\nMatCard.ɵfac = function MatCard_Factory(t) { return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatCard.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCard, selectors: [[\"mat-card\"]], hostAttrs: [1, \"mat-card\"], hostVars: 2, hostBindings: function MatCard_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, exportAs: [\"matCard\"], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatCard_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCard.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCard, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card',\n                exportAs: 'matCard',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-card',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatCard.prototype._animationMode;\n}\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * \\@docs-private\n */\nclass MatCardHeader {\n}\nMatCardHeader.ɵfac = function MatCardHeader_Factory(t) { return new (t || MatCardHeader)(); };\nMatCardHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardHeader, selectors: [[\"mat-card-header\"]], hostAttrs: [1, \"mat-card-header\"], ngContentSelectors: _c3, decls: 4, vars: 0, consts: [[1, \"mat-card-header-text\"]], template: function MatCardHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-header',\n                template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-header' }\n            }]\n    }], null, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * \\@docs-private\n */\nclass MatCardTitleGroup {\n}\nMatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) { return new (t || MatCardTitleGroup)(); };\nMatCardTitleGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardTitleGroup, selectors: [[\"mat-card-title-group\"]], hostAttrs: [1, \"mat-card-title-group\"], ngContentSelectors: _c5, decls: 4, vars: 0, template: function MatCardTitleGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-title-group',\n                template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-title-group' }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/card-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatCardModule {\n}\nMatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });\nMatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCardModule_Factory(t) { return new (t || MatCardModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [\n                    MatCard,\n                    MatCardHeader,\n                    MatCardTitleGroup,\n                    MatCardContent,\n                    MatCardTitle,\n                    MatCardSubtitle,\n                    MatCardActions,\n                    MatCardFooter,\n                    MatCardSmImage,\n                    MatCardMdImage,\n                    MatCardLgImage,\n                    MatCardImage,\n                    MatCardXlImage,\n                    MatCardAvatar,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                    MatCardXlImage, MatCardAvatar,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n\n//# sourceMappingURL=card.js.map","import { Component, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\n@Component({\r\n    selector     : 'chat-start',\r\n    templateUrl  : './chat-start.component.html',\r\n    styleUrls    : ['./chat-start.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class ChatStartComponent\r\n{\r\n    constructor()\r\n    {\r\n    }\r\n}\r\n","<div fxFlex fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n\r\n    <div class=\"big-circle app-logo\" fxLayout=\"column\" fxLayoutAlign=\"center center\"\r\n         [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\r\n        <mat-icon class=\"s-64 s-md-128 mat-accent\">chat</mat-icon>\r\n    </div>\r\n\r\n    <span class=\"app-title mt-48 mb-8\" [@animate]=\"{value:'*',params:{delay:'100ms',y:'25px'}}\">\r\n        Chat App\r\n    </span>\r\n\r\n    <span fxHide fxShow.gt-md class=\"app-message\" [@animate]=\"{value:'*',params:{delay:'200ms',y:'50px'}}\">\r\n        Select a contact to start a chat!\r\n    </span>\r\n\r\n    <button mat-raised-button fxHide.gt-md fuseMatSidenavToggler=\"chat-left-sidenav\">\r\n        Select a contact to start a chat!\r\n    </button>\r\n\r\n</div>\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild, ViewChildren, ViewEncapsulation } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { FusePerfectScrollbarDirective } from '@fuse/directives/fuse-perfect-scrollbar/fuse-perfect-scrollbar.directive';\r\n\r\nimport { ChatService } from 'app/main/apps/chat/chat.service';\r\n\r\n@Component({\r\n    selector     : 'chat-view',\r\n    templateUrl  : './chat-view.component.html',\r\n    styleUrls    : ['./chat-view.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ChatViewComponent implements OnInit, OnDestroy, AfterViewInit\r\n{\r\n    user: any;\r\n    chat: any;\r\n    dialog: any;\r\n    contact: any;\r\n    replyInput: any;\r\n    selectedChat: any;\r\n\r\n    @ViewChild(FusePerfectScrollbarDirective)\r\n    directiveScroll: FusePerfectScrollbarDirective;\r\n\r\n    @ViewChildren('replyInput')\r\n    replyInputField;\r\n\r\n    @ViewChild('replyForm')\r\n    replyForm: NgForm;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ChatService} _chatService\r\n     */\r\n    constructor(\r\n        private _chatService: ChatService\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this.user = this._chatService.user;\r\n        this._chatService.onChatSelected\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(chatData => {\r\n                if ( chatData )\r\n                {\r\n                    this.selectedChat = chatData;\r\n                    this.contact = chatData.contact;\r\n                    this.dialog = chatData.dialog;\r\n                    this.readyToReply();\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * After view init\r\n     */\r\n    ngAfterViewInit(): void\r\n    {\r\n        this.replyInput = this.replyInputField.first.nativeElement;\r\n        this.readyToReply();\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Decide whether to show or not the contact's avatar in the message row\r\n     *\r\n     * @param message\r\n     * @param i\r\n     * @returns {boolean}\r\n     */\r\n    shouldShowContactAvatar(message, i): boolean\r\n    {\r\n        return (\r\n            message.who === this.contact.id &&\r\n            ((this.dialog[i + 1] && this.dialog[i + 1].who !== this.contact.id) || !this.dialog[i + 1])\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Check if the given message is the first message of a group\r\n     *\r\n     * @param message\r\n     * @param i\r\n     * @returns {boolean}\r\n     */\r\n    isFirstMessageOfGroup(message, i): boolean\r\n    {\r\n        return (i === 0 || this.dialog[i - 1] && this.dialog[i - 1].who !== message.who);\r\n    }\r\n\r\n    /**\r\n     * Check if the given message is the last message of a group\r\n     *\r\n     * @param message\r\n     * @param i\r\n     * @returns {boolean}\r\n     */\r\n    isLastMessageOfGroup(message, i): boolean\r\n    {\r\n        return (i === this.dialog.length - 1 || this.dialog[i + 1] && this.dialog[i + 1].who !== message.who);\r\n    }\r\n\r\n    /**\r\n     * Select contact\r\n     */\r\n    selectContact(): void\r\n    {\r\n        this._chatService.selectContact(this.contact);\r\n    }\r\n\r\n    /**\r\n     * Ready to reply\r\n     */\r\n    readyToReply(): void\r\n    {\r\n        setTimeout(() => {\r\n            this.focusReplyInput();\r\n            this.scrollToBottom();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Focus to the reply input\r\n     */\r\n    focusReplyInput(): void\r\n    {\r\n        setTimeout(() => {\r\n            this.replyInput.focus();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Scroll to the bottom\r\n     *\r\n     * @param {number} speed\r\n     */\r\n    scrollToBottom(speed?: number): void\r\n    {\r\n        speed = speed || 400;\r\n        if ( this.directiveScroll )\r\n        {\r\n            this.directiveScroll.update();\r\n\r\n            setTimeout(() => {\r\n                this.directiveScroll.scrollToBottom(0, speed);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reply\r\n     */\r\n    reply(event): void\r\n    {\r\n        event.preventDefault();\r\n\r\n        if ( !this.replyForm.form.value.message )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Message\r\n        const message = {\r\n            who    : this.user.id,\r\n            message: this.replyForm.form.value.message,\r\n            time   : new Date().toISOString()\r\n        };\r\n\r\n        // Add the message to the chat\r\n        this.dialog.push(message);\r\n\r\n        // Reset the reply form\r\n        this.replyForm.reset();\r\n\r\n        // Update the server\r\n        this._chatService.updateDialog(this.selectedChat.chatId, this.dialog).then(response => {\r\n            this.readyToReply();\r\n        });\r\n    }\r\n}\r\n","<!-- CHAT -->\r\n<div class=\"chat\" fxFlex fxLayout=\"column\">\r\n\r\n    <!-- CHAT TOOLBAR -->\r\n    <mat-toolbar class=\"chat-toolbar\">\r\n\r\n        <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n                <!-- RESPONSIVE CHATS BUTTON-->\r\n                <button mat-icon-button fxHide.gt-md class=\"responsive-chats-button mr-16\"\r\n                        fuseMatSidenavToggler=\"chat-left-sidenav\"\r\n                        aria-label=\"chats button\">\r\n                    <mat-icon>chat</mat-icon>\r\n                </button>\r\n                <!-- / RESPONSIVE CHATS BUTTON-->\r\n\r\n                <!-- CHAT CONTACT-->\r\n                <div class=\"chat-contact\" fxLayout=\"row\" fxLayoutAlign=\"start center\"\r\n                     fuseMatSidenavToggler=\"chat-right-sidenav\" (click)=\"selectContact()\">\r\n\r\n                    <div class=\"avatar-wrapper\">\r\n\r\n                        <img [src]=\"contact.avatar\"\r\n                             class=\"avatar\"\r\n                             alt=\"{{contact.name}}\"/>\r\n\r\n                        <mat-icon class=\"s-16 status\"\r\n                                  [ngClass]=\"contact.status\">\r\n                        </mat-icon>\r\n                    </div>\r\n\r\n                    <div class=\"chat-contact-name\">\r\n                        {{contact.name}}\r\n                    </div>\r\n\r\n                </div>\r\n                <!-- / CHAT CONTACT-->\r\n            </div>\r\n\r\n            <div>\r\n                <button mat-icon-button [matMenuTriggerFor]=\"contactMenu\" aria-label=\"more\">\r\n                    <mat-icon>more_vert</mat-icon>\r\n                </button>\r\n\r\n                <mat-menu #contactMenu=\"matMenu\">\r\n                    <button mat-menu-item fuseMatSidenavToggler=\"chat-right-sidenav\" (click)=\"selectContact()\">\r\n                        Contact Info\r\n                    </button>\r\n                </mat-menu>\r\n            </div>\r\n\r\n        </div>\r\n    </mat-toolbar>\r\n    <!-- / CHAT TOOLBAR -->\r\n\r\n    <!-- CHAT CONTENT -->\r\n    <div id=\"chat-content\" fxFlex=\"1 1 auto\"  fusePerfectScrollbar>\r\n\r\n        <!-- CHAT MESSAGES -->\r\n        <div class=\"chat-messages\">\r\n\r\n            <!-- MESSAGE -->\r\n            <div *ngFor=\"let message of dialog; let i = index\" class=\"message-row\"\r\n                 [ngClass]=\"{\r\n                            'me': message.who === user.id,\r\n                            'contact': message.who !== user.id,\r\n                            'first-of-group': isFirstMessageOfGroup(message, i),\r\n                            'last-of-group': isLastMessageOfGroup(message, i)\r\n                            }\">\r\n\r\n                <img *ngIf=\"shouldShowContactAvatar(message, i)\"\r\n                     src=\"{{contact.avatar}}\"\r\n                     class=\"avatar\">\r\n\r\n                <div class=\"bubble\">\r\n                    <div class=\"message\">{{message.message}}</div>\r\n                    <div class=\"time secondary-text\">{{message.time | date:'short'}}</div>\r\n                </div>\r\n\r\n            </div>\r\n            <!-- / MESSAGE -->\r\n\r\n        </div>\r\n        <!-- CHAT MESSAGES -->\r\n\r\n    </div>\r\n    <!-- / CHAT CONTENT -->\r\n\r\n    <!-- CHAT FOOTER -->\r\n    <div class=\"chat-footer\" fxFlex=\"0 0 auto\" fxLayout=\"column\">\r\n\r\n        <!-- REPLY FORM -->\r\n        <div class=\"reply-form\" fxFlex=\"0 0 auto\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n\r\n            <form #replyForm=\"ngForm\"\r\n                  (ngSubmit)=\"reply($event)\"\r\n                  (keydown.enter)=\"reply($event)\"\r\n                  fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n                <mat-form-field class=\"message-text\" fxFlex floatLabel=\"never\" appearance=\"standard\">\r\n                    <textarea matInput #replyInput placeholder=\"Type your message\"\r\n                              ngModel name=\"message\" [rows]=\"1\" [matTextareaAutosize]=\"true\"></textarea>\r\n                </mat-form-field>\r\n\r\n                <button class=\"send-message-button\" mat-icon-button type=\"submit\" aria-label=\"Send message\">\r\n                    <mat-icon class=\"secondary-text\">send</mat-icon>\r\n                </button>\r\n\r\n            </form>\r\n\r\n        </div>\r\n        <!-- / REPLY FORM -->\r\n\r\n    </div>\r\n    <!-- / CHAT FOOTER-->\r\n\r\n</div>\r\n<!-- / CHAT -->\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { ChatService } from 'app/main/apps/chat/chat.service';\r\n\r\n@Component({\r\n    selector     : 'chat',\r\n    templateUrl  : './chat.component.html',\r\n    styleUrls    : ['./chat.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class ChatComponent implements OnInit, OnDestroy\r\n{\r\n    selectedChat: any;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ChatService} _chatService\r\n     */\r\n    constructor(\r\n        private _chatService: ChatService\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._chatService.onChatSelected\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(chatData => {\r\n                this.selectedChat = chatData;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n}\r\n","<div id=\"chat\" class=\"page-layout carded fullwidth inner-scroll\">\r\n\r\n    <!-- TOP BACKGROUND -->\r\n    <div class=\"top-bg accent\"></div>\r\n    <!-- / TOP BACKGROUND -->\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\">\r\n\r\n        <!-- CONTENT CARD -->\r\n        <div class=\"content-card\">\r\n\r\n            <mat-sidenav-container>\r\n\r\n                <!-- LEFT SIDENAV -->\r\n                <mat-sidenav class=\"sidenav\" position=\"start\" opened=\"true\" mode=\"side\"\r\n                             fuseMatSidenavHelper=\"chat-left-sidenav\" matIsLockedOpen=\"gt-md\">\r\n                    <chat-left-sidenav></chat-left-sidenav>\r\n                </mat-sidenav>\r\n                <!-- / LEFT SIDENAV -->\r\n\r\n                <!-- CONTENT -->\r\n                <chat-start *ngIf=\"!selectedChat\"></chat-start>\r\n\r\n                <chat-view *ngIf=\"selectedChat\"></chat-view>\r\n                <!-- / CONTENT -->\r\n\r\n                <!-- RIGHT SIDENAV -->\r\n                <mat-sidenav class=\"sidenav\" position=\"end\" opened=\"false\" mode=\"over\"\r\n                             fuseMatSidenavHelper=\"chat-right-sidenav\">\r\n                    <chat-right-sidenav></chat-right-sidenav>\r\n                </mat-sidenav>\r\n                <!-- / RIGHT SIDENAV -->\r\n\r\n            </mat-sidenav-container>\r\n\r\n        </div>\r\n        <!-- / CONTENT CARD -->\r\n\r\n    </div>\r\n    <!-- / CENTER -->\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\n\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\n\r\nimport { ChatService } from 'app/main/apps/chat/chat.service';\r\nimport { ChatComponent } from 'app/main/apps/chat/chat.component';\r\nimport { ChatStartComponent } from 'app/main/apps/chat/chat-start/chat-start.component';\r\nimport { ChatViewComponent } from 'app/main/apps/chat/chat-view/chat-view.component';\r\nimport { ChatChatsSidenavComponent } from 'app/main/apps/chat/sidenavs/left/chats/chats.component';\r\nimport { ChatUserSidenavComponent } from 'app/main/apps/chat/sidenavs/left/user/user.component';\r\nimport { ChatLeftSidenavComponent } from 'app/main/apps/chat/sidenavs/left/left.component';\r\nimport { ChatRightSidenavComponent } from 'app/main/apps/chat/sidenavs/right/right.component';\r\nimport { ChatContactSidenavComponent } from 'app/main/apps/chat/sidenavs/right/contact/contact.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '**',\r\n        component: ChatComponent,\r\n        children: [],\r\n        resolve: {\r\n            chat: ChatService\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ChatComponent,\r\n        ChatViewComponent,\r\n        ChatStartComponent,\r\n        ChatChatsSidenavComponent,\r\n        ChatUserSidenavComponent,\r\n        ChatLeftSidenavComponent,\r\n        ChatRightSidenavComponent,\r\n        ChatContactSidenavComponent\r\n    ],\r\n    imports     : [\r\n        RouterModule.forChild(routes),\r\n\r\n        MatButtonModule,\r\n        MatCardModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatRadioModule,\r\n        MatSidenavModule,\r\n        MatToolbarModule,\r\n\r\n        FuseSharedModule\r\n    ],\r\n    providers   : [\r\n        ChatService\r\n    ]\r\n})\r\nexport class ChatModule\r\n{\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\n\r\nimport { FuseUtils } from '@fuse/utils';\r\n\r\n@Injectable()\r\nexport class ChatService implements Resolve<any>\r\n{\r\n    contacts: any[];\r\n    chats: any[];\r\n    user: any;\r\n    onChatSelected: BehaviorSubject<any>;\r\n    onContactSelected: BehaviorSubject<any>;\r\n    onChatsUpdated: Subject<any>;\r\n    onUserUpdated: Subject<any>;\r\n    onLeftSidenavViewChanged: Subject<any>;\r\n    onRightSidenavViewChanged: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {HttpClient} _httpClient\r\n     */\r\n    constructor(\r\n        private _httpClient: HttpClient\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.onChatSelected = new BehaviorSubject(null);\r\n        this.onContactSelected = new BehaviorSubject(null);\r\n        this.onChatsUpdated = new Subject();\r\n        this.onUserUpdated = new Subject();\r\n        this.onLeftSidenavViewChanged = new Subject();\r\n        this.onRightSidenavViewChanged = new Subject();\r\n    }\r\n\r\n    /**\r\n     * Resolver\r\n     *\r\n     * @param {ActivatedRouteSnapshot} route\r\n     * @param {RouterStateSnapshot} state\r\n     * @returns {Observable<any> | Promise<any> | any}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            Promise.all([\r\n                this.getContacts(),\r\n                this.getChats(),\r\n                this.getUser()\r\n            ]).then(\r\n                ([contacts, chats, user]) => {\r\n                    this.contacts = contacts;\r\n                    this.chats = chats;\r\n                    this.user = user;\r\n                    resolve();\r\n                },\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get chat\r\n     *\r\n     * @param contactId\r\n     * @returns {Promise<any>}\r\n     */\r\n    getChat(contactId): Promise<any>\r\n    {\r\n        const chatItem = this.user.chatList.find((item) => {\r\n            return item.contactId === contactId;\r\n        });\r\n\r\n        // Create new chat, if it's not created yet.\r\n        if ( !chatItem )\r\n        {\r\n            this.createNewChat(contactId).then((newChats) => {\r\n                this.getChat(contactId);\r\n            });\r\n            return;\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/chat-chats/' + chatItem.id)\r\n                .subscribe((response: any) => {\r\n                    const chat = response;\r\n\r\n                    const chatContact = this.contacts.find((contact) => {\r\n                        return contact.id === contactId;\r\n                    });\r\n\r\n                    const chatData = {\r\n                        chatId : chat.id,\r\n                        dialog : chat.dialog,\r\n                        contact: chatContact\r\n                    };\r\n\r\n                    this.onChatSelected.next({...chatData});\r\n\r\n                }, reject);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Create new chat\r\n     *\r\n     * @param contactId\r\n     * @returns {Promise<any>}\r\n     */\r\n    createNewChat(contactId): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            const contact = this.contacts.find((item) => {\r\n                return item.id === contactId;\r\n            });\r\n\r\n            const chatId = FuseUtils.generateGUID();\r\n\r\n            const chat = {\r\n                id    : chatId,\r\n                dialog: []\r\n            };\r\n\r\n            const chatListItem = {\r\n                contactId      : contactId,\r\n                id             : chatId,\r\n                lastMessageTime: '2017-02-18T10:30:18.931Z',\r\n                name           : contact.name,\r\n                unread         : null\r\n            };\r\n\r\n            // Add new chat list item to the user's chat list\r\n            this.user.chatList.push(chatListItem);\r\n\r\n            // Post the created chat\r\n            this._httpClient.post('api/chat-chats', {...chat})\r\n                .subscribe((response: any) => {\r\n\r\n                    // Post the new the user data\r\n                    this._httpClient.post('api/chat-user/' + this.user.id, this.user)\r\n                        .subscribe(newUserData => {\r\n\r\n                            // Update the user data from server\r\n                            this.getUser().then(updatedUser => {\r\n                                this.onUserUpdated.next(updatedUser);\r\n                                resolve(updatedUser);\r\n                            });\r\n                        });\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Select contact\r\n     *\r\n     * @param contact\r\n     */\r\n    selectContact(contact): void\r\n    {\r\n        this.onContactSelected.next(contact);\r\n    }\r\n\r\n    /**\r\n     * Set user status\r\n     *\r\n     * @param status\r\n     */\r\n    setUserStatus(status): void\r\n    {\r\n        this.user.status = status;\r\n    }\r\n\r\n    /**\r\n     * Update user data\r\n     *\r\n     * @param userData\r\n     */\r\n    updateUserData(userData): void\r\n    {\r\n        this._httpClient.post('api/chat-user/' + this.user.id, userData)\r\n            .subscribe((response: any) => {\r\n                    this.user = userData;\r\n                }\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Update the chat dialog\r\n     *\r\n     * @param chatId\r\n     * @param dialog\r\n     * @returns {Promise<any>}\r\n     */\r\n    updateDialog(chatId, dialog): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            const newData = {\r\n                id    : chatId,\r\n                dialog: dialog\r\n            };\r\n\r\n            this._httpClient.post('api/chat-chats/' + chatId, newData)\r\n                .subscribe(updatedChat => {\r\n                    resolve(updatedChat);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get contacts\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getContacts(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/chat-contacts')\r\n                .subscribe((response: any) => {\r\n                    resolve(response);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get chats\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getChats(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/chat-chats')\r\n                .subscribe((response: any) => {\r\n                    resolve(response);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get user\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getUser(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/chat-user')\r\n                .subscribe((response: any) => {\r\n                    resolve(response[0]);\r\n                }, reject);\r\n        });\r\n    }\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { MediaObserver } from '@angular/flex-layout';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseMatSidenavHelperService } from '@fuse/directives/fuse-mat-sidenav/fuse-mat-sidenav.service';\r\n\r\nimport { ChatService } from 'app/main/apps/chat/chat.service';\r\n\r\n@Component({\r\n    selector     : 'chat-chats-sidenav',\r\n    templateUrl  : './chats.component.html',\r\n    styleUrls    : ['./chats.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class ChatChatsSidenavComponent implements OnInit, OnDestroy\r\n{\r\n    chats: any[];\r\n    chatSearch: any;\r\n    contacts: any[];\r\n    searchText: string;\r\n    user: any;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ChatService} _chatService\r\n     * @param {FuseMatSidenavHelperService} _fuseMatSidenavHelperService\r\n     * @param {MediaObserver} _mediaObserver\r\n     */\r\n    constructor(\r\n        private _chatService: ChatService,\r\n        private _fuseMatSidenavHelperService: FuseMatSidenavHelperService,\r\n        public _mediaObserver: MediaObserver\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.chatSearch = {\r\n            name: ''\r\n        };\r\n        this.searchText = '';\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this.user = this._chatService.user;\r\n        this.chats = this._chatService.chats;\r\n        this.contacts = this._chatService.contacts;\r\n\r\n        this._chatService.onChatsUpdated\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(updatedChats => {\r\n                this.chats = updatedChats;\r\n            });\r\n\r\n        this._chatService.onUserUpdated\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(updatedUser => {\r\n                this.user = updatedUser;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Get chat\r\n     *\r\n     * @param contact\r\n     */\r\n    getChat(contact): void\r\n    {\r\n        this._chatService.getChat(contact);\r\n\r\n        if ( !this._mediaObserver.isActive('gt-md') )\r\n        {\r\n            this._fuseMatSidenavHelperService.getSidenav('chat-left-sidenav').toggle();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set user status\r\n     *\r\n     * @param status\r\n     */\r\n    setUserStatus(status): void\r\n    {\r\n        this._chatService.setUserStatus(status);\r\n    }\r\n\r\n    /**\r\n     * Change left sidenav view\r\n     *\r\n     * @param view\r\n     */\r\n    changeLeftSidenavView(view): void\r\n    {\r\n        this._chatService.onLeftSidenavViewChanged.next(view);\r\n    }\r\n\r\n    /**\r\n     * Logout\r\n     */\r\n    logout(): void\r\n    {\r\n        console.log('logout triggered');\r\n    }\r\n}\r\n","<!-- SIDENAV HEADER -->\r\n<div class=\"sidenav-header\">\r\n    <!-- CHATS TOOLBAR -->\r\n    <mat-toolbar>\r\n\r\n        <!-- TOOLBAR TOP -->\r\n        <mat-toolbar-row fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n\r\n            <!-- USER AVATAR WRAPPER -->\r\n            <div class=\"avatar-wrapper\">\r\n\r\n                <!-- USER AVATAR -->\r\n                <img (click)=\"changeLeftSidenavView('user')\"\r\n                     src=\"{{user.avatar}}\"\r\n                     class=\"mat-avatar avatar\"\r\n                     alt=\"{{user.name}}\"/>\r\n                <!-- / USER AVATAR -->\r\n\r\n                <mat-icon class=\"s-16 status\" [ngClass]=\"user.status\"\r\n                          [matMenuTriggerFor]=\"userStatusMenu\"></mat-icon>\r\n\r\n                <!-- USER STATUS -->\r\n                <mat-menu id=\"user-status-menu\" #userStatusMenu=\"matMenu\">\r\n\r\n                    <button mat-menu-item (click)=\"setUserStatus('online')\">\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                            <mat-icon class=\"s-16 status online\"></mat-icon>\r\n                            <span>Online</span>\r\n                        </div>\r\n                    </button>\r\n\r\n                    <button mat-menu-item (click)=\"setUserStatus('away')\">\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                            <mat-icon class=\"s-16 status away\"></mat-icon>\r\n                            <span>Away</span>\r\n                        </div>\r\n                    </button>\r\n\r\n                    <button mat-menu-item (click)=\"setUserStatus('do-not-disturb')\">\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                            <mat-icon class=\"s-16 status do-not-disturb\"></mat-icon>\r\n                            <span>Do not disturb</span>\r\n                        </div>\r\n                    </button>\r\n\r\n                    <button mat-menu-item (click)=\"setUserStatus('offline')\">\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                            <mat-icon class=\"s-16 status offline\"></mat-icon>\r\n                            <span>Offline</span>\r\n                        </div>\r\n                    </button>\r\n                </mat-menu>\r\n                <!-- / USER STATUS -->\r\n\r\n            </div>\r\n            <!-- / USER AVATAR -->\r\n\r\n            <div>\r\n                <button mat-icon-button\r\n                        [matMenuTriggerFor]=\"userMenu\"\r\n                        aria-label=\"more\">\r\n                    <mat-icon>more_vert</mat-icon>\r\n                </button>\r\n                <mat-menu #userMenu=\"matMenu\">\r\n                    <button mat-menu-item (click)=\"changeLeftSidenavView('user')\">\r\n                        Profile\r\n                    </button>\r\n                    <button mat-menu-item (click)=\"logout()\">\r\n                        Logout\r\n                    </button>\r\n                </mat-menu>\r\n            </div>\r\n\r\n        </mat-toolbar-row>\r\n        <!-- / TOOLBAR TOP -->\r\n\r\n        <!-- TOOLBAR BOTTOM -->\r\n        <mat-toolbar-row>\r\n\r\n            <!-- SEARCH -->\r\n            <div class=\"search-wrapper\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n                <div class=\"search\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                    <mat-icon class=\"s-16 secondary-text\">search</mat-icon>\r\n                    <input [(ngModel)]=\"searchText\" type=\"text\" placeholder=\"Search or start new chat\" fxFlex>\r\n                </div>\r\n\r\n            </div>\r\n            <!-- / SEARCH -->\r\n\r\n        </mat-toolbar-row>\r\n        <!-- / TOOLBAR BOTTOM -->\r\n\r\n    </mat-toolbar>\r\n    <!-- / CHATS TOOLBAR -->\r\n\r\n</div>\r\n<!-- / SIDENAV HEADER -->\r\n\r\n<!-- SIDENAV CONTENT -->\r\n<div class=\"sidenav-content\" fusePerfectScrollbar fxFlex>\r\n\r\n    <!-- CHATS CONTENT -->\r\n    <div *fuseIfOnDom [@animateStagger]=\"{value:'50'}\">\r\n\r\n        <!-- CHATS LIST-->\r\n        <div class=\"chat-list\" fxLayout=\"column\">\r\n\r\n            <div matSubheader *ngIf=\"(user.chatList | filter: searchText).length > 0\">\r\n                Chats\r\n            </div>\r\n\r\n            <button mat-button class=\"contact\"\r\n                    *ngFor=\"let chat of user.chatList | filter: searchText\"\r\n                    (click)=\"getChat(chat.contactId)\" ngClass=\"{'unread':contact.unread}\"\r\n                    [@animate]=\"{value:'*',params:{y:'100%'}}\">\r\n\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n                    <div class=\"avatar-wrapper\" fxFlex=\"0 1 auto\" fxLayoutAlign=\"center center\">\r\n                        <img class=\"avatar\" [src]=\"contacts | getById:chat.contactId:'avatar'\"\r\n                             alt=\"{{contacts | getById:chat.contactId:'name'}}\"/>\r\n                        <mat-icon class=\"s-16 status\" [ngClass]=\"contacts | getById:chat.contactId:'status'\"></mat-icon>\r\n                    </div>\r\n\r\n                    <div fxLayout=\"row\" fxFlex>\r\n\r\n                        <div class=\"pr-4\" fxFlex fxLayout=\"column\" fxLayoutAlign=\"center start\">\r\n                            <div class=\"contact-name\">{{contacts | getById:chat.contactId:'name'}}</div>\r\n                            <div class=\"contact-last-message\">{{chat.lastMessage}}</div>\r\n                        </div>\r\n\r\n                        <div fxLayout=\"column\" fxLayoutAlign=\"start end\">\r\n                            <div class=\"contact-last-message-time\">\r\n                                {{chat.lastMessageTime | date}}\r\n                            </div>\r\n                            <div *ngIf=\"chat.unread\" class=\"mt-4 unread-message-count accent\">{{chat.unread}}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </button>\r\n\r\n        </div>\r\n        <!-- / CHATS LIST-->\r\n\r\n        <!-- CONTACTS LIST-->\r\n        <div class=\"contact-list\" fxLayout=\"column\">\r\n\r\n            <div matSubheader *ngIf=\"(contacts | filter: searchText).length > 0\">\r\n                Contacts\r\n            </div>\r\n\r\n            <button mat-button class=\"contact\"\r\n                    *ngFor=\"let contact of contacts| filter: searchText\"\r\n                    (click)=\"getChat(contact.id)\"\r\n                    [@animate]=\"{value:'*',params:{y:'100%'}}\">\r\n\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n                    <div class=\"avatar-wrapper\" fxFlex=\"0 1 auto\">\r\n                        <img src=\"{{contact.avatar}}\" class=\"mat-avatar avatar\" alt=\"{{contact.name}}\"/>\r\n                        <mat-icon class=\"s-16 status\" [ngClass]=\"contact.status\"></mat-icon>\r\n                    </div>\r\n\r\n                    <div fxLayout=\"column\" fxLayoutAlign=\"start start\">\r\n                        <div class=\"contact-name\">{{contact.name}}</div>\r\n                        <p class=\"contact-mood\">{{contact.mood}}</p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </button>\r\n\r\n        </div>\r\n        <!-- / CONTACTS LIST-->\r\n\r\n        <!-- NO RESULTS MESSAGE -->\r\n        <div *ngIf=\"(contacts | filter: searchText).length === 0\" class=\"no-results-message\">\r\n            No results..\r\n        </div>\r\n        <!-- NO RESULTS MESSAGE-->\r\n\r\n    </div>\r\n    <!-- / CHATS CONTENT -->\r\n\r\n</div>\r\n<!-- / SIDENAV CONTENT -->\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { ChatService } from 'app/main/apps/chat/chat.service';\r\n\r\n@Component({\r\n    selector     : 'chat-left-sidenav',\r\n    templateUrl  : './left.component.html',\r\n    styleUrls    : ['./left.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class ChatLeftSidenavComponent implements OnInit, OnDestroy\r\n{\r\n    view: string;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ChatService} _chatService\r\n     */\r\n    constructor(\r\n        private _chatService: ChatService\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.view = 'chats';\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._chatService.onLeftSidenavViewChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(view => {\r\n                this.view = view;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n}\r\n","<div [ngSwitch]=\"view\" class=\"views\">\r\n    <chat-chats-sidenav class=\"view\"\r\n                        *ngSwitchCase=\"'chats'\"\r\n                        [@slideInRight]>\r\n    </chat-chats-sidenav>\r\n\r\n    <chat-user-sidenav class=\"view\"\r\n                       *ngSwitchCase=\"'user'\"\r\n                       [@slideInLeft]\r\n                       fusePerfectScrollbar>\r\n    </chat-user-sidenav>\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\r\n\r\nimport { ChatService } from 'app/main/apps/chat/chat.service';\r\n\r\n@Component({\r\n    selector     : 'chat-user-sidenav',\r\n    templateUrl  : './user.component.html',\r\n    styleUrls    : ['./user.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ChatUserSidenavComponent implements OnInit, OnDestroy\r\n{\r\n    user: any;\r\n    userForm: FormGroup;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ChatService} _chatService\r\n     */\r\n    constructor(\r\n        private _chatService: ChatService\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this.user = this._chatService.user;\r\n\r\n        this.userForm = new FormGroup({\r\n            mood  : new FormControl(this.user.mood),\r\n            status: new FormControl(this.user.status)\r\n        });\r\n\r\n        this.userForm.valueChanges\r\n            .pipe(\r\n                takeUntil(this._unsubscribeAll),\r\n                debounceTime(500),\r\n                distinctUntilChanged()\r\n            )\r\n            .subscribe(data => {\r\n                this.user.mood = data.mood;\r\n                this.user.status = data.status;\r\n                this._chatService.updateUserData(this.user);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Change left sidenav view\r\n     *\r\n     * @param view\r\n     */\r\n    changeLeftSidenavView(view): void\r\n    {\r\n        this._chatService.onLeftSidenavViewChanged.next(view);\r\n    }\r\n\r\n}\r\n","<!-- SIDENAV HEADER -->\r\n<div class=\"sidenav-header\">\r\n\r\n    <!-- USER TOOLBAR -->\r\n    <mat-toolbar class=\"accent\">\r\n\r\n        <!-- TOOLBAR TOP -->\r\n        <mat-toolbar-row fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n\r\n            <button mat-icon-button (click)=\"changeLeftSidenavView('chats')\" aria-label=\"back\">\r\n                <mat-icon>arrow_back</mat-icon>\r\n            </button>\r\n\r\n        </mat-toolbar-row>\r\n        <!-- / TOOLBAR TOP -->\r\n\r\n        <!-- TOOLBAR BOTTOM -->\r\n        <mat-toolbar-row class=\"toolbar-bottom\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n\r\n            <img [src]=\"user.avatar\" class=\"avatar user-avatar huge\" alt=\"{{user.name}}\"/>\r\n            <div class=\"user-name my-8\">{{user.name}}</div>\r\n\r\n        </mat-toolbar-row>\r\n        <!-- / TOOLBAR BOTTOM -->\r\n\r\n    </mat-toolbar>\r\n    <!-- / USER TOOLBAR -->\r\n</div>\r\n\r\n<!-- SIDENAV CONTENT -->\r\n<div class=\"sidenav-content py-32 px-24\" fxFlex>\r\n\r\n    <!-- USER MOOD -->\r\n    <form [formGroup]=\"userForm\" fxLayout=\"column\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"0 1 auto\">\r\n            <mat-label>Mood</mat-label>\r\n            <textarea matInput name=\"mood\" formControlName=\"mood\" rows=\"3\"></textarea>\r\n        </mat-form-field>\r\n\r\n        <mat-radio-group formControlName=\"status\" fxLayout=\"column\">\r\n\r\n            <mat-radio-button value=\"online\" class=\"py-8\">\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                    <mat-icon class=\"status online mr-8\"></mat-icon>\r\n                    <span class=\"mat-h4 m-0\">Online</span>\r\n                </div>\r\n            </mat-radio-button>\r\n\r\n            <mat-radio-button value=\"away\" class=\"py-8\">\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                    <mat-icon class=\"status away mr-8\"></mat-icon>\r\n                    <span class=\"mat-h4 m-0\">Away</span>\r\n                </div>\r\n            </mat-radio-button>\r\n\r\n            <mat-radio-button value=\"do-not-disturb\" class=\"py-8\">\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                    <mat-icon class=\"status do-not-disturb mr-8\"></mat-icon>\r\n                    <span class=\"mat-h4 m-0\">Do not disturb</span>\r\n                </div>\r\n            </mat-radio-button>\r\n\r\n            <mat-radio-button value=\"offline\" class=\"py-8\">\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                    <mat-icon class=\"status offline mr-8\"></mat-icon>\r\n                    <span class=\"mat-h4 m-0\">Offline</span>\r\n                </div>\r\n            </mat-radio-button>\r\n        </mat-radio-group>\r\n\r\n    </form>\r\n    <!-- / USER MOOD -->\r\n\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { ChatService } from 'app/main/apps/chat/chat.service';\r\n\r\n@Component({\r\n    selector     : 'chat-contact-sidenav',\r\n    templateUrl  : './contact.component.html',\r\n    styleUrls    : ['./contact.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ChatContactSidenavComponent implements OnInit, OnDestroy\r\n{\r\n    contact: any;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ChatService} _chatService\r\n     */\r\n    constructor(\r\n        private _chatService: ChatService\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._chatService.onContactSelected\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(contact => {\r\n                this.contact = contact;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n}\r\n","<!-- SIDENAV HEADER -->\r\n<div class=\"sidenav-header\" *ngIf=\"contact\">\r\n\r\n    <!-- CONTACT TOOLBAR -->\r\n    <mat-toolbar class=\"accent\">\r\n\r\n        <!-- TOOLBAR TOP -->\r\n        <mat-toolbar-row fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n\r\n            <div>Contact Info</div>\r\n\r\n            <button mat-icon-button fuseMatSidenavToggler=\"chat-right-sidenav\" aria-label=\"close\">\r\n                <mat-icon>close</mat-icon>\r\n            </button>\r\n\r\n        </mat-toolbar-row>\r\n        <!-- / TOOLBAR TOP -->\r\n\r\n        <!-- TOOLBAR BOTTOM -->\r\n        <mat-toolbar-row class=\"toolbar-bottom\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n            <img [src]=\"contact.avatar\" class=\"avatar contact-avatar huge\" alt=\"{{contact.name}}\"/>\r\n            <div class=\"contact-name my-8\">{{contact.name}}</div>\r\n        </mat-toolbar-row>\r\n        <!-- / TOOLBAR BOTTOM -->\r\n\r\n    </mat-toolbar>\r\n    <!-- / CONTACT TOOLBAR -->\r\n</div>\r\n\r\n<!-- SIDENAV CONTENT -->\r\n<div class=\"sidenav-content py-32 px-24\" fxFlex fxLayout=\"column\" *ngIf=\"contact\">\r\n\r\n    <!-- CONTACT MOOD -->\r\n    <div class=\"secondary-text mb-8\">Mood</div>\r\n    <div>{{contact.mood}}</div>\r\n    <!-- / CONTACT MOOD -->\r\n\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { ChatService } from 'app/main/apps/chat/chat.service';\r\n\r\n@Component({\r\n    selector     : 'chat-right-sidenav',\r\n    templateUrl  : './right.component.html',\r\n    styleUrls    : ['./right.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class ChatRightSidenavComponent implements OnInit, OnDestroy\r\n{\r\n    view: string;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    constructor(\r\n        private _chatService: ChatService\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.view = 'contact';\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._chatService.onRightSidenavViewChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(view => {\r\n                this.view = view;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n}\r\n","<div [ngSwitch]=\"view\" class=\"views\">\r\n\r\n    <chat-contact-sidenav class=\"view\"\r\n                          *ngSwitchCase=\"'contact'\"\r\n                          [@slideInRight]\r\n                          fusePerfectScrollbar>\r\n    </chat-contact-sidenav>\r\n\r\n</div>\r\n"]}