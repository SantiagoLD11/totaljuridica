{"version":3,"sources":["webpack:///src/app/main/apps/academy/academy.module.ts","webpack:///src/app/main/apps/academy/course.service.ts","webpack:///src/app/main/apps/academy/course/course.component.ts","webpack:///src/app/main/apps/academy/course/course.component.html","webpack:///src/app/main/apps/academy/courses.service.ts","webpack:///src/app/main/apps/academy/courses/courses.component.ts","webpack:///src/app/main/apps/academy/courses/courses.component.html"],"names":["routes","path","component","resolve","academy","redirectTo","AcademyModule","forChild","declarations","imports","providers","AcademyCourseService","_httpClient","onCourseChanged","route","state","Promise","reject","all","getCourse","params","courseId","courseSlug","then","get","subscribe","response","next","AcademyCourseComponent","_academyCourseService","_changeDetectorRef","_fuseSidebarService","animationDirection","currentStep","_unsubscribeAll","pipe","course","courseStepContent","fuseScrollbarDirectives","find","fuseScrollbarDirective","elementRef","nativeElement","id","complete","step","detectChanges","totalSteps","name","getSidebar","toggleOpen","toggleSidebar","gotoPreviousStep","gotoNextStep","selector","templateUrl","styleUrls","encapsulation","None","animations","AcademyCoursesService","onCategoriesChanged","onCoursesChanged","getCategories","getCourses","AcademyCoursesComponent","_academyCoursesService","currentCategory","searchTerm","categories","courses","filteredCourses","coursesFilteredByCategory","filter","category","filterCoursesByTerm","toLowerCase","title","includes","filterCoursesByCategory"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAiBA,QAAMA,MAAM,GAAG,CACX;AACIC,UAAI,EAAO,SADf;AAEIC,eAAS,EAAE,uGAFf;AAGIC,aAAO,EAAI;AACPC,eAAO,EAAE;AADF;AAHf,KADW,EAQX;AACIH,UAAI,EAAO,+BADf;AAEIC,eAAS,EAAE,oGAFf;AAGIC,aAAO,EAAI;AACPC,eAAO,EAAE;AADF;AAHf,KARW,EAeX;AACIH,UAAI,EAAQ,IADhB;AAEII,gBAAU,EAAE;AAFhB,KAfW,CAAf;;QA2CaC,a;;;;;YAAAA;;;;yBAAAA,a;AAAa,O;AAAA,iBALR,CACV,4FADU,EAEV,0FAFU,C;AAGb,gBAfa,CACV,6DAAaC,QAAb,CAAsBP,MAAtB,CADU,EAGV,wEAHU,EAIV,+EAJU,EAKV,oEALU,EAMV,sEANU,EAOV,wEAPU,EASV,oEATU,EAUV,mEAVU,CAeb;;;;0HAEQM,a,EAAa;AAAA,uBApBlB,uGAoBkB,EAnBlB,oGAmBkB;AAnBI,gFAKtB,wEALsB,EAMtB,+EANsB,EAOtB,oEAPsB,EAQtB,sEARsB,EAStB,wEATsB,EAWtB,oEAXsB,EAYtB,mEAZsB;AAmBJ,O;AAPD,K;;;;;sEAOZA,a,EAAa;cAtBzB,sDAsByB;eAtBhB;AACNE,sBAAY,EAAE,CACV,uGADU,EAEV,oGAFU,CADR;AAKNC,iBAAO,EAAO,CACV,6DAAaF,QAAb,CAAsBP,MAAtB,CADU,EAGV,wEAHU,EAIV,+EAJU,EAKV,oEALU,EAMV,sEANU,EAOV,wEAPU,EASV,oEATU,EAUV,mEAVU,CALR;AAiBNU,mBAAS,EAAK,CACV,4FADU,EAEV,0FAFU;AAjBR,S;AAsBgB,Q;;;;;;;;;;;;;;;;;;AC5D1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaC,oB;;;AAIT;;;;;AAKA,oCACYC,WADZ,EACmC;AAAA;;AAAvB,aAAAA,WAAA,GAAAA,WAAA,CAAuB,CAG/B;;AACA,aAAKC,eAAL,GAAuB,IAAI,oDAAJ,CAAoB,EAApB,CAAvB;AACH,O,CAED;AACA;AACA;;AAEA;;;;;;;;;;;gCAOQC,K,EAA+BC,K,EAA0B;AAAA;;AAE7D,iBAAO,IAAIC,OAAJ,CAAY,UAACb,OAAD,EAAUc,MAAV,EAAqB;AAEpCD,mBAAO,CAACE,GAAR,CAAY,CACR,KAAI,CAACC,SAAL,CAAeL,KAAK,CAACM,MAAN,CAAaC,QAA5B,EAAsCP,KAAK,CAACM,MAAN,CAAaE,UAAnD,CADQ,CAAZ,EAEGC,IAFH,CAGI,YAAM;AACFpB,qBAAO;AACV,aALL,EAMIc,MANJ;AAQH,WAVM,CAAP;AAWH;AAED;;;;;;;;;;kCAOUI,Q,EAAUC,U,EAAU;AAAA;;AAE1B,iBAAO,IAAIN,OAAJ,CAAY,UAACb,OAAD,EAAUc,MAAV,EAAqB;AACpC,kBAAI,CAACL,WAAL,CAAiBY,GAAjB,CAAqB,wBAAwBH,QAAxB,GAAmC,GAAnC,GAAyCC,UAA9D,EACKG,SADL,CACe,UAACC,QAAD,EAAmB;AAC1B,oBAAI,CAACb,eAAL,CAAqBc,IAArB,CAA0BD,QAA1B;;AACAvB,qBAAO,CAACuB,QAAD,CAAP;AACH,aAJL,EAIOT,MAJP;AAKH,WANM,CAAP;AAOH;;;;;;;uBA3DQN,oB,EAAoB,uH;AAAA,K;;;aAApBA,oB;AAAoB,eAApBA,oBAAoB;;;;;sEAApBA,oB,EAAoB;cADhC;AACgC,Q;;;;;;;;;;;;;;;;;;;;;;ACNjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;ACUgB;;AAEK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAED;;AACI;;AAAM;;AAAS;;AACnB;;AACA;;AAAmB;;AAAc;;AACrC;;;;;;;;;;;AALK;;AAES;;AAAA;;AAES;;AAAA;;;;;;AAsCvB;;AAII;;AAEJ;;;;;;;;AAJK;;AAEyD;;AAAA;;;;;;AANlE;;AAEI;;AAQJ;;;;;;;;AAPS;;AAAA;;;;QDvCRiB,sB;;;AAaT;;;;;;;AAOA,sCACYC,qBADZ,EAEYC,kBAFZ,EAGYC,mBAHZ,EAGmD;AAAA;;AAFvC,aAAAF,qBAAA,GAAAA,qBAAA;AACA,aAAAC,kBAAA,GAAAA,kBAAA;AACA,aAAAC,mBAAA,GAAAA,mBAAA,CAAuC,CAG/C;;AACA,aAAKC,kBAAL,GAA0B,MAA1B;AACA,aAAKC,WAAL,GAAmB,CAAnB,CAL+C,CAO/C;;AACA,aAAKC,eAAL,GAAuB,IAAI,4CAAJ,EAAvB;AACH,O,CAED;AACA;AACA;;AAEA;;;;;;;mCAGQ;AAAA;;AAEJ;AACA,eAAKL,qBAAL,CAA2BhB,eAA3B,CACKsB,IADL,CACU,iEAAU,KAAKD,eAAf,CADV,EAEKT,SAFL,CAEe,UAAAW,MAAM,EAAI;AACjB,kBAAI,CAACA,MAAL,GAAcA,MAAd;AACH,WAJL;AAKH;AAED;;;;;;0CAGe;AAEX,eAAKC,iBAAL,GAAyB,KAAKC,uBAAL,CAA6BC,IAA7B,CAAkC,UAACC,sBAAD,EAA4B;AACnF,mBAAOA,sBAAsB,CAACC,UAAvB,CAAkCC,aAAlC,CAAgDC,EAAhD,KAAuD,qBAA9D;AACH,WAFwB,CAAzB;AAGH;AAED;;;;;;sCAGW;AAEP;AACA,eAAKT,eAAL,CAAqBP,IAArB;;AACA,eAAKO,eAAL,CAAqBU,QAArB;AACH,S,CAED;AACA;AACA;;AAEA;;;;;;;;iCAKSC,I,EAAI;AAET;AACA,eAAKb,kBAAL,GAA0B,KAAKC,WAAL,GAAmBY,IAAnB,GAA0B,MAA1B,GAAmC,OAA7D,CAHS,CAKT;AACA;;AACA,eAAKf,kBAAL,CAAwBgB,aAAxB,GAPS,CAST;;;AACA,eAAKb,WAAL,GAAmBY,IAAnB;AACH;AAED;;;;;;uCAGY;AAER,cAAK,KAAKZ,WAAL,KAAqB,KAAKG,MAAL,CAAYW,UAAZ,GAAyB,CAAnD,EACA;AACI;AACH,WALO,CAOR;;;AACA,eAAKf,kBAAL,GAA0B,MAA1B,CARQ,CAUR;AACA;;AACA,eAAKF,kBAAL,CAAwBgB,aAAxB,GAZQ,CAcR;;;AACA,eAAKb,WAAL;AACH;AAED;;;;;;2CAGgB;AAEZ,cAAK,KAAKA,WAAL,KAAqB,CAA1B,EACA;AACI;AACH,WALW,CAOZ;;;AACA,eAAKD,kBAAL,GAA0B,OAA1B,CARY,CAUZ;AACA;;AACA,eAAKF,kBAAL,CAAwBgB,aAAxB,GAZY,CAcZ;;;AACA,eAAKb,WAAL;AACH;AAED;;;;;;;;sCAKce,I,EAAI;AAEd,eAAKjB,mBAAL,CAAyBkB,UAAzB,CAAoCD,IAApC,EAA0CE,UAA1C;AACH;;;;;;;uBA/IQtB,sB,EAAsB,0J,EAAA,gI,EAAA,4J;AAAA,K;;;YAAtBA,sB;AAAsB,qC;AAAA;AAAA;oEAOjB,sI,EAA6B,I;;;;;;;;;;;;;;ACxB/C;;AAGI;;AAGI;;AAEI;;AAEI;;AAUJ;;AAEJ;;AAGJ;;AAIA;;AAGI;;AAEI;;AACQ;AAAA,mBAAS,IAAAuB,aAAA,CAAc,+BAAd,CAAT;AAAuD,WAAvD;;AACJ;;AAAU;;AAAI;;AAClB;;AAEA;;AACI;;AAAU;;AAAU;;AACxB;;AAEA;;AACI;;AAAI;;AAAgB;;AACxB;;AAEJ;;AAIA;;AAEI;;AAYJ;;AAGA;;AAEI;;AACQ;AAAA,mBAAS,IAAAC,gBAAA,EAAT;AAA2B,WAA3B;;AAGJ;;AAAU;;AAAY;;AAC1B;;AAEA;;AACQ;AAAA,mBAAS,IAAAC,YAAA,EAAT;AAAuB,WAAvB;;AAGJ;;AAAU;;AAAa;;AAC3B;;AAEA;;AAII;;AAAU;;AAAK;;AACnB;;AAEJ;;AAEJ;;AAGJ;;;;AArFqB;;AAAA;;AA4B6B;;AAAA;;AAK9B;;AAAA;;AASM;;AAAA;;AAmBN;;AAAA,sGAA8B,QAA9B,EAA8B,qBAA9B;;AAOA;;AAAA,8HAAkD,QAAlD,EAAkD,6CAAlD;;AAOA;;AAAA,8HAAkD,QAAlD,EAAkD,6CAAlD;;;;;;;mBDvED;;;;;;sEAENzB,sB,EAAsB;cAPlC,uDAOkC;eAPxB;AACP0B,kBAAQ,EAAO,gBADR;AAEPC,qBAAW,EAAI,yBAFR;AAGPC,mBAAS,EAAM,CAAC,yBAAD,CAHR;AAIPC,uBAAa,EAAE,gEAAkBC,IAJ1B;AAKPC,oBAAU,EAAK;AALR,S;AAOwB,Q;;;;;;;;;;gBAO9B,0D;iBAAa,sI;;;;;;;;;;;;;;;;;;;;AExBlB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaC,qB;;;AAKT;;;;;AAKA,qCACYhD,WADZ,EACmC;AAAA;;AAAvB,aAAAA,WAAA,GAAAA,WAAA,CAAuB,CAG/B;;AACA,aAAKiD,mBAAL,GAA2B,IAAI,oDAAJ,CAAoB,EAApB,CAA3B;AACA,aAAKC,gBAAL,GAAwB,IAAI,oDAAJ,CAAoB,EAApB,CAAxB;AACH,O,CAED;AACA;AACA;;AAEA;;;;;;;;;;;gCAOQhD,K,EAA+BC,K,EAA0B;AAAA;;AAE7D,iBAAO,IAAIC,OAAJ,CAAY,UAACb,OAAD,EAAUc,MAAV,EAAqB;AAEpCD,mBAAO,CAACE,GAAR,CAAY,CACR,MAAI,CAAC6C,aAAL,EADQ,EAER,MAAI,CAACC,UAAL,EAFQ,CAAZ,EAGGzC,IAHH,CAII,YAAM;AACFpB,qBAAO;AACV,aANL,EAOIc,MAPJ;AASH,WAXM,CAAP;AAYH;AAED;;;;;;;;wCAKa;AAAA;;AAET,iBAAO,IAAID,OAAJ,CAAY,UAACb,OAAD,EAAUc,MAAV,EAAqB;AACpC,kBAAI,CAACL,WAAL,CAAiBY,GAAjB,CAAqB,wBAArB,EACKC,SADL,CACe,UAACC,QAAD,EAAmB;AAC1B,oBAAI,CAACmC,mBAAL,CAAyBlC,IAAzB,CAA8BD,QAA9B;;AACAvB,qBAAO,CAACuB,QAAD,CAAP;AACH,aAJL,EAIOT,MAJP;AAKH,WANM,CAAP;AAOH;AAED;;;;;;;;qCAKU;AAAA;;AAEN,iBAAO,IAAID,OAAJ,CAAY,UAACb,OAAD,EAAUc,MAAV,EAAqB;AACpC,kBAAI,CAACL,WAAL,CAAiBY,GAAjB,CAAqB,qBAArB,EACKC,SADL,CACe,UAACC,QAAD,EAAmB;AAC1B,oBAAI,CAACoC,gBAAL,CAAsBnC,IAAtB,CAA2BD,QAA3B;;AACAvB,qBAAO,CAACuB,QAAD,CAAP;AACH,aAJL,EAIOT,MAJP;AAKH,WANM,CAAP;AAOH;;;;;;;uBA5EQ2C,qB,EAAqB,uH;AAAA,K;;;aAArBA,qB;AAAqB,eAArBA,qBAAqB;;;;;sEAArBA,qB,EAAqB;cADjC;AACiC,Q;;;;;;;;;;;;;;;;;;;;;;ACNlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACyCwB;;AACI;;AACJ;;;;;;AAFgD;;AAC5C;;AAAA;;;;;;;;;;;;;;;;;;;AASZ;;AAGI;;AAEI;;AAGI;;AACI;;AACJ;;AAEA;;AACI;;AAAmC;;AAAW;;AAC9C;;AAAiB;;AAAqB;;AAC1C;;AAEJ;;AAEA;;AACI;;AAAgB;;AAAgB;;AAChC;;AAAqB;;AAA0B;;AACnD;;AAEA;;AACI;;AAEI;;AACJ;;AACJ;;AAEJ;;AAEJ;;;;;;AAhCuB,kGAA2B,UAA3B,EAA2B,4IAA3B;;AAKV;;AAAA;;AAGG;;AAAA;;AAKiB;;AAAA;;AAML;;AAAA;;AACK;;AAAA;;AAKb;;AAAA;;;;;;AASpB;;AACI;;AACJ;;;;;;;;;;;;;;;;;QD1EHK,uB;;;AAYT;;;;;AAKA,uCACYC,sBADZ,EACyD;AAAA;;AAA7C,aAAAA,sBAAA,GAAAA,sBAAA,CAA6C,CAGrD;;AACA,aAAKC,eAAL,GAAuB,KAAvB;AACA,aAAKC,UAAL,GAAkB,EAAlB,CALqD,CAOrD;;AACA,aAAKlC,eAAL,GAAuB,IAAI,4CAAJ,EAAvB;AACH,O,CAED;AACA;AACA;;AAEA;;;;;;;mCAGQ;AAAA;;AAEJ;AACA,eAAKgC,sBAAL,CAA4BL,mBAA5B,CACK1B,IADL,CACU,iEAAU,KAAKD,eAAf,CADV,EAEKT,SAFL,CAEe,UAAA4C,UAAU,EAAI;AACrB,kBAAI,CAACA,UAAL,GAAkBA,UAAlB;AACH,WAJL,EAHI,CASJ;;;AACA,eAAKH,sBAAL,CAA4BJ,gBAA5B,CACK3B,IADL,CACU,iEAAU,KAAKD,eAAf,CADV,EAEKT,SAFL,CAEe,UAAA6C,OAAO,EAAI;AAClB,kBAAI,CAACC,eAAL,GAAuB,MAAI,CAACC,yBAAL,GAAiC,MAAI,CAACF,OAAL,GAAeA,OAAvE;AACH,WAJL;AAKH;AAED;;;;;;sCAGW;AAEP;AACA,eAAKpC,eAAL,CAAqBP,IAArB;;AACA,eAAKO,eAAL,CAAqBU,QAArB;AACH,S,CAED;AACA;AACA;;AAEA;;;;;;kDAGuB;AAAA;;AAEnB;AACA,cAAK,KAAKuB,eAAL,KAAyB,KAA9B,EACA;AACI,iBAAKK,yBAAL,GAAiC,KAAKF,OAAtC;AACA,iBAAKC,eAAL,GAAuB,KAAKD,OAA5B;AACH,WAJD,MAMA;AACI,iBAAKE,yBAAL,GAAiC,KAAKF,OAAL,CAAaG,MAAb,CAAoB,UAACrC,MAAD,EAAY;AAC7D,qBAAOA,MAAM,CAACsC,QAAP,KAAoB,MAAI,CAACP,eAAhC;AACH,aAFgC,CAAjC;AAIA,iBAAKI,eAAL,sBAA2B,KAAKC,yBAAhC;AAEH,WAhBkB,CAkBnB;;;AACA,eAAKG,mBAAL;AACH;AAED;;;;;;8CAGmB;AAEf,cAAMP,UAAU,GAAG,KAAKA,UAAL,CAAgBQ,WAAhB,EAAnB,CAFe,CAIf;;AACA,cAAKR,UAAU,KAAK,EAApB,EACA;AACI,iBAAKG,eAAL,GAAuB,KAAKC,yBAA5B;AACH,WAHD,MAKA;AACI,iBAAKD,eAAL,GAAuB,KAAKC,yBAAL,CAA+BC,MAA/B,CAAsC,UAACrC,MAAD,EAAY;AACrE,qBAAOA,MAAM,CAACyC,KAAP,CAAaD,WAAb,GAA2BE,QAA3B,CAAoCV,UAApC,CAAP;AACH,aAFsB,CAAvB;AAGH;AACJ;;;;;;;uBA9GQH,uB,EAAuB,4J;AAAA,K;;;YAAvBA,uB;AAAuB,sC;AAAA,e;AAAA,c;AAAA,wkD;AAAA;AAAA;ACdpC;;AAGI;;AAEI;;AACI;;AAA4B;;AAAM;;AAClC;;AACI;;AACJ;;AACA;;AACI;;AAEJ;;AACJ;;AAEJ;;AAIA;;AAEI;;AAEI;;AAGI;;AACI;;AAAW;;AAAmB;;AAC9B;;AACO;AAAA;AAAA,aAAwB,OAAxB,EAAwB;AAAA,mBACf,IAAAU,mBAAA,EADe;AACM,WAD9B;;AADP;;AAGJ;;AAEA;;AACI;;AAAW;;AAAQ;;AACnB;;AAAY;AAAA;AAAA,aAA6B,iBAA7B,EAA6B;AAAA,mBACV,IAAAI,uBAAA,EADU;AACe,WAD5C;;AAER;;AACI;;AACJ;;AACA;;AAGJ;;AACJ;;AAEJ;;AAEA;;AAEI;;AAmCA;;AAIJ;;AAEJ;;AAEJ;;AAGJ;;;;AA1FgB;;AAAA;;AAGA;;AAAA;;AAoBW;;AAAA;;AAMK;;AAAA;;AAEI;;AAAA;;AAGA;;AAAA;;AAQwC;;AAAA;;AAExC;;AAAA;;AAmCI;;AAAA;;;;;;mBD1EvB;;;;;;sEAEJd,uB,EAAuB;cANnC,uDAMmC;eANzB;AACPX,kBAAQ,EAAK,iBADN;AAEPC,qBAAW,EAAE,0BAFN;AAGPC,mBAAS,EAAI,CAAC,0BAAD,CAHN;AAIPG,oBAAU,EAAG;AAJN,S;AAMyB,Q","file":"academy-academy-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\n\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\n\r\nimport { AcademyCoursesComponent } from 'app/main/apps/academy/courses/courses.component';\r\nimport { AcademyCourseComponent } from 'app/main/apps/academy/course/course.component';\r\nimport { AcademyCoursesService } from 'app/main/apps/academy/courses.service';\r\nimport { AcademyCourseService } from 'app/main/apps/academy/course.service';\r\nimport { FuseSidebarModule } from '@fuse/components';\r\n\r\nconst routes = [\r\n    {\r\n        path     : 'courses',\r\n        component: AcademyCoursesComponent,\r\n        resolve  : {\r\n            academy: AcademyCoursesService\r\n        }\r\n    },\r\n    {\r\n        path     : 'courses/:courseId/:courseSlug',\r\n        component: AcademyCourseComponent,\r\n        resolve  : {\r\n            academy: AcademyCourseService\r\n        }\r\n    },\r\n    {\r\n        path      : '**',\r\n        redirectTo: 'courses'\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AcademyCoursesComponent,\r\n        AcademyCourseComponent\r\n    ],\r\n    imports     : [\r\n        RouterModule.forChild(routes),\r\n\r\n        MatButtonModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatSelectModule,\r\n\r\n        FuseSharedModule,\r\n        FuseSidebarModule\r\n    ],\r\n    providers   : [\r\n        AcademyCoursesService,\r\n        AcademyCourseService\r\n    ]\r\n})\r\nexport class AcademyModule\r\n{\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AcademyCourseService implements Resolve<any>\r\n{\r\n    onCourseChanged: BehaviorSubject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {HttpClient} _httpClient\r\n     */\r\n    constructor(\r\n        private _httpClient: HttpClient\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.onCourseChanged = new BehaviorSubject({});\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Resolver\r\n     *\r\n     * @param {ActivatedRouteSnapshot} route\r\n     * @param {RouterStateSnapshot} state\r\n     * @returns {Observable<any> | Promise<any> | any}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            Promise.all([\r\n                this.getCourse(route.params.courseId, route.params.courseSlug)\r\n            ]).then(\r\n                () => {\r\n                    resolve();\r\n                },\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get course\r\n     *\r\n     * @param courseId\r\n     * @param courseSlug\r\n     * @returns {Promise<any>}\r\n     */\r\n    getCourse(courseId, courseSlug): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/academy-course/' + courseId + '/' + courseSlug)\r\n                .subscribe((response: any) => {\r\n                    this.onCourseChanged.next(response);\r\n                    resolve(response);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n}\r\n","import { AfterViewInit, ChangeDetectorRef, Component, OnDestroy, OnInit, QueryList, ViewChildren, ViewEncapsulation } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FusePerfectScrollbarDirective } from '@fuse/directives/fuse-perfect-scrollbar/fuse-perfect-scrollbar.directive';\r\nimport { FuseSidebarService } from '@fuse/components/sidebar/sidebar.service';\r\n\r\nimport { AcademyCourseService } from 'app/main/apps/academy/course.service';\r\n\r\n@Component({\r\n    selector     : 'academy-course',\r\n    templateUrl  : './course.component.html',\r\n    styleUrls    : ['./course.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class AcademyCourseComponent implements OnInit, OnDestroy, AfterViewInit\r\n{\r\n    animationDirection: 'left' | 'right' | 'none';\r\n    course: any;\r\n    courseStepContent: any;\r\n    currentStep: number;\r\n\r\n    @ViewChildren(FusePerfectScrollbarDirective)\r\n    fuseScrollbarDirectives: QueryList<FusePerfectScrollbarDirective>;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {AcademyCourseService} _academyCourseService\r\n     * @param {ChangeDetectorRef} _changeDetectorRef\r\n     * @param {FuseSidebarService} _fuseSidebarService\r\n     */\r\n    constructor(\r\n        private _academyCourseService: AcademyCourseService,\r\n        private _changeDetectorRef: ChangeDetectorRef,\r\n        private _fuseSidebarService: FuseSidebarService\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.animationDirection = 'none';\r\n        this.currentStep = 0;\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Subscribe to courses\r\n        this._academyCourseService.onCourseChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(course => {\r\n                this.course = course;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * After view init\r\n     */\r\n    ngAfterViewInit(): void\r\n    {\r\n        this.courseStepContent = this.fuseScrollbarDirectives.find((fuseScrollbarDirective) => {\r\n            return fuseScrollbarDirective.elementRef.nativeElement.id === 'course-step-content';\r\n        });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Go to step\r\n     *\r\n     * @param step\r\n     */\r\n    gotoStep(step): void\r\n    {\r\n        // Decide the animation direction\r\n        this.animationDirection = this.currentStep < step ? 'left' : 'right';\r\n\r\n        // Run change detection so the change\r\n        // in the animation direction registered\r\n        this._changeDetectorRef.detectChanges();\r\n\r\n        // Set the current step\r\n        this.currentStep = step;\r\n    }\r\n\r\n    /**\r\n     * Go to next step\r\n     */\r\n    gotoNextStep(): void\r\n    {\r\n        if ( this.currentStep === this.course.totalSteps - 1 )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Set the animation direction\r\n        this.animationDirection = 'left';\r\n\r\n        // Run change detection so the change\r\n        // in the animation direction registered\r\n        this._changeDetectorRef.detectChanges();\r\n\r\n        // Increase the current step\r\n        this.currentStep++;\r\n    }\r\n\r\n    /**\r\n     * Go to previous step\r\n     */\r\n    gotoPreviousStep(): void\r\n    {\r\n        if ( this.currentStep === 0 )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Set the animation direction\r\n        this.animationDirection = 'right';\r\n\r\n        // Run change detection so the change\r\n        // in the animation direction registered\r\n        this._changeDetectorRef.detectChanges();\r\n\r\n        // Decrease the current step\r\n        this.currentStep--;\r\n    }\r\n\r\n    /**\r\n     * Toggle the sidebar\r\n     *\r\n     * @param name\r\n     */\r\n    toggleSidebar(name): void\r\n    {\r\n        this._fuseSidebarService.getSidebar(name).toggleOpen();\r\n    }\r\n}\r\n","<div id=\"academy-course\" class=\"page-layout simple left-sidebar inner-scroll\">\r\n\r\n    <!-- SIDEBAR -->\r\n    <fuse-sidebar class=\"sidebar\" name=\"academy-course-left-sidebar-1\" position=\"left\" lockedOpen=\"gt-md\">\r\n\r\n        <!-- SIDEBAR CONTENT -->\r\n        <div class=\"content\" fusePerfectScrollbar>\r\n\r\n            <div class=\"steps\">\r\n\r\n                <div class=\"step\"\r\n                     *ngFor=\"let step of course.steps; let i = index; let last = last; let first = first\"\r\n                     (click)=\"gotoStep(i)\"\r\n                     [ngClass]=\"{'current': currentStep === i, 'completed': currentStep > i, 'last': last, 'first': first}\">\r\n                    <div class=\"index\">\r\n                        <span>{{i + 1}}</span>\r\n                    </div>\r\n                    <div class=\"title\">{{step.title}}</div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        <!-- / SIDEBAR CONTENT -->\r\n\r\n    </fuse-sidebar>\r\n    <!-- / SIDEBAR -->\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\">\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent p-24\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n            <button mat-icon-button class=\"sidebar-toggle mr-16\" fxHide.gt-md\r\n                    (click)=\"toggleSidebar('academy-course-left-sidebar-1')\">\r\n                <mat-icon>menu</mat-icon>\r\n            </button>\r\n\r\n            <button mat-icon-button class=\"mr-16\" [routerLink]=\"'/apps/academy/courses'\">\r\n                <mat-icon>arrow_back</mat-icon>\r\n            </button>\r\n\r\n            <div>\r\n                <h2>{{course.title}}</h2>\r\n            </div>\r\n\r\n        </div>\r\n        <!-- / HEADER -->\r\n\r\n        <!-- CONTENT -->\r\n        <div id=\"course-content\" class=\"content\">\r\n\r\n            <ng-container *ngFor=\"let step of course.steps; let i = index;\">\r\n\r\n                <div class=\"course-step\" fusePerfectScrollbar\r\n                     *ngIf=\"currentStep === i\"\r\n                     [@slideIn]=\"animationDirection\">\r\n\r\n                    <div id=\"course-step-content\" class=\"course-step-content\" [innerHTML]=\"step.content\"></div>\r\n\r\n                </div>\r\n\r\n            </ng-container>\r\n\r\n        </div>\r\n        <!-- / CONTENT -->\r\n\r\n        <div class=\"step-navigation\">\r\n\r\n            <button mat-fab class=\"previous mat-accent fuse-white-fg\"\r\n                    (click)=\"gotoPreviousStep()\"\r\n                    [disabled]=\"currentStep === 0\"\r\n                    [fxHide]=\"currentStep === 0\">\r\n                <mat-icon>chevron_left</mat-icon>\r\n            </button>\r\n\r\n            <button mat-fab class=\"next mat-accent fuse-white-fg\"\r\n                    (click)=\"gotoNextStep()\"\r\n                    [disabled]=\"currentStep === course.totalSteps - 1\"\r\n                    [fxHide]=\"currentStep === course.totalSteps - 1\">\r\n                <mat-icon>chevron_right</mat-icon>\r\n            </button>\r\n\r\n            <button mat-fab class=\"done green-600\"\r\n                    routerLink=\"/apps/academy/courses\"\r\n                    [disabled]=\"currentStep !== course.totalSteps - 1\"\r\n                    [fxShow]=\"currentStep === course.totalSteps - 1\">\r\n                <mat-icon>check</mat-icon>\r\n            </button>\r\n\r\n        </div>\r\n\r\n    </div>\r\n    <!-- / CENTER -->\r\n\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AcademyCoursesService implements Resolve<any>\r\n{\r\n    onCategoriesChanged: BehaviorSubject<any>;\r\n    onCoursesChanged: BehaviorSubject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {HttpClient} _httpClient\r\n     */\r\n    constructor(\r\n        private _httpClient: HttpClient\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.onCategoriesChanged = new BehaviorSubject({});\r\n        this.onCoursesChanged = new BehaviorSubject({});\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Resolver\r\n     *\r\n     * @param {ActivatedRouteSnapshot} route\r\n     * @param {RouterStateSnapshot} state\r\n     * @returns {Observable<any> | Promise<any> | any}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            Promise.all([\r\n                this.getCategories(),\r\n                this.getCourses()\r\n            ]).then(\r\n                () => {\r\n                    resolve();\r\n                },\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get categories\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getCategories(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/academy-categories')\r\n                .subscribe((response: any) => {\r\n                    this.onCategoriesChanged.next(response);\r\n                    resolve(response);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get courses\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getCourses(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/academy-courses')\r\n                .subscribe((response: any) => {\r\n                    this.onCoursesChanged.next(response);\r\n                    resolve(response);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { AcademyCoursesService } from 'app/main/apps/academy/courses.service';\r\n\r\n@Component({\r\n    selector   : 'academy-courses',\r\n    templateUrl: './courses.component.html',\r\n    styleUrls  : ['./courses.component.scss'],\r\n    animations : fuseAnimations\r\n})\r\nexport class AcademyCoursesComponent implements OnInit, OnDestroy\r\n{\r\n    categories: any[];\r\n    courses: any[];\r\n    coursesFilteredByCategory: any[];\r\n    filteredCourses: any[];\r\n    currentCategory: string;\r\n    searchTerm: string;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {AcademyCoursesService} _academyCoursesService\r\n     */\r\n    constructor(\r\n        private _academyCoursesService: AcademyCoursesService\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.currentCategory = 'all';\r\n        this.searchTerm = '';\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Subscribe to categories\r\n        this._academyCoursesService.onCategoriesChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(categories => {\r\n                this.categories = categories;\r\n            });\r\n\r\n        // Subscribe to courses\r\n        this._academyCoursesService.onCoursesChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(courses => {\r\n                this.filteredCourses = this.coursesFilteredByCategory = this.courses = courses;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Filter courses by category\r\n     */\r\n    filterCoursesByCategory(): void\r\n    {\r\n        // Filter\r\n        if ( this.currentCategory === 'all' )\r\n        {\r\n            this.coursesFilteredByCategory = this.courses;\r\n            this.filteredCourses = this.courses;\r\n        }\r\n        else\r\n        {\r\n            this.coursesFilteredByCategory = this.courses.filter((course) => {\r\n                return course.category === this.currentCategory;\r\n            });\r\n\r\n            this.filteredCourses = [...this.coursesFilteredByCategory];\r\n\r\n        }\r\n\r\n        // Re-filter by search term\r\n        this.filterCoursesByTerm();\r\n    }\r\n\r\n    /**\r\n     * Filter courses by term\r\n     */\r\n    filterCoursesByTerm(): void\r\n    {\r\n        const searchTerm = this.searchTerm.toLowerCase();\r\n\r\n        // Search\r\n        if ( searchTerm === '' )\r\n        {\r\n            this.filteredCourses = this.coursesFilteredByCategory;\r\n        }\r\n        else\r\n        {\r\n            this.filteredCourses = this.coursesFilteredByCategory.filter((course) => {\r\n                return course.title.toLowerCase().includes(searchTerm);\r\n            });\r\n        }\r\n    }\r\n}\r\n","<div id=\"academy-courses\" class=\"page-layout simple\">\r\n\r\n    <!-- HEADER -->\r\n    <div class=\"header accent p-16 p-sm-24\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n\r\n        <div class=\"hero-text\">\r\n            <mat-icon class=\"hero-icon\">school</mat-icon>\r\n            <h1 [@animate]=\"{value:'*',params:{delay:'100ms', y:'25px'}}\">\r\n                WELCOME TO ACADEMY\r\n            </h1>\r\n            <h3 [@animate]=\"{value:'*',params:{delay:'100ms', y:'25px'}}\">\r\n                Our courses will step you through the process of building a small application, or adding a new feature\r\n                to an existing application.\r\n            </h3>\r\n        </div>\r\n\r\n    </div>\r\n    <!-- / HEADER -->\r\n\r\n    <!-- CONTENT -->\r\n    <div class=\"content p-24\">\r\n\r\n        <div fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n\r\n            <div class=\"filters\" fxLayout=\"column\" fxLayoutAlign=\"center center\"\r\n                 fxLayout.gt-xs=\"row\" fxLayoutAlign.gt-xs=\"space-between center\">\r\n\r\n                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"course-search\">\r\n                    <mat-label>Search for a course</mat-label>\r\n                    <input matInput placeholder=\"Enter a keyword...\"\r\n                           [(ngModel)]=\"searchTerm\"\r\n                           (input)=\"filterCoursesByTerm()\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"category-selector\">\r\n                    <mat-label>Category</mat-label>\r\n                    <mat-select [(ngModel)]=\"currentCategory\"\r\n                                (selectionChange)=\"filterCoursesByCategory()\">\r\n                        <mat-option [value]=\"'all'\">\r\n                            All\r\n                        </mat-option>\r\n                        <mat-option *ngFor=\"let category of categories\" [value]=\"category.value\">\r\n                            {{ category.label }}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n\r\n            <div class=\"courses\" fxLayout=\"row wrap\" fxLayoutAlign=\"center\" [@animateStagger]=\"{value:'50'}\">\r\n\r\n                <div class=\"course\" *ngFor=\"let course of filteredCourses\" fxFlex=\"100\" fxFlex.gt-xs=\"50\"\r\n                     fxFlex.gt-sm=\"33\" [ngClass]=\"course.category\" [@animate]=\"{value:'*',params:{y:'100%'}}\">\r\n\r\n                    <div class=\"course-content\" fxLayout=\"column\" fxFlex=\"1 1 auto\">\r\n\r\n                        <div class=\"header\" fxLayout=\"row\" fxLayoutAlign=\"center center\"\r\n                             [ngClass]=\"course.category + '-bg'\">\r\n\r\n                            <div class=\"category\" fxFlex>\r\n                                {{course.category}}\r\n                            </div>\r\n\r\n                            <div class=\"length\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                                <mat-icon class=\"length-icon s-20\">access_time</mat-icon>\r\n                                <div class=\"min\">{{course.length}} min</div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"content\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFlex=\"1 1 auto\">\r\n                            <div class=\"h1\">{{course.title}}</div>\r\n                            <div class=\"updated\">Updated {{course.updated}}</div>\r\n                        </div>\r\n\r\n                        <div class=\"footer\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                            <button mat-button color=\"accent\"\r\n                                    [routerLink]=\"'/apps/academy/courses/' + course.id + '/' + course.slug\">\r\n                                START\r\n                            </button>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div class=\"no-courses\" *ngIf=\"filteredCourses.length === 0\">\r\n                    No courses found!\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n    <!-- / CONTENT -->\r\n\r\n</div>\r\n"]}