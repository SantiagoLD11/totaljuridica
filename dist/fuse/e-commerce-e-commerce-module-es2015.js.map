{"version":3,"sources":["./node_modules/@angular/material/__ivy_ngcc__/fesm2015/paginator.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/sort.js","./src/app/main/apps/e-commerce/consultas/consultas.component.ts","./src/app/main/apps/e-commerce/consultas/consultas.component.html","./src/app/main/apps/e-commerce/consultas/consultas.service.ts","./src/app/main/apps/e-commerce/documents/documents.component.ts","./src/app/main/apps/e-commerce/documents/documents.component.html","./src/app/main/apps/e-commerce/documents/documents.service.ts","./src/app/main/apps/e-commerce/e-commerce.module.ts","./src/app/main/apps/e-commerce/order/order-statuses.ts","./src/app/main/apps/e-commerce/order/order.component.ts","./src/app/main/apps/e-commerce/order/order.component.html","./src/app/main/apps/e-commerce/order/order.model.ts","./src/app/main/apps/e-commerce/order/order.service.ts","./src/app/main/apps/e-commerce/orders/orders.component.ts","./src/app/main/apps/e-commerce/orders/orders.component.html","./src/app/main/apps/e-commerce/orders/orders.service.ts","./src/app/main/apps/e-commerce/product/details/details.component.ts","./src/app/main/apps/e-commerce/product/details/details.component.html","./src/app/main/apps/e-commerce/product/file-list/file-list.component.ts","./src/app/main/apps/e-commerce/product/file-list/file-list.component.html","./src/app/main/apps/e-commerce/product/product.component.ts","./src/app/main/apps/e-commerce/product/product.component.html","./src/app/main/apps/e-commerce/product/product.model.ts","./src/app/main/apps/e-commerce/product/product.service.ts","./src/app/main/apps/e-commerce/products/products.component.ts","./src/app/main/apps/e-commerce/products/products.component.html","./src/app/main/apps/e-commerce/products/products.service.ts"],"names":[],"mappings":"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ACA,UAAU;AACV;AACA;AACA;AACA;AACA,gBAAgB,sDAAQ,QAAQ,sDAAQ;AACxC;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAsBV;AACD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,0BAA0B,4EAAa,CAAC,+EAAgB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,qBAAqB,wBAAwB;AAC7C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mCAAmC,kFAAoB;AACvD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,kBAAkB,qBAAqB;AACvC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,kFAAoB;AAC3C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kCAAkC,kFAAoB;AACtD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,2BAA2B,8BAA8B;AACzD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,aAAa,kFAAoB;AACjC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,wBAAwB,2BAA2B;AACnD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,6BAA6B,mFAAqB;AAClD;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gCAAgC,mCAAmC;AACnE;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qCAAqC,mFAAqB;AAC1D;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,sDAAsD,gCAAgC,+DAAwB,oBAAoB,+DAAwB,CAAC,+DAAwB,GAAG;AACtL,oBA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AI,wDAAiB;AACrB,CAAC;AACD;AACA;AACA,mEAAmE,GAAG;AACtE;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,oBAAoB,UAAU;AAC9B;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,WAAW,EAgBV;AACD;AACA;AACA;AACA;AACA,iBAAiB;AACjB,WAAW,EAWV;AACD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,0BAA0B,+EAAgB,CAAC,4EAAa;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA,gBAAgB;AAChB;AACA,qBAAqB,wBAAwB;AAC7C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,YAAY,+DAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,wBAAwB,2BAA2B;AACnD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,yBAAyB,sBAAsB,mFAAqB,IAAI;AACxE;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iDAAiD;AAC/E;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACr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Y,KAAK,iBAAiB;AAC1D;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,yCAAyC,GAAG;AAC5C,SAAS;AACT;AACA;AACA,gEAAgE,uCAAuC;AACvG,6CAA6C,wEAAkB,EAAE,gDAAgD,gCAAgC,EAAE,gDAAgD;AACnM,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;AAC5C,WAAW,EAYV;AACD;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,gBAAgB,sDAAQ,QAAQ,sDAAQ;AACxC;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,gCAAgC,4EAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,WAAW,EAKV;AACD;AACA;AACA;AACA;AACA,mCAAmC;AACnC,WAAW,EAGV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,kDAAK;AAC1C;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,qDAAqD;AACxG;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,wBAAwB,2BAA2B;AACnD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,yBAAyB,sBAAsB,mFAAqB,IAAI;AACxE;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,8DAA8D;AACzG;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,mDAAmD;AACtG;AACA;AACA,mDAAmD,mDAAmD;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,aAAa,qDAAqD;AAClE,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,kCAAkC,EAAE,qBAAqB;AAC3E;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,+BAA+B,UAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,wDAAw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","file":"e-commerce-e-commerce-module-es2015.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Injectable, ɵɵdefineInjectable, Optional, SkipSelf, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Input, Output, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { mixinDisabled, mixinInitialized } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/paginator-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/material/tooltip';\nimport * as ɵngcc4 from '@angular/material/form-field';\nimport * as ɵngcc5 from '@angular/material/select';\nimport * as ɵngcc6 from '@angular/material/core';\n\nfunction MatPaginator_div_2_mat_form_field_3_mat_option_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-option\", 19);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const pageSizeOption_r508 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", pageSizeOption_r508);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", pageSizeOption_r508, \" \");\n} }\nfunction MatPaginator_div_2_mat_form_field_3_Template(rf, ctx) { if (rf & 1) {\n    const _r510 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-form-field\", 16);\n    ɵngcc0.ɵɵelementStart(1, \"mat-select\", 17);\n    ɵngcc0.ɵɵlistener(\"selectionChange\", function MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r510); const ctx_r509 = ɵngcc0.ɵɵnextContext(2); return ctx_r509._changePageSize($event.value); });\n    ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_mat_form_field_3_mat_option_2_Template, 2, 2, \"mat-option\", 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r505 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"color\", ctx_r505.color);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r505.pageSize)(\"disabled\", ctx_r505.disabled)(\"aria-label\", ctx_r505._intl.itemsPerPageLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r505._displayedPageSizeOptions);\n} }\nfunction MatPaginator_div_2_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 20);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r506 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r506.pageSize);\n} }\nfunction MatPaginator_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, MatPaginator_div_2_mat_form_field_3_Template, 3, 5, \"mat-form-field\", 14);\n    ɵngcc0.ɵɵtemplate(4, MatPaginator_div_2_div_4_Template, 2, 1, \"div\", 15);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r502 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r502._intl.itemsPerPageLabel, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r502._displayedPageSizeOptions.length > 1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r502._displayedPageSizeOptions.length <= 1);\n} }\nfunction MatPaginator_button_6_Template(rf, ctx) { if (rf & 1) {\n    const _r512 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 21);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_6_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r512); const ctx_r511 = ɵngcc0.ɵɵnextContext(); return ctx_r511.firstPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r503 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r503._intl.firstPageLabel)(\"matTooltipDisabled\", ctx_r503._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r503._previousButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r503._intl.firstPageLabel);\n} }\nfunction MatPaginator_button_13_Template(rf, ctx) { if (rf & 1) {\n    const _r514 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵnamespaceHTML();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_13_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r514); const ctx_r513 = ɵngcc0.ɵɵnextContext(); return ctx_r513.lastPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 24);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r504 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r504._intl.lastPageLabel)(\"matTooltipDisabled\", ctx_r504._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r504._nextButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r504._intl.lastPageLabel);\n} }\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * A label for the page size selector.\n         */\n        this.itemsPerPageLabel = 'Items per page:';\n        /**\n         * A label for the button that increments the current page.\n         */\n        this.nextPageLabel = 'Next page';\n        /**\n         * A label for the button that decrements the current page.\n         */\n        this.previousPageLabel = 'Previous page';\n        /**\n         * A label for the button that moves to the first page.\n         */\n        this.firstPageLabel = 'First page';\n        /**\n         * A label for the button that moves to the last page.\n         */\n        this.lastPageLabel = 'Last page';\n        /**\n         * A label for the range of items within the current page and the length of the whole list.\n         */\n        this.getRangeLabel = (/**\n         * @param {?} page\n         * @param {?} pageSize\n         * @param {?} length\n         * @return {?}\n         */\n        (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            /** @type {?} */\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            /** @type {?} */\n            const endIndex = startIndex < length ?\n                Math.min(startIndex + pageSize, length) :\n                startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        });\n    }\n}\nMatPaginatorIntl.ɵfac = function MatPaginatorIntl_Factory(t) { return new (t || MatPaginatorIntl)(); };\n/** @nocollapse */ MatPaginatorIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatPaginatorIntl_Factory() { return new MatPaginatorIntl(); }, token: MatPaginatorIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatorIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream to emit from when labels are changed. Use this to notify components when the labels have\n     * changed after initialization.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.changes;\n    /**\n     * A label for the page size selector.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.itemsPerPageLabel;\n    /**\n     * A label for the button that increments the current page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.nextPageLabel;\n    /**\n     * A label for the button that decrements the current page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.previousPageLabel;\n    /**\n     * A label for the button that moves to the first page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.firstPageLabel;\n    /**\n     * A label for the button that moves to the last page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.lastPageLabel;\n    /**\n     * A label for the range of items within the current page and the length of the whole list.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.getRangeLabel;\n}\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/paginator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The default page size if there is no page size and there are no provided page size options.\n * @type {?}\n */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\nif (false) {\n    /**\n     * The current page index.\n     * @type {?}\n     */\n    PageEvent.prototype.pageIndex;\n    /**\n     * Index of the page that was selected previously.\n     * \\@breaking-change 8.0.0 To be made into a required property.\n     * @type {?}\n     */\n    PageEvent.prototype.previousPageIndex;\n    /**\n     * The current page size\n     * @type {?}\n     */\n    PageEvent.prototype.pageSize;\n    /**\n     * The current total number of items being paged\n     * @type {?}\n     */\n    PageEvent.prototype.length;\n}\n// Boilerplate for applying mixins to MatPaginator.\n/**\n * \\@docs-private\n */\nclass MatPaginatorBase {\n}\n/** @type {?} */\nconst _MatPaginatorBase = mixinDisabled(mixinInitialized(MatPaginatorBase));\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorBase {\n    /**\n     * @param {?} _intl\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_intl, _changeDetectorRef) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /**\n         * Event emitted when the paginator changes the page size or page index.\n         */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n    /**\n     * The zero-based page index of the displayed list of items. Defaulted to 0.\n     * @return {?}\n     */\n    get pageIndex() { return this._pageIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * The length of the total number of items that are being paginated. Defaulted to 0.\n     * @return {?}\n     */\n    get length() { return this._length; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Number of items to display on a page. By default set to 50.\n     * @return {?}\n     */\n    get pageSize() { return this._pageSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /**\n     * The set of provided page size options to display to the user.\n     * @return {?}\n     */\n    get pageSizeOptions() { return this._pageSizeOptions; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map((/**\n         * @param {?} p\n         * @return {?}\n         */\n        p => coerceNumberProperty(p)));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /**\n     * Whether to hide the page size selection UI from the user.\n     * @return {?}\n     */\n    get hidePageSize() { return this._hidePageSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to show the first/last buttons UI to the user.\n     * @return {?}\n     */\n    get showFirstLastButtons() { return this._showFirstLastButtons; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /**\n     * Advances to the next page if it exists.\n     * @return {?}\n     */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex++;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move back to the previous page if it exists.\n     * @return {?}\n     */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex--;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move to the first page if not already there.\n     * @return {?}\n     */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move to the last page if not already there.\n     * @return {?}\n     */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Whether there is a previous page.\n     * @return {?}\n     */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /**\n     * Whether there is a next page.\n     * @return {?}\n     */\n    hasNextPage() {\n        /** @type {?} */\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /**\n     * Calculate the number of pages\n     * @return {?}\n     */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     * @param {?} pageSize\n     * @return {?}\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        /** @type {?} */\n        const startIndex = this.pageIndex * this.pageSize;\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Checks whether the buttons for going forwards should be disabled.\n     * @return {?}\n     */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /**\n     * Checks whether the buttons for going backwards should be disabled.\n     * @return {?}\n     */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     * @private\n     * @return {?}\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize = this.pageSizeOptions.length != 0 ?\n                this.pageSizeOptions[0] :\n                DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => a - b));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Emits an event notifying that a change of the paginator's properties has been triggered.\n     * @private\n     * @param {?} previousPageIndex\n     * @return {?}\n     */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length\n        });\n    }\n}\nMatPaginator.ɵfac = function MatPaginator_Factory(t) { return new (t || MatPaginator)(ɵngcc0.ɵɵdirectiveInject(MatPaginatorIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatPaginator.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatPaginator, selectors: [[\"mat-paginator\"]], hostAttrs: [1, \"mat-paginator\"], inputs: { disabled: \"disabled\", pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\", color: \"color\" }, outputs: { page: \"page\" }, exportAs: [\"matPaginator\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 14, vars: 14, consts: [[1, \"mat-paginator-outer-container\"], [1, \"mat-paginator-container\"], [\"class\", \"mat-paginator-page-size\", 4, \"ngIf\"], [1, \"mat-paginator-range-actions\"], [1, \"mat-paginator-range-label\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-previous\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"viewBox\", \"0 0 24 24\", \"focusable\", \"false\", 1, \"mat-paginator-icon\"], [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-next\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [1, \"mat-paginator-page-size\"], [1, \"mat-paginator-page-size-label\"], [\"class\", \"mat-paginator-page-size-select\", 3, \"color\", 4, \"ngIf\"], [\"class\", \"mat-paginator-page-size-value\", 4, \"ngIf\"], [1, \"mat-paginator-page-size-select\", 3, \"color\"], [3, \"value\", \"disabled\", \"aria-label\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"mat-paginator-page-size-value\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"]], template: function MatPaginator_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_Template, 5, 3, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n        ɵngcc0.ɵɵtext(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, MatPaginator_button_6_Template, 3, 5, \"button\", 5);\n        ɵngcc0.ɵɵelementStart(7, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_7_listener($event) { return ctx.previousPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(8, \"svg\", 7);\n        ɵngcc0.ɵɵelement(9, \"path\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelementStart(10, \"button\", 9);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_10_listener($event) { return ctx.nextPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(11, \"svg\", 7);\n        ɵngcc0.ɵɵelement(12, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(13, MatPaginator_button_13_Template, 3, 5, \"button\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.hidePageSize);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx._intl.getRangeLabel(ctx.pageIndex, ctx.pageSize, ctx.length), \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.previousPageLabel)(\"matTooltipDisabled\", ctx._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._previousButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.previousPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.nextPageLabel)(\"matTooltipDisabled\", ctx._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._nextButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.nextPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.MatButton, ɵngcc3.MatTooltip, ɵngcc4.MatFormField, ɵngcc5.MatSelect, ɵngcc1.NgForOf, ɵngcc6.MatOption], styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;min-height:56px;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatPaginator.ctorParameters = () => [\n    { type: MatPaginatorIntl },\n    { type: ChangeDetectorRef }\n];\nMatPaginator.propDecorators = {\n    color: [{ type: Input }],\n    pageIndex: [{ type: Input }],\n    length: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    pageSizeOptions: [{ type: Input }],\n    hidePageSize: [{ type: Input }],\n    showFirstLastButtons: [{ type: Input }],\n    page: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginator, [{\n        type: Component,\n        args: [{\n                selector: 'mat-paginator',\n                exportAs: 'matPaginator',\n                template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-paginator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;min-height:56px;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"]\n            }]\n    }], function () { return [{ type: MatPaginatorIntl }, { type: ɵngcc0.ChangeDetectorRef }]; }, { page: [{\n            type: Output\n        }], pageIndex: [{\n            type: Input\n        }], length: [{\n            type: Input\n        }], pageSize: [{\n            type: Input\n        }], pageSizeOptions: [{\n            type: Input\n        }], hidePageSize: [{\n            type: Input\n        }], showFirstLastButtons: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_pageIndex;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_length;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_pageSize;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_hidePageSize;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_showFirstLastButtons;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._initialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._intlChanges;\n    /**\n     * Theme color to be used for the underlying form controls.\n     * @type {?}\n     */\n    MatPaginator.prototype.color;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._pageIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._length;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._pageSize;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._pageSizeOptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._hidePageSize;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._showFirstLastButtons;\n    /**\n     * Event emitted when the paginator changes the page size or page index.\n     * @type {?}\n     */\n    MatPaginator.prototype.page;\n    /**\n     * Displayed set of page size options. Will be sorted and include current page size.\n     * @type {?}\n     */\n    MatPaginator.prototype._displayedPageSizeOptions;\n    /** @type {?} */\n    MatPaginator.prototype._intl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._changeDetectorRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/paginator-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatPaginatorModule {\n}\nMatPaginatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatPaginatorModule });\nMatPaginatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatPaginatorModule_Factory(t) { return new (t || MatPaginatorModule)(); }, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatSelectModule,\n            MatTooltipModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPaginatorModule, { declarations: function () { return [MatPaginator]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatTooltipModule]; }, exports: function () { return [MatPaginator]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatorModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatSelectModule,\n                    MatTooltipModule,\n                ],\n                exports: [MatPaginator],\n                declarations: [MatPaginator],\n                providers: [MAT_PAGINATOR_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent };\n\n//# sourceMappingURL=paginator.js.map","import { EventEmitter, isDevMode, Directive, Input, Output, Injectable, ɵɵdefineInjectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Inject, ElementRef, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinInitialized, mixinDisabled, AnimationDurations, AnimationCurves } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @param {?} id\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"mat-sort-header\", \"\"];\nfunction MatSortHeader_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r517 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵlistener(\"@arrowPosition.start\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r517); const ctx_r516 = ɵngcc0.ɵɵnextContext(); return ctx_r516._disableViewStateAnimation = true; })(\"@arrowPosition.done\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r517); const ctx_r518 = ɵngcc0.ɵɵnextContext(); return ctx_r518._disableViewStateAnimation = false; });\n    ɵngcc0.ɵɵelement(1, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 5);\n    ɵngcc0.ɵɵelement(3, \"div\", 6);\n    ɵngcc0.ɵɵelement(4, \"div\", 7);\n    ɵngcc0.ɵɵelement(5, \"div\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r515 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@arrowOpacity\", ctx_r515._getArrowViewState())(\"@arrowPosition\", ctx_r515._getArrowViewState())(\"@allowChildren\", ctx_r515._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"@indicator\", ctx_r515._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@leftPointer\", ctx_r515._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@rightPointer\", ctx_r515._getArrowDirectionState());\n} }\nconst _c1 = [\"*\"];\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/**\n * \\@docs-private\n * @param {?} direction\n * @return {?}\n */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a directive that holds sorting state consumed by `MatSortHeader`.\n * @record\n */\nfunction MatSortable() { }\nif (false) {\n    /**\n     * The id of the column being sorted.\n     * @type {?}\n     */\n    MatSortable.prototype.id;\n    /**\n     * Starting sort direction.\n     * @type {?}\n     */\n    MatSortable.prototype.start;\n    /**\n     * Whether to disable clearing the sorting state.\n     * @type {?}\n     */\n    MatSortable.prototype.disableClear;\n}\n/**\n * The current sort state.\n * @record\n */\nfunction Sort() { }\nif (false) {\n    /**\n     * The id of the column being sorted.\n     * @type {?}\n     */\n    Sort.prototype.active;\n    /**\n     * The sort direction.\n     * @type {?}\n     */\n    Sort.prototype.direction;\n}\n// Boilerplate for applying mixins to MatSort.\n/**\n * \\@docs-private\n */\nclass MatSortBase {\n}\n/** @type {?} */\nconst _MatSortMixinBase = mixinInitialized(mixinDisabled(MatSortBase));\n/**\n * Container for MatSortables to manage the sort state and provide default sort parameters.\n */\nclass MatSort extends _MatSortMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Collection of all registered sortables that this directive manages.\n         */\n        this.sortables = new Map();\n        /**\n         * Used to notify any child components listening to state changes.\n         */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overriden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /**\n         * Event emitted when the user changes either the active sort or sort direction.\n         */\n        this.sortChange = new EventEmitter();\n    }\n    /**\n     * The sort direction of the currently active MatSortable.\n     * @return {?}\n     */\n    get direction() { return this._direction; }\n    /**\n     * @param {?} direction\n     * @return {?}\n     */\n    set direction(direction) {\n        if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    /**\n     * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n     * May be overriden by the MatSortable's disable clear input.\n     * @return {?}\n     */\n    get disableClear() { return this._disableClear; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     * @param {?} sortable\n     * @return {?}\n     */\n    register(sortable) {\n        if (!sortable.id) {\n            throw getSortHeaderMissingIdError();\n        }\n        if (this.sortables.has(sortable.id)) {\n            throw getSortDuplicateSortableIdError(sortable.id);\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     * @param {?} sortable\n     * @return {?}\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /**\n     * Sets the active sort id and determines the new sort direction.\n     * @param {?} sortable\n     * @return {?}\n     */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /**\n     * Returns the next sort direction of the active sortable, checking for potential overrides.\n     * @param {?} sortable\n     * @return {?}\n     */\n    getNextSortDirection(sortable) {\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        /** @type {?} */\n        const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n        /** @type {?} */\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        /** @type {?} */\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._markInitialized();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatSort.ɵfac = function MatSort_Factory(t) { return ɵMatSort_BaseFactory(t || MatSort); };\nMatSort.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSort, selectors: [[\"\", \"matSort\", \"\"]], hostAttrs: [1, \"mat-sort\"], inputs: { disabled: [\"matSortDisabled\", \"disabled\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\"], active: [\"matSortActive\", \"active\"] }, outputs: { sortChange: \"matSortChange\" }, exportAs: [\"matSort\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature()] });\nMatSort.propDecorators = {\n    active: [{ type: Input, args: ['matSortActive',] }],\n    start: [{ type: Input, args: ['matSortStart',] }],\n    direction: [{ type: Input, args: ['matSortDirection',] }],\n    disableClear: [{ type: Input, args: ['matSortDisableClear',] }],\n    sortChange: [{ type: Output, args: ['matSortChange',] }]\n};\nconst ɵMatSort_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSort);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSort, [{\n        type: Directive,\n        args: [{\n                selector: '[matSort]',\n                exportAs: 'matSort',\n                host: { 'class': 'mat-sort' },\n                inputs: ['disabled: matSortDisabled']\n            }]\n    }], null, { start: [{\n            type: Input,\n            args: ['matSortStart']\n        }], sortChange: [{\n            type: Output,\n            args: ['matSortChange']\n        }], direction: [{\n            type: Input,\n            args: ['matSortDirection']\n        }], disableClear: [{\n            type: Input,\n            args: ['matSortDisableClear']\n        }], active: [{\n            type: Input,\n            args: ['matSortActive']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSort.ngAcceptInputType_disableClear;\n    /** @type {?} */\n    MatSort.ngAcceptInputType_disabled;\n    /**\n     * Collection of all registered sortables that this directive manages.\n     * @type {?}\n     */\n    MatSort.prototype.sortables;\n    /**\n     * Used to notify any child components listening to state changes.\n     * @type {?}\n     */\n    MatSort.prototype._stateChanges;\n    /**\n     * The id of the most recently sorted MatSortable.\n     * @type {?}\n     */\n    MatSort.prototype.active;\n    /**\n     * The direction to set when an MatSortable is initially sorted.\n     * May be overriden by the MatSortable's sort start.\n     * @type {?}\n     */\n    MatSort.prototype.start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSort.prototype._direction;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSort.prototype._disableClear;\n    /**\n     * Event emitted when the user changes either the active sort or sort direction.\n     * @type {?}\n     */\n    MatSort.prototype.sortChange;\n}\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear.\n * @param {?} start\n * @param {?} disableClear\n * @return {?}\n */\nfunction getSortDirectionCycle(start, disableClear) {\n    /** @type {?} */\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' +\n    AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * \\@docs-private\n * @type {?}\n */\nconst matSortAnimations = {\n    /**\n     * Animation that moves the sort indicator.\n     */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that rotates the left pointer of the indicator based on the sorting direction.\n     */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that rotates the right pointer of the indicator based on the sorting direction.\n     */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that controls the arrow opacity.\n     */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: .54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(-25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(25%)' })\n        ]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(-25%)' })\n        ]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /**\n     * Necessary trigger that calls animate on children animations.\n     */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [\n            query('@*', animateChild(), { optional: true })\n        ])\n    ]),\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-header-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * ARIA label for the sorting button.\n         */\n        this.sortButtonLabel = (/**\n         * @param {?} id\n         * @return {?}\n         */\n        (id) => {\n            return `Change sorting for ${id}`;\n        });\n    }\n}\nMatSortHeaderIntl.ɵfac = function MatSortHeaderIntl_Factory(t) { return new (t || MatSortHeaderIntl)(); };\n/** @nocollapse */ MatSortHeaderIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatSortHeaderIntl_Factory() { return new MatSortHeaderIntl(); }, token: MatSortHeaderIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortHeaderIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     * @type {?}\n     */\n    MatSortHeaderIntl.prototype.changes;\n    /**\n     * ARIA label for the sorting button.\n     * @type {?}\n     */\n    MatSortHeaderIntl.prototype.sortButtonLabel;\n}\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to the sort header.\n/**\n * \\@docs-private\n */\nclass MatSortHeaderBase {\n}\n/** @type {?} */\nconst _MatSortHeaderMixinBase = mixinDisabled(MatSortHeaderBase);\n/**\n * States describing the arrow's animated position (animating fromState to toState).\n * If the fromState is not defined, there will be no animated transition to the toState.\n * \\@docs-private\n * @record\n */\nfunction ArrowViewStateTransition() { }\nif (false) {\n    /** @type {?|undefined} */\n    ArrowViewStateTransition.prototype.fromState;\n    /** @type {?} */\n    ArrowViewStateTransition.prototype.toState;\n}\n/**\n * Column definition associated with a `MatSortHeader`.\n * @record\n */\nfunction MatSortHeaderColumnDef() { }\nif (false) {\n    /** @type {?} */\n    MatSortHeaderColumnDef.prototype.name;\n}\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader extends _MatSortHeaderMixinBase {\n    /**\n     * @param {?} _intl\n     * @param {?} changeDetectorRef\n     * @param {?} _sort\n     * @param {?} _columnDef\n     * @param {?=} _focusMonitor\n     * @param {?=} _elementRef\n     */\n    constructor(_intl, changeDetectorRef, _sort, _columnDef, _focusMonitor, _elementRef) {\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        super();\n        this._intl = _intl;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        this._focusMonitor = _focusMonitor;\n        this._elementRef = _elementRef;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /**\n         * The direction the arrow should be facing according to the current state.\n         */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /**\n         * Sets the position of the arrow that displays when sorted.\n         */\n        this.arrowPosition = 'after';\n        if (!_sort) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        this._rerenderSubscription = merge(_sort.sortChange, _sort._stateChanges, _intl.changes)\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._isSorted()) {\n                this._updateArrowDirection();\n            }\n            // If this header was recently active and now no longer sorted, animate away the arrow.\n            if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = false;\n                this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n            }\n            changeDetectorRef.markForCheck();\n        }));\n        if (_focusMonitor && _elementRef) {\n            // We use the focus monitor because we also want to style\n            // things differently based on the focus origin.\n            _focusMonitor.monitor(_elementRef, true)\n                .subscribe((/**\n             * @param {?} origin\n             * @return {?}\n             */\n            origin => this._setIndicatorHintVisible(!!origin)));\n        }\n    }\n    /**\n     * Overrides the disable clear value of the containing MatSort for this MatSortable.\n     * @return {?}\n     */\n    get disableClear() { return this._disableClear; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({ toState: this._isSorted() ? 'active' : this._arrowDirection });\n        this._sort.register(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // @breaking-change 10.0.0 Remove null check for _focusMonitor and _elementRef.\n        if (this._focusMonitor && this._elementRef) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     * @param {?} visible\n     * @return {?}\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     * @param {?} viewState\n     * @return {?}\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState;\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /**\n     * Triggers the sort on this sort header and removes the indicator hint.\n     * @return {?}\n     */\n    _handleClick() {\n        if (this._isDisabled()) {\n            return;\n        }\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n        // If the arrow is now sorted, animate the arrow into place. Otherwise, animate it away into\n        // the direction it is facing.\n        /** @type {?} */\n        const viewState = this._isSorted() ?\n            { fromState: this._arrowDirection, toState: 'active' } :\n            { fromState: 'active', toState: this._arrowDirection };\n        this._setAnimationTransitionState(viewState);\n        this._showIndicatorHint = false;\n    }\n    /**\n     * Whether this MatSortHeader is currently sorted in either ascending or descending order.\n     * @return {?}\n     */\n    _isSorted() {\n        return this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n    }\n    /**\n     * Returns the animation state for the arrow direction (indicator and pointers).\n     * @return {?}\n     */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /**\n     * Returns the arrow position state (opacity, translation).\n     * @return {?}\n     */\n    _getArrowViewState() {\n        /** @type {?} */\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     * @return {?}\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ?\n            this._sort.direction :\n            (this.start || this._sort.start);\n    }\n    /**\n     * @return {?}\n     */\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     * @return {?}\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return null;\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /**\n     * Whether the arrow inside the sort header should be rendered.\n     * @return {?}\n     */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n}\nMatSortHeader.ɵfac = function MatSortHeader_Factory(t) { return new (t || MatSortHeader)(ɵngcc0.ɵɵdirectiveInject(MatSortHeaderIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatSort, 8), ɵngcc0.ɵɵdirectiveInject('MAT_SORT_HEADER_COLUMN_DEF', 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatSortHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSortHeader, selectors: [[\"\", \"mat-sort-header\", \"\"]], hostAttrs: [1, \"mat-sort-header\"], hostVars: 3, hostBindings: function MatSortHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatSortHeader_click_HostBindingHandler($event) { return ctx._handleClick(); })(\"mouseenter\", function MatSortHeader_mouseenter_HostBindingHandler($event) { return ctx._setIndicatorHintVisible(true); })(\"mouseleave\", function MatSortHeader_mouseleave_HostBindingHandler($event) { return ctx._setIndicatorHintVisible(false); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-sort\", ctx._getAriaSortAttribute());\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-disabled\", ctx._isDisabled());\n    } }, inputs: { disabled: \"disabled\", arrowPosition: \"arrowPosition\", disableClear: \"disableClear\", id: [\"mat-sort-header\", \"id\"], start: \"start\" }, exportAs: [\"matSortHeader\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 7, consts: [[1, \"mat-sort-header-container\"], [\"type\", \"button\", 1, \"mat-sort-header-button\"], [\"class\", \"mat-sort-header-arrow\", 4, \"ngIf\"], [1, \"mat-sort-header-arrow\"], [1, \"mat-sort-header-stem\"], [1, \"mat-sort-header-indicator\"], [1, \"mat-sort-header-pointer-left\"], [1, \"mat-sort-header-pointer-right\"], [1, \"mat-sort-header-pointer-middle\"]], template: function MatSortHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"button\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, MatSortHeader_div_3_Template, 6, 6, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-sorted\", ctx._isSorted())(\"mat-sort-header-position-before\", ctx.arrowPosition == \"before\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx._isDisabled() || null)(\"aria-label\", ctx._intl.sortButtonLabel(ctx.id));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._renderArrow());\n    } }, directives: [ɵngcc2.NgIf], styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-button{border:none;background:0 0;display:flex;align-items:center;padding:0;cursor:inherit;outline:0;font:inherit;color:currentColor}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-button,[mat-sort-header].cdk-program-focused .mat-sort-header-button{border-bottom:solid 1px currentColor}.mat-sort-header-button::-moz-focus-inner{border:0}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"], encapsulation: 2, data: { animation: [\n            matSortAnimations.indicator,\n            matSortAnimations.leftPointer,\n            matSortAnimations.rightPointer,\n            matSortAnimations.arrowOpacity,\n            matSortAnimations.arrowPosition,\n            matSortAnimations.allowChildren,\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatSortHeader.ctorParameters = () => [\n    { type: MatSortHeaderIntl },\n    { type: ChangeDetectorRef },\n    { type: MatSort, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: ['MAT_SORT_HEADER_COLUMN_DEF',] }, { type: Optional }] },\n    { type: FocusMonitor },\n    { type: ElementRef }\n];\nMatSortHeader.propDecorators = {\n    id: [{ type: Input, args: ['mat-sort-header',] }],\n    arrowPosition: [{ type: Input }],\n    start: [{ type: Input }],\n    disableClear: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortHeader, [{\n        type: Component,\n        args: [{\n                selector: '[mat-sort-header]',\n                exportAs: 'matSortHeader',\n                template: \"<div class=\\\"mat-sort-header-container\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition == 'before'\\\">\\n  <button class=\\\"mat-sort-header-button\\\" type=\\\"button\\\"\\n          [attr.disabled]=\\\"_isDisabled() || null\\\"\\n          [attr.aria-label]=\\\"_intl.sortButtonLabel(id)\\\">\\n    <ng-content></ng-content>\\n  </button>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-sort-header',\n                    '(click)': '_handleClick()',\n                    '(mouseenter)': '_setIndicatorHintVisible(true)',\n                    '(mouseleave)': '_setIndicatorHintVisible(false)',\n                    '[attr.aria-sort]': '_getAriaSortAttribute()',\n                    '[class.mat-sort-header-disabled]': '_isDisabled()'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                animations: [\n                    matSortAnimations.indicator,\n                    matSortAnimations.leftPointer,\n                    matSortAnimations.rightPointer,\n                    matSortAnimations.arrowOpacity,\n                    matSortAnimations.arrowPosition,\n                    matSortAnimations.allowChildren,\n                ],\n                styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-button{border:none;background:0 0;display:flex;align-items:center;padding:0;cursor:inherit;outline:0;font:inherit;color:currentColor}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-button,[mat-sort-header].cdk-program-focused .mat-sort-header-button{border-bottom:solid 1px currentColor}.mat-sort-header-button::-moz-focus-inner{border:0}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"]\n            }]\n    }], function () { return [{ type: MatSortHeaderIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSort, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: ['MAT_SORT_HEADER_COLUMN_DEF']\n            }, {\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }]; }, { arrowPosition: [{\n            type: Input\n        }], disableClear: [{\n            type: Input\n        }], id: [{\n            type: Input,\n            args: ['mat-sort-header']\n        }], start: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSortHeader.ngAcceptInputType_disableClear;\n    /** @type {?} */\n    MatSortHeader.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._rerenderSubscription;\n    /**\n     * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n     * provide an affordance that the header is sortable by showing on focus and hover.\n     * @type {?}\n     */\n    MatSortHeader.prototype._showIndicatorHint;\n    /**\n     * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n     * position through the animation. If animations are currently disabled, the fromState is removed\n     * so that there is no animation displayed.\n     * @type {?}\n     */\n    MatSortHeader.prototype._viewState;\n    /**\n     * The direction the arrow should be facing according to the current state.\n     * @type {?}\n     */\n    MatSortHeader.prototype._arrowDirection;\n    /**\n     * Whether the view state animation should show the transition between the `from` and `to` states.\n     * @type {?}\n     */\n    MatSortHeader.prototype._disableViewStateAnimation;\n    /**\n     * ID of this sort header. If used within the context of a CdkColumnDef, this will default to\n     * the column's name.\n     * @type {?}\n     */\n    MatSortHeader.prototype.id;\n    /**\n     * Sets the position of the arrow that displays when sorted.\n     * @type {?}\n     */\n    MatSortHeader.prototype.arrowPosition;\n    /**\n     * Overrides the sort start value of the containing MatSort for this MatSortable.\n     * @type {?}\n     */\n    MatSortHeader.prototype.start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._disableClear;\n    /** @type {?} */\n    MatSortHeader.prototype._intl;\n    /** @type {?} */\n    MatSortHeader.prototype._sort;\n    /** @type {?} */\n    MatSortHeader.prototype._columnDef;\n    /**\n     * @deprecated _focusMonitor and _elementRef to become required parameters.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSortModule {\n}\nMatSortModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSortModule });\nMatSortModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSortModule_Factory(t) { return new (t || MatSortModule)(); }, providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSortModule, { declarations: function () { return [MatSort,\n        MatSortHeader]; }, imports: function () { return [CommonModule]; }, exports: function () { return [MatSort,\n        MatSortHeader]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: [MatSort, MatSortHeader],\n                declarations: [MatSort, MatSortHeader],\n                providers: [MAT_SORT_HEADER_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-direction.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n\n//# sourceMappingURL=sort.js.map","import { Component, ElementRef, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { BehaviorSubject, fromEvent, merge, Observable, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseUtils } from '@fuse/utils';\r\n\r\nimport { ConsultasService } from 'app/main/apps/e-commerce/consultas/consultas.service';\r\nimport { takeUntil } from 'rxjs/internal/operators';\r\nimport { FuseConfigService } from '@fuse/services/config.service';\r\nimport { LoginService } from 'app/main/pages/authentication/login-2/login.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector     : 'e-commerce-orders',\r\n    templateUrl  : './consultas.component.html',\r\n    styleUrls    : ['./consultas.component.scss'],\r\n    animations   : fuseAnimations,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ConsultasComponent implements OnInit, OnDestroy\r\n{\r\n    dataSource: FilesDataSource | null;\r\n    displayedColumns = ['secuencia', 'perfil', 'fecha', 'url'];\r\n\r\n    @ViewChild(MatPaginator, {static: true})\r\n    paginator: MatPaginator;\r\n\r\n    @ViewChild('filter', {static: true})\r\n    filter: ElementRef;\r\n\r\n    @ViewChild(MatSort, {static: true})\r\n    sort: MatSort;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    public profile;\r\n    nombre;\r\n    cc;\r\n    email;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {EcommerceOrdersService} _ecommerceOrdersService\r\n     */\r\n    constructor(\r\n        private _loginService: LoginService,\r\n        private _ecommerceOrdersService: ConsultasService,\r\n        private _fuseConfigService: FuseConfigService,\r\n        private router: Router\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n        this._unsubscribeAll = new Subject();\r\n        this._fuseConfigService.config = {\r\n            layout: {\r\n                navbar: {\r\n                    hidden: true\r\n                },\r\n                toolbar: {\r\n                    hidden: true\r\n                },\r\n                footer: {\r\n                    hidden: true\r\n                },\r\n                sidepanel: {\r\n                    hidden: true\r\n                }\r\n            }\r\n        };\r\n        \r\n\r\n    }\r\n\r\n    logout(): void {\r\n        this.router.navigateByUrl('/pages/login');\r\n        this._loginService.logout();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this.dataSource = new FilesDataSource(this._ecommerceOrdersService, this.paginator, this.sort);\r\n\r\n        this.profile = JSON.parse(this._loginService.GetProfile());\r\n        this.nombre = this.profile[1];\r\n        this.cc = this.profile[2];\r\n        this.email = this.profile[3];\r\n\r\n        console.log(\"*****************\", this.profile);\r\n\r\n        fromEvent(this.filter.nativeElement, 'keyup')\r\n            .pipe(\r\n                takeUntil(this._unsubscribeAll),\r\n                debounceTime(150),\r\n                distinctUntilChanged()\r\n            )\r\n            .subscribe(() => {\r\n                if ( !this.dataSource )\r\n                {\r\n                    return;\r\n                }\r\n                console.log(this.filter.nativeElement.value);\r\n                this.dataSource.filter = this.filter.nativeElement.value;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n}\r\n\r\nexport class FilesDataSource extends DataSource<any>\r\n{\r\n    // Private\r\n    private _filterChange = new BehaviorSubject('');\r\n    private _filteredDataChange = new BehaviorSubject('');\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {EcommerceOrdersService} _ecommerceOrdersService\r\n     * @param {MatPaginator} _matPaginator\r\n     * @param {MatSort} _matSort\r\n     */\r\n    constructor(\r\n        private _ecommerceOrdersService: ConsultasService,\r\n        private _matPaginator: MatPaginator,\r\n        private _matSort: MatSort\r\n    )\r\n    {\r\n        super();\r\n\r\n\r\n        this.filteredData = this._ecommerceOrdersService.orders;\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Accessors\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    // Filtered data\r\n    get filteredData(): any\r\n    {\r\n        return this._filteredDataChange.value;\r\n    }\r\n\r\n    set filteredData(value: any)\r\n    {\r\n        this._filteredDataChange.next(value);\r\n    }\r\n\r\n    // Filter\r\n    get filter(): string\r\n    {\r\n        return this._filterChange.value;\r\n    }\r\n\r\n    set filter(filter: string)\r\n    {\r\n        this._filterChange.next(filter);\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Connect function called by the table to retrieve one stream containing the data to render.\r\n     *\r\n     * @returns {Observable<any[]>}\r\n     */\r\n    connect(): Observable<any[]>\r\n    {\r\n        const displayDataChanges = [\r\n            this._ecommerceOrdersService.onOrdersChanged,\r\n            this._matPaginator.page,\r\n            this._filterChange,\r\n            this._matSort.sortChange\r\n        ];\r\n\r\n        return merge(...displayDataChanges).pipe(map(() => {\r\n\r\n                let data = this._ecommerceOrdersService.orders.slice();\r\n\r\n                data = this.filterData(data);\r\n\r\n                this.filteredData = [...data];\r\n\r\n                data = this.sortData(data);\r\n\r\n                // Grab the page's slice of data.\r\n                const startIndex = this._matPaginator.pageIndex * this._matPaginator.pageSize;\r\n                return data.splice(startIndex, this._matPaginator.pageSize);\r\n            })\r\n        );\r\n\r\n    }\r\n\r\n    /**\r\n     * Filter data\r\n     *\r\n     * @param data\r\n     * @returns {any}\r\n     */\r\n    filterData(data): any\r\n    {\r\n        if ( !this.filter )\r\n        {\r\n            return data;\r\n        }\r\n        return FuseUtils.filterArrayByString(data, this.filter);\r\n    }\r\n\r\n    /**\r\n     * Sort data\r\n     *\r\n     * @param data\r\n     * @returns {any[]}\r\n     */\r\n    sortData(data): any[]\r\n    {\r\n        if ( !this._matSort.active || this._matSort.direction === '' )\r\n        {\r\n            return data;\r\n        }\r\n\r\n        return data.sort((a, b) => {\r\n            let propertyA: number | string = '';\r\n            let propertyB: number | string = '';\r\n\r\n            switch ( this._matSort.active )\r\n            {\r\n                case 'id':\r\n                    [propertyA, propertyB] = [a.id, b.id];\r\n                    break;\r\n                case 'secuencia':\r\n                    [propertyA, propertyB] = [a.reference, b.reference];\r\n                    break;\r\n                case 'perfil':\r\n                    [propertyA, propertyB] = [a.customer.firstName, b.customer.firstName];\r\n                    break;\r\n            }\r\n\r\n            const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n            const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n\r\n            return (valueA < valueB ? -1 : 1) * (this._matSort.direction === 'asc' ? 1 : -1);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Disconnect\r\n     */\r\n    disconnect(): void\r\n    {\r\n    }\r\n}\r\n","<div id=\"orders\" class=\"page-layout carded fullwidth inner-scroll\">\r\n\r\n    <!-- TOP BACKGROUND -->\r\n    <div class=\"top-bg accent\"></div>\r\n    <!-- / TOP BACKGROUND -->\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\">\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent\"\r\n             fxLayout=\"column\" fxLayoutAlign=\"center center\"\r\n             fxLayout.gt-xs=\"row\" fxLayoutAlign.gt-xs=\"space-between center\">\r\n\r\n            <!-- APP TITLE -->\r\n            <div class=\"logo mb-24 mb-sm-0\"\r\n                 fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                 <div class=\"logo\">\r\n                    <img class=\"logo-icon\" src=\"assets/images/logos/asso.png\">\r\n                    <span class=\"logo-text secondary-text\">Impel HC</span>\r\n                </div>\r\n            </div>\r\n            <!-- / APP TITLE -->\r\n        \r\n            <div class=\"logo mb-24 mb-sm-0\"\r\n                 fxLayout=\"column\" fxLayoutAlign=\"start center\">\r\n                <span class=\"h2\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">{{nombre}}</span>\r\n                <span class=\"subtitle secondary-text\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">{{cc}}</span>\r\n                <span class=\"subtitle secondary-text\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">{{email}}</span>\r\n            </div>\r\n\r\n            <!-- SEARCH -->\r\n            <div class=\"search-wrapper  ml-sm-32\">\r\n                <div class=\"search\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                    <mat-icon>search</mat-icon>\r\n                    <input #filter placeholder=\"Buscar una consulta\">\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"logo mb-24 mb-sm-0\" fxLayout=\"column\" fxLayoutAlign=\"start center\">\r\n                <div class=\"logo\">\r\n                    <button mat-icon-button class=\"close-button\" (click)=\"logout()\">\r\n                        <mat-icon>exit_to_app</mat-icon>\r\n                    </button>\r\n               </div>\r\n           </div>\r\n        </div>\r\n        \r\n        <!-- / HEADER -->\r\n\r\n        <!-- CONTENT CARD -->\r\n        <div class=\"content-card\">\r\n\r\n            <mat-table class=\"orders-table\"\r\n                       #table [dataSource]=\"dataSource\"\r\n                       matSort\r\n                       [@animateStagger]=\"{value:'50'}\"\r\n                       fusePerfectScrollbar>\r\n\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>ID</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let order\">\r\n                        <p class=\"text-truncate\">{{order.id}}</p>\r\n                    </mat-cell>\r\n                </ng-container>\r\n\r\n                <!-- Reference Column -->\r\n                <ng-container matColumnDef=\"secuencia\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Secuencia</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let order\">\r\n                        <p class=\"text-truncate\">{{order.secuencia}}</p>\r\n                    </mat-cell>\r\n                </ng-container>\r\n\r\n                <!-- Name Column -->\r\n                <ng-container matColumnDef=\"perfil\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Perfil</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let order\">\r\n                        <p class=\"text\">\r\n                            {{order.perfil}}\r\n                        </p>\r\n                    </mat-cell>\r\n                </ng-container>\r\n\r\n                \r\n                <!-- Payment Column -->\r\n                <ng-container matColumnDef=\"fecha\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Fecha de cita</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let order\">\r\n                        <p class=\"text-truncate\">\r\n                            {{order.fecha}}\r\n                        </p>\r\n                    </mat-cell>\r\n                </ng-container>\r\n\r\n                <!-- Type Column -->\r\n                <ng-container matColumnDef=\"url\">\r\n                    <mat-header-cell *matHeaderCellDef>Documento</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let order\">\r\n                        <a *ngIf=\"order.url != null\" class=\"nav-link\" href=\"{{order.url}}\" target=\"_blank\">\r\n                            <span>Ver</span>\r\n                        </a>\r\n                    </mat-cell>\r\n                </ng-container>\r\n\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></mat-header-row>\r\n\r\n                <mat-row *matRowDef=\"let order; columns: displayedColumns;\"\r\n                         class=\"order\"\r\n                         matRipple\r\n                         [routerLink]=\"'/apps/e-commerce/orders/'+order.id\">\r\n                </mat-row>\r\n            </mat-table>\r\n\r\n            <mat-paginator #paginator\r\n                           [length]=\"dataSource.filteredData.length\"\r\n                           [pageIndex]=\"0\"\r\n                           [pageSize]=\"10\"\r\n                           [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n            </mat-paginator>\r\n\r\n        </div>\r\n        <!-- / CONTENT CARD -->\r\n    </div>\r\n    <!-- / CENTER -->\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { environment } from 'environments/environment';\r\nimport { LoginService } from 'app/main/pages/authentication/login-2/login.service';\r\nimport * as moment from 'moment';\r\n\r\n@Injectable()\r\nexport class ConsultasService implements Resolve<any>\r\n{\r\n    orders: any[];\r\n    onOrdersChanged: BehaviorSubject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {HttpClient} _httpClient\r\n     */\r\n    constructor(\r\n        private _httpClient: HttpClient,\r\n        private _loginService: LoginService,\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.onOrdersChanged = new BehaviorSubject({});\r\n    }\r\n\r\n    /**\r\n     * Resolver\r\n     *\r\n     * @param {ActivatedRouteSnapshot} route\r\n     * @param {RouterStateSnapshot} state\r\n     * @returns {Observable<any> | Promise<any> | any}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\r\n    {\r\n        const idPaciente = route.params.paciente;\r\n        return new Promise((resolve, reject) => {\r\n            Promise.all([\r\n                this.getOrders(idPaciente)\r\n            ]).then(\r\n                () => {\r\n                    resolve(null);\r\n                },\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get orders\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getOrders(idPaciente): Promise<any>\r\n    {\r\n        const token = this._loginService.getToken();\r\n        let query = encodeURI(`SELECT id,Secuencia,Fecha_Cita,Perfil_Txt,PDF_Paciente_URL from Consulta where R15590447=${idPaciente} and Fecha_Cita is not null`); // and Fecha_Resultado > yyyy - mm - dd(1) and Fecha_Resultado < yyyy - mm - dd(2)`);\r\n        let url = `${environment.url}rest/api/selectQuery?maxRows=10000&query=` + query + \"&sessionId=\" + token + \"&output=json\";\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get(url)//'api/e-commerce-products')\r\n                .subscribe((response: any) => {\r\n                    const result = new Array<any>();\r\n                    \r\n                    for (let i = 0; i < response.length; i++) {\r\n                        let fech = moment(response[i][2]).format('YYYY-MM-DD HH:mm:ss');\r\n                        let urlDoc = (response[i][4]) ? response[i][4] + \"&sessionId=\" + token : null;\r\n                        result.push({ 'id': response[i][0], 'fecha': fech, 'secuencia': response[i][1], \r\n                        'perfil': response[i][3], 'url': urlDoc });\r\n                    }\r\n                    \r\n                    this.orders = result;\r\n                    this.onOrdersChanged.next(this.orders);\r\n                    resolve(result);\r\n                    resolve(response);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n}\r\n","import { Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { BehaviorSubject, fromEvent, merge, Observable, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseUtils } from '@fuse/utils';\r\n\r\nimport { EcommerceProductsService } from 'app/main/apps/e-commerce/products/products.service';\r\nimport { takeUntil } from 'rxjs/internal/operators';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { EcommerceDocumentsService } from './documents.service';\r\n@Component({\r\n    selector     : 'e-commerce-products',\r\n    templateUrl  : './documents.component.html',\r\n    styleUrls    : ['./documents.component.scss'],\r\n    animations   : fuseAnimations,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class EcommerceDocumentsComponent implements OnInit\r\n{\r\n\r\n    dataSource: FilesDataSource | null;\r\n    displayedColumns = ['id', 'ips', 'ciudad', 'archivo'];\r\n    title = \"Documentos\";\r\n    \r\n    @ViewChild(MatPaginator, {static: true})\r\n    paginator: MatPaginator;\r\n\r\n    @ViewChild(MatSort, {static: true})\r\n    sort: MatSort;\r\n\r\n    @ViewChild('filter', {static: true})\r\n    filter: ElementRef;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    constructor(\r\n        private _ecommerceDocumentsService: EcommerceDocumentsService,\r\n        private route: ActivatedRoute\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this.dataSource = new FilesDataSource(this._ecommerceDocumentsService, this.paginator, this.sort);\r\n\r\n        fromEvent(this.filter.nativeElement, 'keyup')\r\n            .pipe(\r\n                takeUntil(this._unsubscribeAll),\r\n                debounceTime(150),\r\n                distinctUntilChanged()\r\n            )\r\n            .subscribe(() => {\r\n                if ( !this.dataSource )\r\n                {\r\n                    return;\r\n                }\r\n\r\n                this.dataSource.filter = this.filter.nativeElement.value;\r\n            });\r\n    }\r\n\r\n}\r\n\r\nexport class FilesDataSource extends DataSource<any>\r\n{\r\n    private _filterChange = new BehaviorSubject('');\r\n    private _filteredDataChange = new BehaviorSubject('');\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {EcommerceProductsService} _ecommerceDocumentsService\r\n     * @param {MatPaginator} _matPaginator\r\n     * @param {MatSort} _matSort\r\n     */\r\n    constructor(\r\n        private _ecommerceDocumentsService: EcommerceDocumentsService,\r\n        private _matPaginator: MatPaginator,\r\n        private _matSort: MatSort\r\n    )\r\n    {\r\n        super();\r\n\r\n        this.filteredData = this._ecommerceDocumentsService.products;\r\n    }\r\n\r\n    downloadFile(){\r\n        \r\n    }\r\n\r\n    /**\r\n     * Connect function called by the table to retrieve one stream containing the data to render.\r\n     *\r\n     * @returns {Observable<any[]>}\r\n     */\r\n    connect(): Observable<any[]>\r\n    {\r\n        const displayDataChanges = [\r\n            this._ecommerceDocumentsService.onProductsChanged,\r\n            this._matPaginator.page,\r\n            this._filterChange,\r\n            this._matSort.sortChange\r\n        ];\r\n\r\n        return merge(...displayDataChanges)\r\n            .pipe(\r\n                map(() => {\r\n                        let data = this._ecommerceDocumentsService.products.slice();\r\n\r\n                        data = this.filterData(data);\r\n\r\n                        this.filteredData = [...data];\r\n\r\n                        data = this.sortData(data);\r\n\r\n                        // Grab the page's slice of data.\r\n                        const startIndex = this._matPaginator.pageIndex * this._matPaginator.pageSize;\r\n                        return data.splice(startIndex, this._matPaginator.pageSize);\r\n                    }\r\n                ));\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Accessors\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    // Filtered data\r\n    get filteredData(): any\r\n    {\r\n        return this._filteredDataChange.value;\r\n    }\r\n\r\n    set filteredData(value: any)\r\n    {\r\n        this._filteredDataChange.next(value);\r\n    }\r\n\r\n    // Filter\r\n    get filter(): string\r\n    {\r\n        return this._filterChange.value;\r\n    }\r\n\r\n    set filter(filter: string)\r\n    {\r\n        this._filterChange.next(filter);\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Filter data\r\n     *\r\n     * @param data\r\n     * @returns {any}\r\n     */\r\n    filterData(data): any\r\n    {\r\n        if ( !this.filter )\r\n        {\r\n            return data;\r\n        }\r\n        return FuseUtils.filterArrayByString(data, this.filter);\r\n    }\r\n\r\n    /**\r\n     * Sort data\r\n     *\r\n     * @param data\r\n     * @returns {any[]}\r\n     */\r\n    sortData(data): any[]\r\n    {\r\n        if ( !this._matSort.active || this._matSort.direction === '' )\r\n        {\r\n            return data;\r\n        }\r\n\r\n        return data.sort((a, b) => {\r\n            let propertyA: number | string = '';\r\n            let propertyB: number | string = '';\r\n\r\n            switch ( this._matSort.active )\r\n            {\r\n                case 'id':\r\n                    [propertyA, propertyB] = [a.id, b.id];\r\n                    break;\r\n                case 'fecha':\r\n                    [propertyA, propertyB] = [a.fecha, b.fecha];\r\n                    break;\r\n                case 'nombre':\r\n                    [propertyA, propertyB] = [a.nombre, b.nombre];\r\n                    break;\r\n                case 'cedula':\r\n                    [propertyA, propertyB] = [a.cedula, b.cedula];\r\n                    break; \r\n                case 'resultado':\r\n                    [propertyA, propertyB] = [a.resultado, b.resultado];\r\n                    break;\r\n                case 'estado':\r\n                    [propertyA, propertyB] = [a.estado, b.estado];\r\n                    break;\r\n                \r\n                case 'consulta':\r\n                    [propertyA, propertyB] = [a.consulta, b.consulta];\r\n                    break;\r\n                \r\n            }\r\n\r\n            const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n            const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n\r\n            return (valueA < valueB ? -1 : 1) * (this._matSort.direction === 'asc' ? 1 : -1);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Disconnect\r\n     */\r\n    disconnect(): void\r\n    {\r\n    }\r\n\r\n    \r\n}\r\n","<div id=\"products\" class=\"page-layout carded fullwidth inner-scroll\">\r\n\r\n    <!-- TOP BACKGROUND -->\r\n    <div class=\"top-bg accent\"></div>\r\n    <!-- / TOP BACKGROUND -->\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\">\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent\"\r\n             fxLayout=\"column\" fxLayoutAlign=\"center center\"\r\n             fxLayout.gt-sm=\"row\" fxLayoutAlign.gt-sm=\"space-between center\">\r\n\r\n            <!-- APP TITLE -->\r\n            <div class=\"logo mb-24 mb-md-0\"\r\n                 fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                <mat-icon class=\"logo-icon s-32 mr-16\" [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\r\n                    assignment\r\n                </mat-icon>\r\n                <span class=\"logo-text h1\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">\r\n                    {{title}}\r\n                </span>\r\n            </div>\r\n            <!-- / APP TITLE -->\r\n\r\n            <!-- SEARCH -->\r\n            <div class=\"search-wrapper mx-32 mx-md-0\">\r\n                <div class=\"search\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                    <mat-icon>search</mat-icon>\r\n                    <input #filter placeholder=\"Buscar resultados\">\r\n                </div>\r\n            </div>\r\n            <!-- / SEARCH -->\r\n\r\n        </div>\r\n        <!-- / HEADER -->\r\n\r\n\r\n        <!-- CONTENT CARD -->\r\n        <div class=\"content-card\">\r\n            <mat-table class=\"products-table\"\r\n                       #table [dataSource]=\"dataSource\"\r\n                       matSort\r\n                       [@animateStagger]=\"{value:'50'}\"\r\n                       fusePerfectScrollbar>\r\n\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Tipo</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let product\">\r\n                        <span>{{product.tipo}}</span>\r\n                    </mat-cell>\r\n                </ng-container>\r\n\r\n                <!-- FECHA Column -->\r\n                <ng-container matColumnDef=\"ips\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>IPS</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let product\">\r\n                        <p class=\"text\">{{product.ips}}</p>\r\n                    </mat-cell>\r\n                </ng-container>\r\n\r\n                <!-- FECHA Column -->\r\n                <ng-container matColumnDef=\"ciudad\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Ciudad</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let product\">\r\n                        <p class=\"text\">{{product.ciudad}}</p>\r\n                    </mat-cell>\r\n                </ng-container>\r\n\r\n                <!-- Quantity Column -->\r\n                <ng-container matColumnDef=\"archivo\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Documento</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let product\">\r\n                        \r\n                        <a class=\"nav-link\" href=\"{{product.archivo}}\"\r\n                            target=\"_blank\">\r\n                            <span>Ver</span>\r\n                        </a>\r\n                        \r\n                    </mat-cell>\r\n                </ng-container>\r\n\r\n\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></mat-header-row>\r\n\r\n                <mat-row *matRowDef=\"let product; columns: displayedColumns;\"\r\n                         class=\"product\"\r\n                         matRipple\r\n                         >\r\n                </mat-row>\r\n\r\n            </mat-table>\r\n\r\n            <mat-paginator #paginator\r\n                           [length]=\"dataSource.filteredData.length\"\r\n                           [pageIndex]=\"0\"\r\n                           [pageSize]=\"10\"\r\n                           [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n            </mat-paginator>\r\n\r\n        </div>\r\n        <!-- / CONTENT CARD -->\r\n    </div>\r\n    <!-- / CENTER -->\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { environment } from 'environments/environment';\r\nimport { LoginService } from 'app/main/pages/authentication/login-2/login.service';\r\nimport * as moment from 'moment';\r\n\r\n@Injectable()\r\nexport class EcommerceDocumentsService implements Resolve<any>\r\n{\r\n    products: any[];\r\n    onProductsChanged: BehaviorSubject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {HttpClient} _httpClient\r\n     */\r\n    constructor(\r\n        private _httpClient: HttpClient,\r\n        private _loginService: LoginService,\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.onProductsChanged = new BehaviorSubject({});\r\n        moment.locale('es')\r\n    }\r\n\r\n    /**\r\n     * Resolver\r\n     *\r\n     * @param {ActivatedRouteSnapshot} route\r\n     * @param {RouterStateSnapshot} state\r\n     * @returns {Observable<any> | Promise<any> | any}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            Promise.all([\r\n                this.getIps()\r\n            ]).then(\r\n                () => {\r\n                    resolve(null);\r\n                },\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get products\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n     getIps(): Promise<any>\r\n     {\r\n         const token = this._loginService.getToken();\r\n         const ciudades = this._loginService.getCiudadesTxt();\r\n         let query = encodeURI(`SELECT id FROM IPS_Afiliada where R15596086 in (${ciudades}) order by id desc`); // where R15590415 = ${idCustomer} and ${status}  and Fecha_Resultado > yyyy - mm - dd(1) and Fecha_Resultado < yyyy - mm - dd(2)`);\r\n         let url = `${environment.url}rest/api/selectQuery?maxRows=10000&query=` + query + \"&sessionId=\" + token + \"&output=json\";\r\n         return new Promise((resolve, reject) => {\r\n             this._httpClient.get(url)//'api/e-commerce-products')\r\n                 .subscribe((response: any) => {\r\n                     const result = [];\r\n                     for (let i = 0; i < response.length; i++) {\r\n                         result.push(response[i][0]);\r\n                     }\r\n                     this.onProductsChanged.next(this.products);\r\n                     resolve(this.getDocuments(result.toString()));\r\n                 }, reject);\r\n         });\r\n     }\r\n\r\n    /**\r\n     * Get products\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getDocuments(ids): Promise<any>\r\n    {\r\n        const token = this._loginService.getToken();\r\n        const idCustomer = this._loginService.getId();\r\n        let query = `SELECT id,IPS_txt,Ciudad_txt,Documento_Url,tipo%23value FROM Documento_IPS where R18464104 in (${ids}) order by IPS_txt asc`; // where R15590415 = ${idCustomer} and ${status}  and Fecha_Resultado > yyyy - mm - dd(1) and Fecha_Resultado < yyyy - mm - dd(2)`);\r\n        let url = `${environment.url}rest/api/selectQuery?maxRows=10000&query=` + query + \"&sessionId=\" + token + \"&output=json\";\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get(url)//'api/e-commerce-products')\r\n                .subscribe((response: any) => {\r\n                    const result = new Array<any>();\r\n                    for (let i = 0; i < response.length; i++) {\r\n                        result.push({ 'id': response[i][0], 'ips': response[i][1], 'ciudad': response[i][2], 'archivo': response[i][3], 'tipo': response[i][4]});\r\n                    }\r\n                    this.products = result;\r\n                    this.onProductsChanged.next(this.products);\r\n                    resolve(result);\r\n                }, reject);\r\n        });\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\nimport { AgmCoreModule } from '@agm/core';\r\n\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { FuseWidgetModule } from '@fuse/components/widget/widget.module';\r\n\r\nimport { EcommerceProductsComponent } from 'app/main/apps/e-commerce/products/products.component';\r\nimport { EcommerceProductsService } from 'app/main/apps/e-commerce/products/products.service';\r\nimport { EcommerceProductComponent } from 'app/main/apps/e-commerce/product/product.component';\r\nimport { EcommerceProductService } from 'app/main/apps/e-commerce/product/product.service';\r\nimport { EcommerceOrdersComponent } from 'app/main/apps/e-commerce/orders/orders.component';\r\nimport { EcommerceOrdersService } from 'app/main/apps/e-commerce/orders/orders.service';\r\nimport { EcommerceOrderComponent } from 'app/main/apps/e-commerce/order/order.component';\r\nimport { EcommerceOrderService } from 'app/main/apps/e-commerce/order/order.service';\r\nimport { LoginService } from 'app/main/pages/authentication/login-2/login.service';\r\nimport { FileManagerService } from '../file-manager/file-manager.service';\r\nimport { FileManagerDetailsSidebarComponent } from './product/details/details.component';\r\nimport { FuseSidebarModule } from '@fuse/components';\r\nimport { FileManagerFileListComponent } from './product/file-list/file-list.component';\r\nimport { EcommerceDocumentsComponent } from './documents/documents.component';\r\nimport { EcommerceDocumentsService } from './documents/documents.service';\r\nimport { ConsultasComponent } from './consultas/consultas.component';\r\nimport { ConsultasService } from './consultas/consultas.service';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path     : 'products',\r\n        component: EcommerceProductsComponent,\r\n        resolve  : {\r\n            data: EcommerceProductsService\r\n        }\r\n    },\r\n    {\r\n        path     : 'type/:type',\r\n        component: EcommerceProductsComponent,\r\n        resolve  : {\r\n            data: EcommerceProductsService\r\n        }\r\n    },\r\n    {\r\n        path     : 'consultas/:paciente',\r\n        component: ConsultasComponent,\r\n        resolve  : {\r\n            data: ConsultasService\r\n        }\r\n    },\r\n    {\r\n        path     : 'products/:id',\r\n        component: EcommerceProductComponent,\r\n        resolve  : {\r\n            data: EcommerceProductService\r\n        }\r\n    },\r\n    {\r\n        path     : 'products/:id/:handle',\r\n        component: EcommerceProductComponent,\r\n        resolve  : {\r\n            data: EcommerceProductService\r\n        }\r\n    },\r\n    {\r\n        path     : 'orders',\r\n        component: EcommerceOrdersComponent,\r\n        resolve  : {\r\n            data: EcommerceOrdersService\r\n        }\r\n    },\r\n    {\r\n        path     : 'orders/:id',\r\n        component: EcommerceOrderComponent,\r\n        resolve  : {\r\n            data: EcommerceOrderService\r\n        }\r\n    },\r\n    {\r\n        path     : 'documents',\r\n        component: EcommerceDocumentsComponent,\r\n        resolve  : {\r\n            data: EcommerceDocumentsService\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        EcommerceProductsComponent,\r\n        EcommerceProductComponent,\r\n        EcommerceOrdersComponent,\r\n        EcommerceOrderComponent,\r\n        EcommerceDocumentsComponent,\r\n        FileManagerDetailsSidebarComponent,\r\n        FileManagerFileListComponent,\r\n        ConsultasComponent\r\n    ],\r\n    imports     : [\r\n        RouterModule.forChild(routes),\r\n\r\n        MatButtonModule,\r\n        MatChipsModule,\r\n        MatExpansionModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatPaginatorModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatSortModule,\r\n        MatSnackBarModule,\r\n        MatTableModule,\r\n        MatTabsModule,\r\n        FuseSidebarModule,\r\n\r\n        NgxChartsModule,\r\n        AgmCoreModule.forRoot({\r\n            apiKey: 'AIzaSyD81ecsCj4yYpcXSLFcYU97PvRsE_X8Bx8'\r\n        }),\r\n\r\n        FuseSharedModule,\r\n        FuseWidgetModule\r\n    ],\r\n    providers   : [\r\n        EcommerceProductsService,\r\n        EcommerceProductService,\r\n        EcommerceOrdersService,\r\n        EcommerceOrderService,\r\n        EcommerceDocumentsService,\r\n        LoginService,\r\n        FileManagerService,\r\n        ConsultasService\r\n    ]\r\n})\r\nexport class EcommerceModule\r\n{\r\n}\r\n","export const orderStatuses = [\r\n    {\r\n        id   : 1,\r\n        name : 'Awaiting check payment',\r\n        color: 'blue-500'\r\n    },\r\n    {\r\n        id   : 2,\r\n        name : 'Payment accepted',\r\n        color: 'green-500'\r\n    },\r\n    {\r\n        id   : 3,\r\n        name : 'Preparing the order',\r\n        color: 'orange-500'\r\n    },\r\n    {\r\n        id   : 4,\r\n        name : 'Shipped',\r\n        color: 'purple-500'\r\n    },\r\n    {\r\n        id   : 5,\r\n        name : 'Delivered',\r\n        color: 'green-800'\r\n    },\r\n    {\r\n        id   : 6,\r\n        name : 'Canceled',\r\n        color: 'pink-500'\r\n    },\r\n    {\r\n        id   : 7,\r\n        name : 'Refunded',\r\n        color: 'red-500'\r\n    },\r\n    {\r\n        id   : 8,\r\n        name : 'Payment error',\r\n        color: 'red-900'\r\n    },\r\n    {\r\n        id   : 9,\r\n        name : 'On pre-order (paid)',\r\n        color: 'purple-300'\r\n    },\r\n    {\r\n        id   : 10,\r\n        name : 'Awaiting bank wire payment',\r\n        color: 'blue-500'\r\n    },\r\n    {\r\n        id   : 11,\r\n        name : 'Awaiting PayPal payment',\r\n        color: 'blue-500'\r\n    },\r\n    {\r\n        id   : 12,\r\n        name : 'Remote payment accepted',\r\n        color: 'green-500'\r\n    },\r\n    {\r\n        id   : 13,\r\n        name : 'On pre-order (not paid)',\r\n        color: 'purple-300'\r\n    },\r\n    {\r\n        id   : 14,\r\n        name : 'Awaiting Cash-on-delivery payment',\r\n        color: 'blue-500'\r\n    }\r\n];\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Subject} from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { orderStatuses } from 'app/main/apps/e-commerce/order/order-statuses';\r\nimport { Order } from 'app/main/apps/e-commerce/order/order.model';\r\nimport { EcommerceOrderService } from 'app/main/apps/e-commerce/order/order.service';\r\n\r\n@Component({\r\n    selector     : 'e-commerce-order',\r\n    templateUrl  : './order.component.html',\r\n    styleUrls    : ['./order.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class EcommerceOrderComponent implements OnInit, OnDestroy\r\n{\r\n    order: Order;\r\n    orderStatuses: any;\r\n    statusForm: FormGroup;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {EcommerceOrderService} _ecommerceOrderService\r\n     * @param {FormBuilder} _formBuilder\r\n     */\r\n    constructor(\r\n        private _ecommerceOrderService: EcommerceOrderService,\r\n        private _formBuilder: FormBuilder\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.order = new Order();\r\n        this.orderStatuses = orderStatuses;\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Subscribe to update order on changes\r\n        this._ecommerceOrderService.onOrderChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(order => {\r\n                this.order = new Order(order);\r\n            });\r\n\r\n        this.statusForm = this._formBuilder.group({\r\n            newStatus: ['']\r\n        });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Update status\r\n     */\r\n    updateStatus(): void\r\n    {\r\n        const newStatusId = Number.parseInt(this.statusForm.get('newStatus').value);\r\n\r\n        if ( !newStatusId )\r\n        {\r\n            return;\r\n        }\r\n\r\n        const newStatus = this.orderStatuses.find((status) => {\r\n            return status.id === newStatusId;\r\n        });\r\n\r\n        newStatus['date'] = new Date().toString();\r\n\r\n        this.order.status.unshift(newStatus);\r\n    }\r\n}\r\n","<div id=\"order\" class=\"page-layout carded fullwidth inner-scroll\">\r\n\r\n    <!-- TOP BACKGROUND -->\r\n    <div class=\"top-bg accent\"></div>\r\n    <!-- / TOP BACKGROUND -->\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\">\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent\"\r\n             fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n\r\n            <!-- APP TITLE -->\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n                <button mat-icon-button class=\"mr-16\" [routerLink]=\"'/apps/e-commerce/orders'\">\r\n                    <mat-icon>arrow_back</mat-icon>\r\n                </button>\r\n\r\n                <div fxLayout=\"column\" fxLayoutAlign=\"start start\"\r\n                     [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">\r\n                    <div class=\"h2\">\r\n                        Order {{order.reference}}\r\n                    </div>\r\n                    <div class=\"subtitle secondary-text\">\r\n                        <span>from</span>\r\n                        <span>{{order.customer.firstName}} {{order.customer.lastName}}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- / APP TITLE -->\r\n\r\n        </div>\r\n        <!-- / HEADER -->\r\n\r\n        <!-- CONTENT CARD -->\r\n        <div class=\"content-card\">\r\n\r\n            <!-- CONTENT -->\r\n            <div class=\"content\">\r\n\r\n                <mat-tab-group fxLayout=\"column\" fxFlex>\r\n\r\n                    <mat-tab label=\"Order Details\">\r\n\r\n                        <div class=\"order-details tab-content p-24\" fusePerfectScrollbar>\r\n\r\n                            <div class=\"section pb-48\">\r\n\r\n                                <div class=\"pb-16\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                                    <mat-icon class=\"m-0 mr-16 secondary-text\">account_circle</mat-icon>\r\n                                    <div class=\"h2 secondary-text\">Customer</div>\r\n                                </div>\r\n\r\n                                <div class=\"customer mb-32\">\r\n                                    <table class=\"simple\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Name</th>\r\n                                                <th>Email</th>\r\n                                                <th>Phone</th>\r\n                                                <th>Company</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                                                        <img class=\"avatar\" [src]=\"order.customer.avatar\">\r\n                                                        <span class=\"name text-truncate\">{{order.customer.firstName}}\r\n                                                            {{order.customer.lastName}}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <span class=\"email text-truncate\">{{order.customer.email}}</span>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <span class=\"phone text-truncate\">{{order.customer.phone}}</span>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <span class=\"company text-truncate\">{{order.customer.company}}\r\n                                                    </span>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n\r\n                                <mat-accordion class=\"addresses\">\r\n\r\n                                    <mat-expansion-panel>\r\n\r\n                                        <mat-expansion-panel-header>\r\n                                            <mat-panel-title>Shipping Address</mat-panel-title>\r\n                                        </mat-expansion-panel-header>\r\n\r\n                                        <div fxFlex fxLayout=\"column\">\r\n                                            <div class=\"address h4 py-24\">{{order.customer.shippingAddress.address}}\r\n                                            </div>\r\n                                            <agm-map class=\"w-100-p h-400\" [zoom]=\"15\"\r\n                                                     [latitude]=\"order.customer.shippingAddress.lat\"\r\n                                                     [longitude]=\"order.customer.shippingAddress.lng\">\r\n                                                <agm-marker [latitude]=\"order.customer.shippingAddress.lat\"\r\n                                                            [longitude]=\"order.customer.shippingAddress.lng\">\r\n                                                </agm-marker>\r\n                                            </agm-map>\r\n                                        </div>\r\n\r\n                                    </mat-expansion-panel>\r\n\r\n                                    <mat-expansion-panel>\r\n\r\n                                        <mat-expansion-panel-header>\r\n                                            <mat-panel-title>Invoice Address</mat-panel-title>\r\n                                        </mat-expansion-panel-header>\r\n\r\n                                        <div fxFlex fxLayout=\"column\">\r\n                                            <div class=\"address h4 py-24\">{{order.customer.invoiceAddress.address}}\r\n                                            </div>\r\n                                            <agm-map class=\"w-100-p h-400\" [zoom]=\"15\"\r\n                                                     [latitude]=\"order.customer.invoiceAddress.lat\"\r\n                                                     [longitude]=\"order.customer.invoiceAddress.lng\">\r\n                                                <agm-marker [latitude]=\"order.customer.invoiceAddress.lat\"\r\n                                                            [longitude]=\"order.customer.invoiceAddress.lng\">\r\n                                                </agm-marker>\r\n                                            </agm-map>\r\n                                        </div>\r\n\r\n                                    </mat-expansion-panel>\r\n\r\n                                </mat-accordion>\r\n\r\n                            </div>\r\n\r\n                            <div class=\"section pb-48\">\r\n\r\n                                <div class=\"pb-16\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                                    <mat-icon class=\"m-0 mr-16 secondary-text\">access_time</mat-icon>\r\n                                    <div class=\"h2 secondary-text\">Order Status</div>\r\n                                </div>\r\n\r\n                                <table class=\"simple\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Status</th>\r\n                                            <th>Updated On</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n\r\n                                        <tr *ngFor=\"let status of order.status\">\r\n                                            <td>\r\n                                                <span class=\"status h6 p-4\" [ngClass]=\"status.color\">\r\n                                                    {{status.name}}\r\n                                                </span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <span>\r\n                                                    {{status.date | date}}\r\n                                                </span>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n\r\n                                <form class=\"update-status p-24\"\r\n                                      (ngSubmit)=\"updateStatus()\"\r\n                                      [formGroup]=\"statusForm\"\r\n                                      fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n                                    <mat-form-field appearance=\"outline\" class=\"mr-16\" fxFlex>\r\n                                        <mat-label>Status</mat-label>\r\n                                        <mat-select formControlName=\"newStatus\"\r\n                                                    required>\r\n                                            <mat-option *ngFor=\"let status of orderStatuses\"\r\n                                                        [value]=\"status.id\">\r\n                                                {{status.name}}\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                    </mat-form-field>\r\n\r\n                                    <button mat-raised-button class=\"mat-accent\"\r\n                                            [disabled]=\"statusForm.invalid\">\r\n                                        Update Status\r\n                                    </button>\r\n                                </form>\r\n\r\n                            </div>\r\n\r\n                            <div class=\"section pb-48\">\r\n\r\n                                <div class=\"pb-16\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                                    <mat-icon class=\"m-0 mr-16 secondary-text\">attach_money</mat-icon>\r\n                                    <div class=\"h2 secondary-text\">Payment</div>\r\n                                </div>\r\n\r\n                                <table class=\"simple\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>TransactionID</th>\r\n                                            <th>Payment Method</th>\r\n                                            <th>Amount</th>\r\n                                            <th>Date</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <span class=\"text-truncate\">\r\n                                                    {{order.payment.transactionId}}\r\n                                                </span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <span class=\"text-truncate\">\r\n                                                    {{order.payment.method}}\r\n                                                </span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <span class=\"text-truncate\">\r\n                                                    {{order.payment.amount}}\r\n                                                </span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <span class=\"text-truncate\">\r\n                                                    {{order.payment.date | date}}\r\n                                                </span>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n\r\n\r\n                            <div class=\"section pb-48\">\r\n\r\n                                <div class=\"pb-16\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                                    <mat-icon class=\"m-0 mr-16 secondary-text\">local_shipping</mat-icon>\r\n                                    <div class=\"h2 secondary-text\">Shipping</div>\r\n                                </div>\r\n\r\n                                <table class=\"simple\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Tracking Code</th>\r\n                                            <th>Carrier</th>\r\n                                            <th>Weight</th>\r\n                                            <th>Fee</th>\r\n                                            <th>Date</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor=\"let shipping of order.shippingDetails\">\r\n                                            <td class=\"tracking-code\">\r\n                                                {{shipping.tracking}}\r\n                                            </td>\r\n                                            <td>\r\n                                                {{shipping.carrier}}\r\n                                            </td>\r\n                                            <td>\r\n                                                {{shipping.weight}}\r\n                                            </td>\r\n                                            <td>\r\n                                                {{shipping.fee}}\r\n                                            </td>\r\n                                            <td>\r\n                                                {{shipping.date}}\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </mat-tab>\r\n\r\n                    <mat-tab label=\"Products\">\r\n                        <div class=\"products tab-content p-24\" fusePerfectScrollbar>\r\n                            <table class=\"simple\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th class=\"w-80\">ID</th>\r\n                                        <th class=\"w-120\">Image</th>\r\n                                        <th>Name</th>\r\n                                        <th class=\"w-120\">Price</th>\r\n                                        <th class=\"w-80\">Quantity</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr class=\"product-row\"\r\n                                        *ngFor=\"let product of order.products\"\r\n                                        [routerLink]=\"'/apps/e-commerce/products/'+product.id+'/'+product.handle\">\r\n                                        <td>\r\n                                            {{product.id}}\r\n                                        </td>\r\n                                        <td>\r\n                                            <img class=\"product-image\" [src]=\"product.image\">\r\n                                        </td>\r\n                                        <td>\r\n                                            {{product.name}}\r\n                                        </td>\r\n                                        <td>\r\n                                            {{product.price}}\r\n                                        </td>\r\n                                        <td>\r\n                                            {{product.quantity}}\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </mat-tab>\r\n\r\n                    <mat-tab label=\"Invoice\">\r\n\r\n                        <div class=\"invoice tab-content p-24\" fusePerfectScrollbar>\r\n\r\n                            <div id=\"invoice\" class=\"compact page-layout blank\" fxLayout=\"row\" fusePerfectScrollbar>\r\n\r\n                                <div class=\"invoice-container\">\r\n\r\n                                    <!-- INVOICE -->\r\n                                    <div class=\"card\">\r\n\r\n                                        <div class=\"header\">\r\n                                            <div class=\"invoice-date\">{{order.date}}</div>\r\n\r\n                                            <div fxLayout=\"row\" fxLayoutAlign=\"space-between stretch\">\r\n                                                <div class=\"client\">\r\n                                                    <div class=\"invoice-number\" fxLayout=\"row\"\r\n                                                         fxLayoutAlign=\"start center\">\r\n                                                        <span class=\"title\">INVOICE</span>\r\n                                                        <span class=\"number\">{{order.reference}}</span>\r\n                                                    </div>\r\n\r\n                                                    <div class=\"info\">\r\n                                                        <div class=\"title\">\r\n                                                            {{order.customer.firstName}}\r\n                                                            {{order.customer.lastName}}\r\n                                                        </div>\r\n                                                        <div class=\"address\">\r\n                                                            {{order.customer.invoiceAddress.address}}\r\n                                                        </div>\r\n                                                        <div class=\"phone\">{{order.customer.phone}}</div>\r\n                                                        <div class=\"email\">{{order.customer.email}}</div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div class=\"issuer accent\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                                                    <div class=\"logo\">\r\n                                                        <img src=\"assets/images/logos/asso.png\">\r\n                                                    </div>\r\n\r\n                                                    <div class=\"info\">\r\n                                                        <div class=\"title\">FUSE INC.</div>\r\n                                                        <div class=\"address\">2810 Country Club Road Cranford, NJ 07016\r\n                                                        </div>\r\n                                                        <div class=\"phone\">+66 123 455 87</div>\r\n                                                        <div class=\"email\">hello@fuseinc.com</div>\r\n                                                        <div class=\"website\">www.fuseinc.com</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div class=\"content\">\r\n\r\n                                            <table class=\"simple invoice-table\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>PRODUCT</th>\r\n                                                        <th class=\"text-right\">PRICE</th>\r\n                                                        <th class=\"text-right\">QUANTITY</th>\r\n                                                        <th class=\"text-right\">TOTAL</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <tr *ngFor=\"let product of order.products\">\r\n                                                        <td>\r\n                                                            <div class=\"title\">\r\n                                                                {{product.name}}\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td class=\"text-right\">\r\n                                                            {{product.price | currency:'USD':'symbol'}}\r\n                                                        </td>\r\n                                                        <td class=\"text-right\">\r\n                                                            {{product.quantity}}\r\n                                                        </td>\r\n                                                        <td class=\"text-right\">\r\n                                                            {{product.total | currency:'USD':'symbol'}}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n\r\n                                            <table class=\"simple invoice-table-footer\">\r\n                                                <tbody>\r\n                                                    <tr class=\"subtotal\">\r\n                                                        <td>SUBTOTAL</td>\r\n                                                        <td>{{order.subtotal | currency:'USD':'symbol'}}</td>\r\n                                                    </tr>\r\n                                                    <tr class=\"tax\">\r\n                                                        <td>TAX</td>\r\n                                                        <td>{{order.tax | currency:'USD':'symbol'}}</td>\r\n                                                    </tr>\r\n                                                    <tr class=\"discount\">\r\n                                                        <td>DISCOUNT</td>\r\n                                                        <td>-{{order.discount | currency:'USD':'symbol'}}</td>\r\n                                                    </tr>\r\n                                                    <tr class=\"total\">\r\n                                                        <td>TOTAL</td>\r\n                                                        <td>{{order.total | currency:'USD':'symbol'}}</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n\r\n                                        <div class=\"footer\">\r\n                                            <div class=\"note\">Please pay within 15 days. Thank you for your business.\r\n                                            </div>\r\n                                            <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n                                                <div class=\"logo\">\r\n                                                    <img src=\"assets/images/logos/asso.png\">\r\n                                                </div>\r\n                                                <div class=\"small-note\">\r\n                                                    In condimentum malesuada efficitur. Mauris volutpat placerat auctor.\r\n                                                    Ut ac congue dolor. Quisque scelerisque lacus sed feugiat fermentum.\r\n                                                    Cras aliquet facilisis pellentesque. Nunc hendrerit quam at leo\r\n                                                    commodo, a suscipit tellus dapibus. Etiam at felis volutpat est\r\n                                                    mollis lacinia. Mauris placerat sem sit amet velit mollis, in\r\n                                                    porttitor ex finibus. Proin eu nibh id libero tincidunt lacinia et\r\n                                                    eget eros.\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <!-- / INVOICE -->\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </mat-tab>\r\n\r\n                </mat-tab-group>\r\n\r\n            </div>\r\n            <!-- / CONTENT -->\r\n\r\n        </div>\r\n        <!-- / CONTENT CARD -->\r\n\r\n    </div>\r\n    <!-- / CENTER -->\r\n</div>\r\n","import { FuseUtils } from '@fuse/utils';\r\n\r\nexport class Order\r\n{\r\n    id: string;\r\n    reference: string;\r\n    subtotal: string;\r\n    tax: string;\r\n    discount: string;\r\n    total: string;\r\n    date: string;\r\n    customer: any;\r\n    products: any[];\r\n    status: any[];\r\n    payment: any;\r\n    shippingDetails: any[];\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param order\r\n     */\r\n    constructor(order?)\r\n    {\r\n        order = order || {};\r\n        this.id = order.id || FuseUtils.generateGUID();\r\n        this.reference = order.reference || FuseUtils.generateGUID();\r\n        this.subtotal = order.subtotal || 0;\r\n        this.tax = order.tax || 0;\r\n        this.discount = order.discount || 0;\r\n        this.total = order.total || 0;\r\n        this.date = order.date || '';\r\n        this.customer = order.customer || {};\r\n        this.products = order.products || [];\r\n        this.status = order.status || [];\r\n        this.payment = order.payment || {};\r\n        this.shippingDetails = order.shippingDetails || [];\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class EcommerceOrderService implements Resolve<any>\r\n{\r\n    routeParams: any;\r\n    order: any;\r\n    onOrderChanged: BehaviorSubject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {HttpClient} _httpClient\r\n     */\r\n    constructor(\r\n        private _httpClient: HttpClient\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.onOrderChanged = new BehaviorSubject({});\r\n    }\r\n\r\n    /**\r\n     * Resolver\r\n     *\r\n     * @param {ActivatedRouteSnapshot} route\r\n     * @param {RouterStateSnapshot} state\r\n     * @returns {Observable<any> | Promise<any> | any}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\r\n    {\r\n        this.routeParams = route.params;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            Promise.all([\r\n                this.getOrder()\r\n            ]).then(\r\n                () => {\r\n                    resolve();\r\n                },\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get order\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getOrder(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/e-commerce-orders/' + this.routeParams.id)\r\n                .subscribe((response: any) => {\r\n                    this.order = response;\r\n                    this.onOrderChanged.next(this.order);\r\n                    resolve(response);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Save order\r\n     *\r\n     * @param order\r\n     * @returns {Promise<any>}\r\n     */\r\n    saveOrder(order): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.post('api/e-commerce-orders/' + order.id, order)\r\n                .subscribe((response: any) => {\r\n                    resolve(response);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Add order\r\n     *\r\n     * @param order\r\n     * @returns {Promise<any>}\r\n     */\r\n    addOrder(order): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.post('api/e-commerce-orders/', order)\r\n                .subscribe((response: any) => {\r\n                    resolve(response);\r\n                }, reject);\r\n        });\r\n    }\r\n}\r\n","import { Component, ElementRef, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { BehaviorSubject, fromEvent, merge, Observable, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseUtils } from '@fuse/utils';\r\n\r\nimport { EcommerceOrdersService } from 'app/main/apps/e-commerce/orders/orders.service';\r\nimport { takeUntil } from 'rxjs/internal/operators';\r\n\r\n@Component({\r\n    selector     : 'e-commerce-orders',\r\n    templateUrl  : './orders.component.html',\r\n    styleUrls    : ['./orders.component.scss'],\r\n    animations   : fuseAnimations,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class EcommerceOrdersComponent implements OnInit, OnDestroy\r\n{\r\n    dataSource: FilesDataSource | null;\r\n    displayedColumns = ['id', 'reference', 'customer', 'total', 'payment', 'status', 'date'];\r\n\r\n    @ViewChild(MatPaginator, {static: true})\r\n    paginator: MatPaginator;\r\n\r\n    @ViewChild('filter', {static: true})\r\n    filter: ElementRef;\r\n\r\n    @ViewChild(MatSort, {static: true})\r\n    sort: MatSort;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {EcommerceOrdersService} _ecommerceOrdersService\r\n     */\r\n    constructor(\r\n        private _ecommerceOrdersService: EcommerceOrdersService\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this.dataSource = new FilesDataSource(this._ecommerceOrdersService, this.paginator, this.sort);\r\n\r\n        fromEvent(this.filter.nativeElement, 'keyup')\r\n            .pipe(\r\n                takeUntil(this._unsubscribeAll),\r\n                debounceTime(150),\r\n                distinctUntilChanged()\r\n            )\r\n            .subscribe(() => {\r\n                if ( !this.dataSource )\r\n                {\r\n                    return;\r\n                }\r\n                this.dataSource.filter = this.filter.nativeElement.value;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n}\r\n\r\nexport class FilesDataSource extends DataSource<any>\r\n{\r\n    // Private\r\n    private _filterChange = new BehaviorSubject('');\r\n    private _filteredDataChange = new BehaviorSubject('');\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {EcommerceOrdersService} _ecommerceOrdersService\r\n     * @param {MatPaginator} _matPaginator\r\n     * @param {MatSort} _matSort\r\n     */\r\n    constructor(\r\n        private _ecommerceOrdersService: EcommerceOrdersService,\r\n        private _matPaginator: MatPaginator,\r\n        private _matSort: MatSort\r\n    )\r\n    {\r\n        super();\r\n\r\n        this.filteredData = this._ecommerceOrdersService.orders;\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Accessors\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    // Filtered data\r\n    get filteredData(): any\r\n    {\r\n        return this._filteredDataChange.value;\r\n    }\r\n\r\n    set filteredData(value: any)\r\n    {\r\n        this._filteredDataChange.next(value);\r\n    }\r\n\r\n    // Filter\r\n    get filter(): string\r\n    {\r\n        return this._filterChange.value;\r\n    }\r\n\r\n    set filter(filter: string)\r\n    {\r\n        this._filterChange.next(filter);\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Connect function called by the table to retrieve one stream containing the data to render.\r\n     *\r\n     * @returns {Observable<any[]>}\r\n     */\r\n    connect(): Observable<any[]>\r\n    {\r\n        const displayDataChanges = [\r\n            this._ecommerceOrdersService.onOrdersChanged,\r\n            this._matPaginator.page,\r\n            this._filterChange,\r\n            this._matSort.sortChange\r\n        ];\r\n\r\n        return merge(...displayDataChanges).pipe(map(() => {\r\n\r\n                let data = this._ecommerceOrdersService.orders.slice();\r\n\r\n                data = this.filterData(data);\r\n\r\n                this.filteredData = [...data];\r\n\r\n                data = this.sortData(data);\r\n\r\n                // Grab the page's slice of data.\r\n                const startIndex = this._matPaginator.pageIndex * this._matPaginator.pageSize;\r\n                return data.splice(startIndex, this._matPaginator.pageSize);\r\n            })\r\n        );\r\n\r\n    }\r\n\r\n    /**\r\n     * Filter data\r\n     *\r\n     * @param data\r\n     * @returns {any}\r\n     */\r\n    filterData(data): any\r\n    {\r\n        if ( !this.filter )\r\n        {\r\n            return data;\r\n        }\r\n        return FuseUtils.filterArrayByString(data, this.filter);\r\n    }\r\n\r\n    /**\r\n     * Sort data\r\n     *\r\n     * @param data\r\n     * @returns {any[]}\r\n     */\r\n    sortData(data): any[]\r\n    {\r\n        if ( !this._matSort.active || this._matSort.direction === '' )\r\n        {\r\n            return data;\r\n        }\r\n\r\n        return data.sort((a, b) => {\r\n            let propertyA: number | string = '';\r\n            let propertyB: number | string = '';\r\n\r\n            switch ( this._matSort.active )\r\n            {\r\n                case 'id':\r\n                    [propertyA, propertyB] = [a.id, b.id];\r\n                    break;\r\n                case 'reference':\r\n                    [propertyA, propertyB] = [a.reference, b.reference];\r\n                    break;\r\n                case 'customer':\r\n                    [propertyA, propertyB] = [a.customer.firstName, b.customer.firstName];\r\n                    break;\r\n                case 'total':\r\n                    [propertyA, propertyB] = [a.total, b.total];\r\n                    break;\r\n                case 'payment':\r\n                    [propertyA, propertyB] = [a.payment.method, b.payment.method];\r\n                    break;\r\n                case 'status':\r\n                    [propertyA, propertyB] = [a.status[0].name, b.status[0].name];\r\n                    break;\r\n                case 'date':\r\n                    [propertyA, propertyB] = [a.date, b.date];\r\n                    break;\r\n            }\r\n\r\n            const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n            const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n\r\n            return (valueA < valueB ? -1 : 1) * (this._matSort.direction === 'asc' ? 1 : -1);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Disconnect\r\n     */\r\n    disconnect(): void\r\n    {\r\n    }\r\n}\r\n","<div id=\"orders\" class=\"page-layout carded fullwidth inner-scroll\">\r\n\r\n    <!-- TOP BACKGROUND -->\r\n    <div class=\"top-bg accent\"></div>\r\n    <!-- / TOP BACKGROUND -->\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\">\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent\"\r\n             fxLayout=\"column\" fxLayoutAlign=\"center center\"\r\n             fxLayout.gt-xs=\"row\" fxLayoutAlign.gt-xs=\"space-between center\">\r\n\r\n            <!-- APP TITLE -->\r\n            <div class=\"logo mb-24 mb-sm-0\"\r\n                 fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                <mat-icon class=\"logo-icon s-32 mr-16\" [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\r\n                    shopping_basket\r\n                </mat-icon>\r\n                <span class=\"logo-text h1\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">Orders</span>\r\n            </div>\r\n            <!-- / APP TITLE -->\r\n\r\n            <!-- SEARCH -->\r\n            <div class=\"search-wrapper  ml-sm-32\">\r\n                <div class=\"search\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                    <mat-icon>search</mat-icon>\r\n                    <input #filter placeholder=\"Search for an order\">\r\n                </div>\r\n            </div>\r\n            <!-- / SEARCH -->\r\n\r\n        </div>\r\n        <!-- / HEADER -->\r\n\r\n        <!-- CONTENT CARD -->\r\n        <div class=\"content-card\">\r\n\r\n            <mat-table class=\"orders-table\"\r\n                       #table [dataSource]=\"dataSource\"\r\n                       matSort\r\n                       [@animateStagger]=\"{value:'50'}\"\r\n                       fusePerfectScrollbar>\r\n\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>ID</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let order\">\r\n                        <p class=\"text-truncate\">{{order.id}}</p>\r\n                    </mat-cell>\r\n                </ng-container>\r\n\r\n                <!-- Reference Column -->\r\n                <ng-container matColumnDef=\"reference\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header fxHide fxShow.gt-sm>Reference</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let order\" fxHide fxShow.gt-sm>\r\n                        <p class=\"text-truncate\">{{order.reference}}</p>\r\n                    </mat-cell>\r\n                </ng-container>\r\n\r\n                <!-- Name Column -->\r\n                <ng-container matColumnDef=\"customer\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Customer</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let order\">\r\n                        <p class=\"text-truncate\">\r\n                            {{order.customer.firstName}}\r\n                            {{order.customer.lastName}}\r\n                        </p>\r\n                    </mat-cell>\r\n                </ng-container>\r\n\r\n                <!-- Total Price Column -->\r\n                <ng-container matColumnDef=\"total\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header fxHide fxShow.gt-md>Total</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let order\" fxHide fxShow.gt-md>\r\n                        <p class=\"total-price text-truncate\">\r\n                            {{order.total | currency:'USD':'symbol'}}\r\n                        </p>\r\n                    </mat-cell>\r\n                </ng-container>\r\n\r\n                <!-- Payment Column -->\r\n                <ng-container matColumnDef=\"payment\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header fxHide fxShow.gt-sm>Payment</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let order\" fxHide fxShow.gt-sm>\r\n                        <p class=\"text-truncate\">\r\n                            {{order.payment.method}}\r\n                        </p>\r\n                    </mat-cell>\r\n                </ng-container>\r\n\r\n                <!-- Status Column -->\r\n                <ng-container matColumnDef=\"status\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Status</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let order\">\r\n                        <p class=\"status text-truncate h6 p-4\" [ngClass]=\"order.status[0].color\">\r\n                            {{order.status[0].name}}\r\n                        </p>\r\n                    </mat-cell>\r\n                </ng-container>\r\n\r\n                <!-- Date Column -->\r\n                <ng-container matColumnDef=\"date\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header fxHide fxShow.gt-sm>Date</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let order\" fxHide fxShow.gt-sm>\r\n                        <p class=\"text-truncate\">\r\n                            {{order.date}}\r\n                        </p>\r\n                    </mat-cell>\r\n                </ng-container>\r\n\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></mat-header-row>\r\n\r\n                <mat-row *matRowDef=\"let order; columns: displayedColumns;\"\r\n                         class=\"order\"\r\n                         matRipple\r\n                         [routerLink]=\"'/apps/e-commerce/orders/'+order.id\">\r\n                </mat-row>\r\n            </mat-table>\r\n\r\n            <mat-paginator #paginator\r\n                           [length]=\"dataSource.filteredData.length\"\r\n                           [pageIndex]=\"0\"\r\n                           [pageSize]=\"10\"\r\n                           [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n            </mat-paginator>\r\n\r\n        </div>\r\n        <!-- / CONTENT CARD -->\r\n    </div>\r\n    <!-- / CENTER -->\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class EcommerceOrdersService implements Resolve<any>\r\n{\r\n    orders: any[];\r\n    onOrdersChanged: BehaviorSubject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {HttpClient} _httpClient\r\n     */\r\n    constructor(\r\n        private _httpClient: HttpClient\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.onOrdersChanged = new BehaviorSubject({});\r\n    }\r\n\r\n    /**\r\n     * Resolver\r\n     *\r\n     * @param {ActivatedRouteSnapshot} route\r\n     * @param {RouterStateSnapshot} state\r\n     * @returns {Observable<any> | Promise<any> | any}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            Promise.all([\r\n                this.getOrders()\r\n            ]).then(\r\n                () => {\r\n                    resolve();\r\n                },\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get orders\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getOrders(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/e-commerce-orders')\r\n                .subscribe((response: any) => {\r\n                    this.orders = response;\r\n                    this.onOrdersChanged.next(this.orders);\r\n                    resolve(response);\r\n                }, reject);\r\n        });\r\n    }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { FileManagerService } from 'app/main/apps/file-manager/file-manager.service';\r\nimport { EcommerceProductService } from '../product.service';\r\n\r\n@Component({\r\n    selector   : 'file-manager-details-sidebar',\r\n    templateUrl: './details.component.html',\r\n    styleUrls  : ['./details.component.scss'],\r\n    animations : fuseAnimations\r\n})\r\nexport class FileManagerDetailsSidebarComponent implements OnInit, OnDestroy\r\n{\r\n    selected: any;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {FileManagerService} _fileManagerService\r\n     */\r\n    constructor(\r\n        private _fileManagerService: EcommerceProductService\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        //console.log(\"entra !!\");\r\n        this._fileManagerService.onFileSelected\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(selected => {\r\n                this.selected = selected;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n}\r\n","<!-- SIDEBAR HEADER -->\r\n<div class=\"header accent p-24\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n    <div class=\"toolbar\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n\r\n        <button mat-icon-button class=\"\" aria-label=\"Download\" matTooltip=\"Download\">\r\n            <mat-icon>file_download</mat-icon>\r\n        </button>\r\n    </div>\r\n\r\n    <div>\r\n        <div class=\"title mb-8\">{{selected.nombre}}</div>\r\n    </div>\r\n</div>\r\n<!-- / SIDEBAR HEADER -->\r\n\r\n<!-- SIDEBAR CONTENT -->\r\n<div class=\"content p-24\" fusePerfectScrollbar>\r\n\r\n    <div class=\"file-details\" [@animate]=\"{value:'*',params:{delay:'200ms'}}\">\r\n\r\n        <div class=\"title\">Información</div>\r\n\r\n        <table>\r\n            \r\n            <tr class=\"document\">\r\n                <th>Paciente</th>\r\n                <td>{{selected.paciente}}</td>\r\n            </tr>\r\n\r\n            <tr class=\"document\">\r\n                <th>Documento</th>\r\n                <td>{{selected.cedula}}</td>\r\n            </tr>\r\n\r\n            <tr class=\"type\">\r\n                <th>Tipo</th>\r\n                <td>{{selected.type}}</td>\r\n            </tr>\r\n            <!--\r\n            <tr class=\"location\">\r\n                <th>Location</th>\r\n                <td>{{selected.location}}</td>\r\n            </tr>\r\n\r\n            <tr class=\"owner\">\r\n                <th>Owner</th>\r\n                <td>{{selected.owner}}</td>\r\n            </tr>\r\n\r\n            <tr class=\"modified\">\r\n                <th>Modified</th>\r\n                <td>{{selected.modified}}</td>\r\n            </tr>\r\n\r\n            <tr class=\"opened\">\r\n                <th>Opened</th>\r\n                <td>{{selected.opened}}</td>\r\n            </tr>\r\n\r\n            <tr class=\"created\">\r\n                <th>Created</th>\r\n                <td>{{selected.created}}</td>\r\n            </tr> -->\r\n        </table>\r\n    </div>\r\n\r\n</div>\r\n<!-- / SIDEBAR CONTENT -->\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseSidebarService } from '@fuse/components/sidebar/sidebar.service';\r\nimport { EcommerceProductService } from '../product.service';\r\n\r\n@Component({\r\n    selector     : 'file-list',\r\n    templateUrl  : './file-list.component.html',\r\n    styleUrls    : ['./file-list.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class FileManagerFileListComponent implements OnInit, OnDestroy\r\n{\r\n    files: any;\r\n    dataSou: FilesDataSource | null;\r\n    displayedColumns =  ['icon', 'name', 'type', 'url'];\r\n    selected: any;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {FileManagerService} _fileManagerService\r\n     * @param {FuseSidebarService} _fuseSidebarService\r\n     */\r\n    constructor(\r\n        private _fileManagerService: EcommerceProductService,\r\n        private _fuseSidebarService: FuseSidebarService\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this.dataSou = new FilesDataSource(this._fileManagerService);\r\n        console.log('cargando el ds', this.dataSou);\r\n\r\n        this._fileManagerService.onFilesChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(files => {\r\n                this.files = files.consulta;\r\n                console.log('cargando el ds ....', this.files);\r\n            });\r\n\r\n        this._fileManagerService.onFileSelected\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(selected => {\r\n                this.selected = selected;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On select\r\n     *\r\n     * @param selected\r\n     */\r\n    onSelect(selected): void\r\n    {\r\n        this._fileManagerService.onFileSelected.next(selected);\r\n    }\r\n\r\n    /**\r\n     * Toggle the sidebar\r\n     *\r\n     * @param name\r\n     */\r\n    toggleSidebar(name): void\r\n    {\r\n        this._fuseSidebarService.getSidebar(name).toggleOpen();\r\n    }\r\n}\r\n\r\nexport class FilesDataSource extends DataSource<any>\r\n{\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {FileManagerService} _fileManagerService\r\n     */\r\n    constructor(\r\n        private _fileManagerService: EcommerceProductService\r\n    )\r\n    {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Connect function called by the table to retrieve one stream containing the data to render.\r\n     *\r\n     * @returns {Observable<any[]>}\r\n     */\r\n    connect(): Observable<any[]>\r\n    {\r\n        return this._fileManagerService.onFilesChanged;\r\n    }\r\n\r\n    /**\r\n     * Disconnect\r\n     */\r\n    disconnect(): void\r\n    {\r\n    }\r\n}\r\n","<mat-table #table [dataSource]=\"dataSou\" [@animateStagger]=\"{value:'50'}\">\r\n\r\n    <!-- Type Column -->\r\n    <ng-container matColumnDef=\"icon\">\r\n        <mat-header-cell *matHeaderCellDef fxFlex=\"64px\"></mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\" fxFlex=\"64px\">\r\n            <mat-icon class=\"type-icon\" [ngClass]=\"row.type\"></mat-icon>\r\n        </mat-cell>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n        <mat-header-cell *matHeaderCellDef>Nombre</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\"> {{row.nombre}}</mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"type\">\r\n        <mat-header-cell *matHeaderCellDef>Tipo</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\"> {{row.type}}</mat-cell>\r\n    </ng-container>\r\n\r\n    <!-- Type Column -->\r\n    <ng-container matColumnDef=\"url\">\r\n        <mat-header-cell *matHeaderCellDef>Url</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\">\r\n            <a *ngIf=\"row.url != null\" class=\"nav-link\" href=\"{{row.url}}\" target=\"_blank\">\r\n                <span>Ver</span>\r\n            </a>\r\n        </mat-cell>\r\n    </ng-container>\r\n\r\n    <!-- Detail Button Column -->\r\n   <!-- <ng-container matColumnDef=\"detail-button\">\r\n        <mat-header-cell *matHeaderCellDef fxFlex=\"48px\" fxHide.gt-md></mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\" fxFlex=\"48px\" fxHide.gt-md>\r\n            <button mat-icon-button class=\"sidebar-toggle\" fxHide.gt-md\r\n                    (click)=\"toggleSidebar('file-manager-details-sidebar')\">\r\n                <mat-icon class=\"secondary-text\">info</mat-icon>\r\n            </button>\r\n        </mat-cell>\r\n    </ng-container> -->\r\n\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"\r\n             (click)=\"onSelect(row)\"\r\n             [ngClass]=\"{'selected' : row == selected}\"\r\n             [@animate]=\"{value:'*',params:{y:'100%'}}\"\r\n    >\r\n    </mat-row>\r\n</mat-table>\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Location } from '@angular/common';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseUtils } from '@fuse/utils';\r\nimport { Product } from 'app/main/apps/e-commerce/product/product.model';\r\nimport { EcommerceProductService } from 'app/main/apps/e-commerce/product/product.service';\r\nimport { FuseSidebarService } from '@fuse/components/sidebar/sidebar.service';\r\n\r\n@Component({\r\n    selector     : 'e-commerce-product',\r\n    templateUrl  : './product.component.html',\r\n    styleUrls    : ['./product.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class EcommerceProductComponent implements OnInit, OnDestroy\r\n{\r\n    product: Product;\r\n    pageType: string;\r\n    productForm: FormGroup;\r\n    files: any;\r\n    selected: any;\r\n    pathArr: string[];\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n   \r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {EcommerceProductService} _ecommerceProductService\r\n     * @param {FormBuilder} _formBuilder\r\n     * @param {Location} _location\r\n     * @param {MatSnackBar} _matSnackBar\r\n     */\r\n    constructor(\r\n        private _ecommerceProductService: EcommerceProductService,\r\n        private _formBuilder: FormBuilder,\r\n        private _location: Location,\r\n        private _matSnackBar: MatSnackBar,\r\n        private _fuseSidebarService: FuseSidebarService\r\n    )\r\n    {\r\n        // Set the default\r\n        this.product = new Product();\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    \r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Subscribe to update product on changes\r\n        this._ecommerceProductService.onProductChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(product => {\r\n\r\n                //console.log(product);\r\n                if ( product )\r\n                {\r\n                    this.product = new Product(product);\r\n                    this.pageType = 'edit';\r\n                }\r\n                else\r\n                {\r\n                    this.pageType = 'new';\r\n                    this.product = new Product();\r\n                }\r\n\r\n                this.productForm = this.createProductForm();\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Create product form\r\n     *\r\n     * @returns {FormGroup}\r\n     */\r\n    createProductForm(): FormGroup\r\n    {\r\n        return this._formBuilder.group({\r\n            idCons          : [this.product.consulta[0].id],\r\n            fecha           : [this.product.consulta[0].fecha],\r\n            paciente        : [this.product.consulta[0].nombre],\r\n            cedula          : [this.product.perfil[0].cedula],\r\n            estado          : [this.product.consulta[0].estado],\r\n            resultado       : [this.product.consulta[0].resultado],\r\n            startDate       : [this.product.cita[0].startDate],\r\n            estadoCita      : [this.product.cita[0].estadoCita],\r\n            examenes        : [this.product.cita[0].examenes],\r\n            ips             : [this.product.cita[0].ips],\r\n            idPaciente      : [this.product.perfil[0].idPaciente],\r\n            nombre          : [this.product.perfil[0].nombre],\r\n            apellido        : [this.product.perfil[0].apellido],\r\n            email           : [this.product.perfil[0].email],\r\n            celular         : [this.product.perfil[0].celular],\r\n            direccion       : [this.product.perfil[0].direccion],\r\n            cargo           : [this.product.perfil[0].cargo], \r\n            perfil          : [this.product.cita[0].perfil],            \r\n        }, {readonly: true});\r\n    }\r\n\r\n    /**\r\n     * Save product\r\n     */\r\n    saveProduct(): void\r\n    {\r\n        const data = this.productForm.getRawValue();\r\n        data.handle = FuseUtils.handleize(data.name);\r\n\r\n        this._ecommerceProductService.saveProduct(data)\r\n            .then(() => {\r\n\r\n                // Trigger the subscription with new data\r\n                this._ecommerceProductService.onProductChanged.next(data);\r\n\r\n                // Show the success message\r\n                this._matSnackBar.open('Product saved', 'OK', {\r\n                    verticalPosition: 'top',\r\n                    duration        : 2000\r\n                });\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Add product\r\n     */\r\n    addProduct(): void\r\n    {\r\n        const data = this.productForm.getRawValue();\r\n        data.handle = FuseUtils.handleize(data.name);\r\n\r\n        this._ecommerceProductService.addProduct(data)\r\n            .then(() => {\r\n\r\n                // Trigger the subscription with new data\r\n                this._ecommerceProductService.onProductChanged.next(data);\r\n\r\n                // Show the success message\r\n                this._matSnackBar.open('Product added', 'OK', {\r\n                    verticalPosition: 'top',\r\n                    duration        : 2000\r\n                });\r\n\r\n                // Change the location with new one\r\n                this._location.go('apps/e-commerce/products/' + this.product.consulta[0].id + '/' + this.product.perfil[0].nombre);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Toggle the sidebar\r\n     *\r\n     * @param name\r\n     */\r\n    toggleSidebar(name): void\r\n    {\r\n        this._fuseSidebarService.getSidebar(name).toggleOpen();\r\n    }\r\n}\r\n","<div id=\"product\" class=\"page-layout carded fullwidth inner-scroll\">\r\n\r\n    <!-- TOP BACKGROUND -->\r\n    <div class=\"top-bg accent\"></div>\r\n    <!-- / TOP BACKGROUND -->\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\">\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n\r\n            <!-- APP TITLE -->\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n                <button mat-icon-button class=\"mr-0 mr-sm-16\" [routerLink]=\"'/apps/e-commerce/products'\">\r\n                    <mat-icon>arrow_back</mat-icon>\r\n                </button>\r\n\r\n                <div fxLayout=\"column\" fxLayoutAlign=\"start start\"\r\n                     [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">\r\n                    <div class=\"h2\" *ngIf=\"pageType ==='edit'\">\r\n                        {{product.consulta[0].nombre}}\r\n                    </div>\r\n                    <div class=\"h2\" *ngIf=\"pageType ==='new'\">\r\n                        New Product\r\n                    </div>\r\n                    <div class=\"subtitle secondary-text\">\r\n                        <span>Detalles</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- / APP TITLE -->\r\n\r\n            <!--\r\n            <button mat-raised-button\r\n                    class=\"save-product-button\"\r\n                    [disabled]=\"productForm.invalid\"\r\n                    *ngIf=\"pageType ==='new'\" (click)=\"addProduct()\">\r\n                <span>ADD</span>\r\n            </button> -->\r\n\r\n            <!-- <button mat-raised-button\r\n                    class=\"save-product-button\"\r\n                    [disabled]=\"productForm.invalid || productForm.pristine\"\r\n                    *ngIf=\"pageType ==='edit'\" (click)=\"saveProduct()\">\r\n                <span>SAVE</span>\r\n            </button> -->\r\n        </div>\r\n        <!-- / HEADER -->\r\n\r\n        <!-- CONTENT CARD -->\r\n        <div class=\"content-card\">\r\n\r\n            <!-- CONTENT -->\r\n            <div class=\"content\">\r\n\r\n                <form name=\"productForm\" [formGroup]=\"productForm\" class=\"product w-100-p\" fxLayout=\"column\" fxFlex>\r\n\r\n                    <mat-tab-group>\r\n\r\n                        <mat-tab label=\"Consulta\">\r\n\r\n                            <div class=\"tab-content p-24\" fusePerfectScrollbar>\r\n\r\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\r\n                                    <mat-label>Paciente</mat-label>\r\n                                    \r\n                                    <input matInput placeholder=\"Paciente\"\r\n                                           name=\"paciente\"\r\n                                           formControlName=\"paciente\"\r\n                                           readonly>\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\r\n                                    <mat-label>Cédula</mat-label>\r\n                                    <input matInput placeholder=\"cedula\" name=\"cedula\" formControlName=\"cedula\"\r\n                                        readonly>\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\r\n                                    <mat-label>Fecha del resultado</mat-label>\r\n                                    <input matInput placeholder=\"fecha\" name=\"fecha\" formControlName=\"fecha\"\r\n                                        readonly>\r\n                                </mat-form-field>\r\n                               \r\n\r\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\r\n                                    <mat-label>Estado</mat-label>\r\n                                    <input matInput placeholder=\"estado\" name=\"estado\"\r\n                                        formControlName=\"estado\"\r\n                                        readonly>\r\n                                </mat-form-field>\r\n\r\n                                <a class=\"nav-link\" href=\"{{product.consulta[0].resultado}}\" target=\"_blank\">\r\n                                    <span>Ver resultado</span>\r\n                                </a>\r\n                                <!--\r\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\r\n\r\n                                    <mat-label>Categories</mat-label>\r\n\r\n                                    <mat-chip-list #categoryList name=\"categories\" formControlName=\"categories\">\r\n\r\n                                        <mat-chip *ngFor=\"let category of product.categories\"\r\n                                                  [removable]=\"true\" (removed)=\"product.removeCategory(category)\">\r\n                                            {{category}}\r\n                                            <mat-icon matChipRemove>cancel</mat-icon>\r\n                                        </mat-chip>\r\n\r\n                                        <input [matChipInputFor]=\"categoryList\"\r\n                                               [matChipInputAddOnBlur]=\"true\"\r\n                                               (matChipInputTokenEnd)=\"product.addCategory($event)\"/>\r\n\r\n                                    </mat-chip-list>\r\n\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\r\n\r\n                                    <mat-label>Tags</mat-label>\r\n\r\n                                    <mat-chip-list #tagList name=\"tags\" formControlName=\"tags\">\r\n\r\n                                        <mat-chip *ngFor=\"let tag of product.tags\"\r\n                                                  [removable]=\"true\" (removed)=\"product.removeTag(tag)\">\r\n                                            {{tag}}\r\n                                            <mat-icon matChipRemove>cancel</mat-icon>\r\n                                        </mat-chip>\r\n\r\n                                        <input [matChipInputFor]=\"tagList\"\r\n                                               [matChipInputAddOnBlur]=\"true\"\r\n                                               (matChipInputTokenEnd)=\"product.addTag($event)\"/>\r\n\r\n                                    </mat-chip-list>\r\n\r\n                                </mat-form-field> -->\r\n\r\n                            </div>\r\n\r\n                        </mat-tab>\r\n\r\n                        <mat-tab label=\"Cita\">\r\n\r\n                            <div class=\"tab-content p-24\" fusePerfectScrollbar>\r\n                                <div fxLayout=\"row wrap\" fxLayoutAlign=\"start start\">\r\n\r\n                                    <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\r\n                                        <mat-label>Fecha y hora</mat-label>\r\n                                        <input matInput placeholder=\"startDate\" name=\"startDate\"\r\n                                            formControlName=\"startDate\"\r\n                                            readonly>\r\n                                    </mat-form-field>\r\n\r\n                                    <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\r\n                                        <mat-label>Estado</mat-label>\r\n                                        <input matInput placeholder=\"Estado\" name=\"estadoCita\" formControlName=\"estadoCita\"\r\n                                            readonly>\r\n                                    </mat-form-field>\r\n\r\n                                     <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\r\n                                         <mat-label>Exámenes Realizados</mat-label>\r\n                                         <input matInput placeholder=\"Exámenes Realizados\" name=\"examenes\"\r\n                                             formControlName=\"examenes\" readonly>\r\n                                     </mat-form-field>\r\n\r\n                                     <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\r\n                                        <mat-label>Perfil</mat-label>\r\n                                        <input matInput placeholder=\"Perfil\" name=\"perfil\" formControlName=\"perfil\"\r\n                                            readonly>\r\n                                    </mat-form-field>\r\n\r\n                                    <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\r\n                                        <mat-label>Ips</mat-label>\r\n                                        <input matInput placeholder=\"IPS\" name=\"ips\"\r\n                                            formControlName=\"ips\" readonly>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </mat-tab>\r\n                        <mat-tab label=\"Paciente\">\r\n\r\n                            <div class=\"tab-content p-24\" fusePerfectScrollbar>\r\n\r\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\r\n                                    <mat-label>Cédula</mat-label>\r\n                                    <input matInput placeholder=\"cedula\" name=\"cedula\" formControlName=\"cedula\"\r\n                                        readonly>\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\r\n                                    <mat-label>Nombre</mat-label>\r\n                                    <input matInput placeholder=\"nombre\" name=\"nombre\" formControlName=\"nombre\"\r\n                                        readonly>\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\r\n                                    <mat-label>Apellido</mat-label>\r\n                                    <input matInput placeholder=\"apellido\" name=\"apellido\" formControlName=\"apellido\"\r\n                                        readonly>\r\n                                </mat-form-field>\r\n\r\n\r\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\r\n                                    <mat-label>Email</mat-label>\r\n                                    <input matInput placeholder=\"email\" name=\"email\" formControlName=\"email\"\r\n                                        readonly>\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\r\n                                    <mat-label>Celular</mat-label>\r\n                                    <input matInput placeholder=\"celular\" name=\"celular\"\r\n                                        formControlName=\"celular\"\r\n                                        readonly>\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\r\n                                    <mat-label>Dirección</mat-label>\r\n                                    <input matInput placeholder=\"direccion\" name=\"direccion\" formControlName=\"direccion\"\r\n                                        readonly>\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\r\n                                    <mat-label>Cargo</mat-label>\r\n                                    <input matInput placeholder=\"cargo\" name=\"cargo\" formControlName=\"cargo\"\r\n                                        readonly>\r\n                                </mat-form-field>\r\n\r\n                            </div>\r\n                        </mat-tab>\r\n\r\n                        <mat-tab label=\"Documentos Asociados\">\r\n\r\n                            <div class=\"tab-content p-24\" fusePerfectScrollbar>\r\n\r\n                                <div class=\"center\" fxFlex>\r\n                                    <!-- CONTENT -->\r\n                                    <div class=\"content\" fusePerfectScrollbar>\r\n                                        <file-list></file-list>\r\n                                    </div>\r\n                                    <!-- / CONTENT -->\r\n                                </div>\r\n                                <fuse-sidebar class=\"sidebar details-sidebar\" name=\"file-manager-details-sidebar\" position=\"right\"\r\n                                            lockedOpen=\"gt-md\">\r\n                                            <file-manager-details-sidebar></file-manager-details-sidebar>\r\n                                </fuse-sidebar>\r\n                            </div>\r\n                        </mat-tab>\r\n<!--\r\n                            <mat-tab label=\"Inventory\">\r\n\r\n                            <div class=\"tab-content p-24\" fusePerfectScrollbar>\r\n\r\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\r\n                                    <mat-label>SKU</mat-label>\r\n                                    <input matInput placeholder=\"SKU\"\r\n                                           name=\"sku\"\r\n                                           formControlName=\"sku\">\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\r\n                                    <mat-label>Quantity</mat-label>\r\n                                    <input matInput placeholder=\"Quantity\"\r\n                                           name=\"quantity\"\r\n                                           formControlName=\"quantity\"\r\n                                           type=\"number\">\r\n                                </mat-form-field>\r\n\r\n                            </div>\r\n\r\n                        </mat-tab>\r\n\r\n                        <mat-tab label=\"Shipping\">\r\n\r\n                            <div class=\"tab-content p-24\" fusePerfectScrollbar fxLayout=\"column\">\r\n\r\n                                <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\r\n\r\n                                    <mat-form-field appearance=\"outline\" floatLabel=\"always\" fxFlex=\"30\">\r\n                                        <mat-label>Width</mat-label>\r\n                                        <input matInput placeholder=\"Width\"\r\n                                               name=\"Width\"\r\n                                               formControlName=\"width\">\r\n                                        <span matSuffix>cm</span>\r\n                                    </mat-form-field>\r\n\r\n                                    <mat-form-field appearance=\"outline\" floatLabel=\"always\" fxFlex=\"30\">\r\n                                        <mat-label>Height</mat-label>\r\n                                        <input matInput placeholder=\"Height\"\r\n                                               name=\"Height\"\r\n                                               formControlName=\"height\">\r\n                                        <span matSuffix>cm</span>\r\n                                    </mat-form-field>\r\n\r\n                                    <mat-form-field appearance=\"outline\" floatLabel=\"always\" fxFlex=\"30\">\r\n                                        <mat-label>Depth</mat-label>\r\n                                        <input matInput placeholder=\"Depth\"\r\n                                               name=\"Depth\"\r\n                                               formControlName=\"depth\">\r\n                                        <span matSuffix>cm</span>\r\n                                    </mat-form-field>\r\n\r\n                                </div>\r\n\r\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\r\n                                    <mat-label>Weight</mat-label>\r\n                                    <input matInput placeholder=\"Weight\"\r\n                                           name=\"Weight\"\r\n                                           formControlName=\"weight\">\r\n                                    <span matSuffix>kg</span>\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field appearance=\"outline\" floatLabel=\"always\" class=\"w-100-p\">\r\n                                    <mat-label>Extra Shipping Fee</mat-label>\r\n                                    <input matInput placeholder=\"Extra Shipping Fee\"\r\n                                           name=\"extraShippingFee\"\r\n                                           formControlName=\"extraShippingFee\"\r\n                                           type=\"number\">\r\n                                    <span matPrefix>$&nbsp;</span>\r\n                                </mat-form-field>\r\n\r\n                            </div>\r\n\r\n                        </mat-tab>\r\n                    -->\r\n                    </mat-tab-group>\r\n\r\n                </form>\r\n\r\n            </div>\r\n            <!-- / CONTENT -->\r\n\r\n        </div>\r\n        <!-- / CONTENT CARD -->\r\n\r\n    </div>\r\n    <!-- / CENTER -->\r\n\r\n</div>\r\n","import { MatChipInputEvent } from '@angular/material/chips';\r\n\r\nimport { FuseUtils } from '@fuse/utils';\r\n\r\nexport class Product\r\n{\r\n    consulta: Array<any>;\r\n    cita: Array<any>;\r\n    perfil: Array<any>;\r\n    /*id: string;\r\n    name: string;\r\n    handle: string;\r\n    description: string;\r\n    categories: string[];\r\n    tags: string[];\r\n    images: {\r\n        default: boolean,\r\n        id: string,\r\n        url: string,\r\n        type: string\r\n    }[];\r\n    priceTaxExcl: number;\r\n    priceTaxIncl: number;\r\n    taxRate: number;\r\n    comparedPrice: number;\r\n    quantity: number;\r\n    sku: string;\r\n    width: string;\r\n    height: string;\r\n    depth: string;\r\n    weight: string;\r\n    extraShippingFee: number;\r\n    active: boolean; */\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param product\r\n     */\r\n    constructor(product?)\r\n    {\r\n        product = product || {};\r\n        this.consulta = product.consulta;\r\n        this.cita = product.cita;\r\n        this.perfil = product.perfil;\r\n        /*this.id = product.id || FuseUtils.generateGUID();\r\n        this.name = product.name || '';\r\n        this.handle = product.handle || FuseUtils.handleize(this.name);\r\n        this.description = product.description || '';\r\n        this.categories = product.categories || [];\r\n        this.tags = product.tags || [];\r\n        this.images = product.images || [];\r\n        this.priceTaxExcl = product.priceTaxExcl || 0;\r\n        this.priceTaxIncl = product.priceTaxIncl || 0;\r\n        this.taxRate = product.taxRate || 0;\r\n        this.comparedPrice = product.comparedPrice || 0;\r\n        this.quantity = product.quantity || 0;\r\n        this.sku = product.sku || 0;\r\n        this.width = product.width || 0;\r\n        this.height = product.height || 0;\r\n        this.depth = product.depth || 0;\r\n        this.weight = product.weight || 0;\r\n        this.extraShippingFee = product.extraShippingFee || 0;\r\n        this.active = product.active || true; */\r\n    }\r\n\r\n    /**\r\n     * Add category\r\n     *\r\n     * @param {MatChipInputEvent} event\r\n     */\r\n    /*addCategory(event: MatChipInputEvent): void\r\n    {\r\n        const input = event.input;\r\n        const value = event.value;\r\n\r\n        // Add category\r\n        if ( value )\r\n        {\r\n            this.categories.push(value);\r\n        }\r\n\r\n        // Reset the input value\r\n        if ( input )\r\n        {\r\n            input.value = '';\r\n        }\r\n    }*/\r\n\r\n    /**\r\n     * Remove category\r\n     *\r\n     * @param category\r\n     */\r\n    /*removeCategory(category): void\r\n    {\r\n        const index = this.categories.indexOf(category);\r\n\r\n        if ( index >= 0 )\r\n        {\r\n            this.categories.splice(index, 1);\r\n        }\r\n    }*/\r\n\r\n    /**\r\n     * Add tag\r\n     *\r\n     * @param {MatChipInputEvent} event\r\n     */\r\n   /* addTag(event: MatChipInputEvent): void\r\n    {\r\n        const input = event.input;\r\n        const value = event.value;\r\n\r\n        // Add tag\r\n        if ( value )\r\n        {\r\n            this.tags.push(value);\r\n        }\r\n\r\n        // Reset the input value\r\n        if ( input )\r\n        {\r\n            input.value = '';\r\n        }\r\n    }\r\n*/\r\n    /**\r\n     * Remove tag\r\n     *\r\n     * @param tag\r\n     */\r\n   /* removeTag(tag): void\r\n    {\r\n        const index = this.tags.indexOf(tag);\r\n\r\n        if ( index >= 0 )\r\n        {\r\n            this.tags.splice(index, 1);\r\n        }\r\n    } */\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { LoginService } from 'app/main/pages/authentication/login-2/login.service';\r\nimport { environment } from 'environments/environment';\r\nimport * as moment from 'moment';\r\n\r\n@Injectable()\r\nexport class EcommerceProductService implements Resolve<any>\r\n{\r\n    routeParams: any;\r\n    product: any;\r\n    patient: any;\r\n    appoiment: any;\r\n    onProductChanged: BehaviorSubject<any>;\r\n    onFilesChanged: BehaviorSubject<any>;\r\n    onFileSelected: BehaviorSubject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {HttpClient} _httpClient\r\n     */\r\n    constructor(\r\n        private _httpClient: HttpClient,\r\n        private _loginService: LoginService,\r\n        // Set the defaults\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.onProductChanged = new BehaviorSubject({});\r\n        this.onFilesChanged = new BehaviorSubject({});\r\n        this.onFileSelected = new BehaviorSubject({});\r\n        moment.locale('es');\r\n    }\r\n\r\n    /**\r\n     * Resolver\r\n     *\r\n     * @param {ActivatedRouteSnapshot} route\r\n     * @param {RouterStateSnapshot} state\r\n     * @returns {Observable<any> | Promise<any> | any}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\r\n    {\r\n        this.routeParams = route.params;\r\n\r\n        return new Promise(async (resolve, reject) => {\r\n\r\n            /*let con = await this.getProduct();\r\n            let cit = await this.getAppointment();\r\n            let per = await this.getPatient();\r\n            let result = { 'consulta': '1', 'cita': 's', 'perfil': 'as' };*/\r\n            Promise.all([\r\n                this.getProduct()\r\n            ]).then(\r\n                () => {\r\n                    resolve(null);\r\n                },\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get product\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    /*getProduct(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            if ( this.routeParams.id === 'new' )\r\n            {\r\n                this.onProductChanged.next(false);\r\n                resolve(false);\r\n            }\r\n            else\r\n            {\r\n                this._httpClient.get('api/e-commerce-products/' + this.routeParams.id)\r\n                    .subscribe((response: any) => {\r\n                        this.product = response;\r\n                        this.onProductChanged.next(this.product);\r\n                        resolve(response);\r\n                    }, reject);\r\n            }\r\n        });\r\n    }*/\r\n\r\n\r\n    getDocuments(product, appoiment, patient): Promise<any> {\r\n        const token = this._loginService.getToken();\r\n        const tipo = this._loginService.getTipo();\r\n        console.log(\"tipo -->>>>>>>>\" + tipo);\r\n        let query = `SELECT id,Nombre,Tipo_de_Documento%23value,Documento_URL,Visible_Medico FROM Documento2 where R17424681 = ${this.routeParams.handle}`; \r\n        // and Fecha_Resultado > yyyy - mm - dd(1) and Fecha_Resultado < yyyy - mm - dd(2)`);\r\n        let url = `${environment.url}rest/api/selectQuery?maxRows=1000&query=` + query + \"&sessionId=\" + token + \"&output=json&maxRows=1\";\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get(url)//'api/e-commerce-products')\r\n                .subscribe((response: any) => {\r\n                    const info = new Array<any>();\r\n                    const result = new Array<any>();\r\n                    for (let i = 0; i < response.length; i++) {\r\n                        let fech = moment(new Date()).format('ll');\r\n                        let resultado = '';\r\n                        let url = response[i][3].includes('impeltechnology') ? response[i][3] + '&sessionId=' + token : response[i][3];\r\n                        switch(tipo)\r\n                        {\r\n                            case \"Consulta\":\r\n                                if(!response[i][4]){\r\n                                    result.push({ 'id': response[i][0], 'fecha': fech, 'nombre': response[i][1], 'url': url, 'type': response[i][2],'paciente': patient[0].nombre, 'cedula': patient[0].cedula});\r\n                                }\r\n                                break;\r\n\r\n                            case \"Medico\":\r\n                                result.push({ 'id': response[i][0], 'fecha': fech, 'nombre': response[i][1], 'url': url, 'type': response[i][2],'paciente': patient[0].nombre, 'cedula': patient[0].cedula});\r\n                                break;\r\n\r\n                            default:\r\n                                result.push({ 'id': response[i][0], 'fecha': fech, 'nombre': response[i][1], 'url': url, 'type': response[i][2],'paciente': patient[0].nombre, 'cedula': patient[0].cedula});\r\n                                break;\r\n                        }                           \r\n                    }\r\n                    this.onFilesChanged.next(result);\r\n                    if (result.length > 0) {\r\n                        this.onFileSelected.next(result[0]);\r\n                    } else {\r\n                        this.onFileSelected.next({ 'id': '', 'fecha': '', 'nombre': '', 'url': '', 'type': '','paciente': '', 'cedula': ''});\r\n                    }\r\n                    let total = { 'consulta': product, 'cita': appoiment, 'perfil': patient, 'documentos': result }; \r\n                    this.onProductChanged.next(total);\r\n                    resolve(result);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    getProduct(): Promise<any> {\r\n        const token = this._loginService.getToken();\r\n        const tipo = this._loginService.getTipo();\r\n        let query = encodeURI(`SELECT id,Fecha_Resultado,Nombre_Paciente,Cedula_Paciente,Estado_Txt,ResultadoPDF,\r\n        Historia_Clinica,Audiometria,Audiometria_1,Optometria,Terapia_Fisica,Psicologia,Laboratorio,Pruebas_Complementarias\r\n        FROM Consulta where id = ${this.routeParams.handle}`); // and Fecha_Resultado > yyyy - mm - dd(1) and Fecha_Resultado < yyyy - mm - dd(2)`);\r\n        let url = `${environment.url}rest/api/selectQuery?maxRows=1000&query=` + query + \"&sessionId=\" + token + \"&output=json&maxRows=1\";\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get(url)//'api/e-commerce-products')\r\n                .subscribe((response: any) => {\r\n                    const info = new Array<any>();\r\n                    const result = new Array<any>();\r\n                    let fech = moment(response[0][1]).format('ll');\r\n                    /*for (let i = 0; i < response.length; i++) {\r\n                        let fech = moment(response[i][1]).format('ll');\r\n                        let resultado = '';\r\n                        switch(tipo)\r\n                        {\r\n                            case \"Consulta\":\r\n                                resultado = response[i][5];\r\n                                break;\r\n\r\n                            case \"Médico\":\r\n                                resultado = response[i][5]; \r\n                                result.push({ 'id': response[i][0], 'fecha': fech, 'nombre': 'Historia Clínica', 'url': response[i][6], 'type': 'Documento','paciente': response[i][2], 'cedula': response[i][3]});\r\n                                result.push({ 'id': response[i][0], 'fecha': fech, 'nombre': 'Audiometría 1', 'url': response[i][7], 'type': 'Documento','paciente': response[i][2], 'cedula': response[i][3]});\r\n                                result.push({ 'id': response[i][0], 'fecha': fech, 'nombre': 'Audiometría 2', 'url': response[i][8], 'type': 'Documento','paciente': response[i][2], 'cedula': response[i][3]});\r\n                                result.push({ 'id': response[i][0], 'fecha': fech, 'nombre': 'Optometría', 'url': response[i][9], 'type': 'Documento','paciente': response[i][2], 'cedula': response[i][3]});\r\n                                result.push({ 'id': response[i][0], 'fecha': fech, 'nombre': 'Terapia Física', 'url': response[i][10], 'type': 'Documento','paciente': response[i][2], 'cedula': response[i][3]});\r\n                                result.push({ 'id': response[i][0], 'fecha': fech, 'nombre': 'Psicología', 'url': response[i][11], 'type': 'Documento','paciente': response[i][2], 'cedula': response[i][3]});\r\n                                result.push({ 'id': response[i][0], 'fecha': fech, 'nombre': 'Laboratorio', 'url': response[i][12], 'type': 'Documento','paciente': response[i][2], 'cedula': response[i][3]});\r\n                                result.push({ 'id': response[i][0], 'fecha': fech, 'nombre': 'Pruebas Complementarias', 'url': response[i][13], 'type': 'Documento','paciente': response[i][2], 'cedula': response[i][3]});\r\n                                break;\r\n\r\n                            case \"Opto\":\r\n                                result.push({ 'id': response[i][0], 'fecha': fech, 'nombre': 'Audiometría 1', 'url': response[i][7], 'type': 'Documento','paciente': response[i][2], 'cedula': response[i][3]});\r\n                                result.push({ 'id': response[i][0], 'fecha': fech, 'nombre': 'Audiometría 2', 'url': response[i][8], 'type': 'Documento','paciente': response[i][2], 'cedula': response[i][3]});\r\n                                break;\r\n\r\n                            case \"Fono\":\r\n                                result.push({ 'id': response[i][0], 'fecha': fech, 'nombre': 'Optometría', 'url': response[i][9], 'type': 'Documento','paciente': response[i][2], 'cedula': response[i][3]});\r\n                                break;\r\n                            \r\n                            case \"Psi\":\r\n                                result.push({ 'id': response[i][0], 'fecha': fech, 'nombre': 'Psicologia', 'url': response[i][11], 'type': 'Documento','paciente': response[i][2], 'cedula': response[i][3]});\r\n                                break;\r\n                            \r\n                            case \"Fisio\":\r\n                                result.push({ 'id': response[i][0], 'fecha': fech, 'nombre': 'Laboratorio', 'url': response[i][12], 'type': 'Documento','paciente': response[i][2], 'cedula': response[i][3]});\r\n                                break;\r\n\r\n                            default:\r\n                                result.push({ 'id': response[i][0], 'fecha': fech, 'nombre': 'Historia Clínica', 'url': response[i][6], 'type': 'Documento','paciente': response[i][2], 'cedula': response[i][3]});\r\n                                result.push({ 'id': response[i][0], 'fecha': fech, 'nombre': 'Audiometría 1', 'url': response[i][7], 'type': 'Documento','paciente': response[i][2], 'cedula': response[i][3]});\r\n                                result.push({ 'id': response[i][0], 'fecha': fech, 'nombre': 'Audiometría 2', 'url': response[i][8], 'type': 'Documento','paciente': response[i][2], 'cedula': response[i][3]});\r\n                                result.push({ 'id': response[i][0], 'fecha': fech, 'nombre': 'Optometría', 'url': response[i][9], 'type': 'Documento','paciente': response[i][2], 'cedula': response[i][3]});\r\n                                result.push({ 'id': response[i][0], 'fecha': fech, 'nombre': 'Terapia Física', 'url': response[i][10], 'type': 'Documento','paciente': response[i][2], 'cedula': response[i][3]});\r\n                                result.push({ 'id': response[i][0], 'fecha': fech, 'nombre': 'Psicología', 'url': response[i][11], 'type': 'Documento','paciente': response[i][2], 'cedula': response[i][3]});\r\n                                result.push({ 'id': response[i][0], 'fecha': fech, 'nombre': 'Laboratorio', 'url': response[i][12], 'type': 'Documento','paciente': response[i][2], 'cedula': response[i][3]});\r\n                                result.push({ 'id': response[i][0], 'fecha': fech, 'nombre': 'Pruebas Complementarias', 'url': response[i][13], 'type': 'Documento','paciente': response[i][2], 'cedula': response[i][3]});\r\n                                break;\r\n                        }\r\n\r\n                        info.push(\r\n                            { 'id': response[i][0], 'fecha': fech, 'nombre': response[i][2], 'cedula': response[i][3], 'estado': response[i][4], 'resultado': resultado,\r\n                              'historia': response[i][6], 'audiometria': response[i][7], 'audiometria1': response[i][8], 'optometria ': response[i][9], \r\n                              'terapia': response[i][10], 'psicologia': response[i][11], 'laboratorio': response[i][12], 'pruebas': response[i][13],\r\n                         });\r\n                        \r\n                        this.onFilesChanged.next(result);\r\n                        this.onFileSelected.next(result[0]); \r\n                         \r\n                    }*/\r\n\r\n                    let url = \"\";\r\n                    if(response[0][5]) {\r\n                        url = response[0][5].includes('impeltechnology') ? response[0][5] + '&sessionId=' + token : response[0][5];\r\n                    }\r\n                    \r\n                    info.push(\r\n                        { 'id': response[0][0], 'fecha': fech, 'nombre': response[0][2], 'cedula': response[0][3], 'estado': response[0][4], 'resultado': url,\r\n                          'historia': response[0][6], 'audiometria': response[0][7], 'audiometria1': response[0][8], 'optometria ': response[0][9], \r\n                          'terapia': response[0][10], 'psicologia': response[0][11], 'laboratorio': response[0][12], 'pruebas': response[0][13],\r\n                     });\r\n\r\n                    \r\n                    this.product = info;\r\n                    //this.onProductChanged.next(this.product);\r\n                   \r\n                    resolve( this.getAppointment(this.product));\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    getAppointment(product): Promise<any> {\r\n        const token = this._loginService.getToken();\r\n        let query = encodeURI(`SELECT Fecha_Cita,Estado_Txt,Perfil_Txt,IPSTxt,Examenes_a_Realizar FROM Consulta where id=${this.routeParams.handle}`); // and Fecha_Resultado > yyyy - mm - dd(1) and Fecha_Resultado < yyyy - mm - dd(2)`);\r\n        let url = `${environment.url}rest/api/selectQuery?maxRows=1000&query=` + query + \"&sessionId=\" + token + \"&output=json&maxRows=1\";\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get(url)\r\n                .subscribe((response: any) => {\r\n                    const result = new Array<any>();\r\n                    if (response.length > 0){\r\n                        for (let i = 0; i < response.length; i++) {\r\n                            let fech = moment(response[i][0]).format('ll');\r\n                            result.push({ 'startDate': fech, 'estadoCita': response[i][1], 'examenes': response[i][4], 'ips': response[i][3], 'perfil': response[i][2]});\r\n                        }\r\n                    }else{\r\n                        result.push({ 'startDate': '', 'estado': '', 'ips': '', 'perfil': '' });\r\n                    }\r\n                    this.appoiment = result;\r\n                    \r\n                    //this.onProductChanged.next(this.appoiment);\r\n                    resolve(this.getPatient(product, this.appoiment));\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    getPatient(product, appoiment): Promise<any> {\r\n        const token = this._loginService.getToken();\r\n        let query = encodeURI(`SELECT id, Nombre, Apellido, Numero_Documento, email, Celular, Direccion, Cargo FROM Candidato where id = ${this.routeParams.id}`); // and Fecha_Resultado > yyyy - mm - dd(1) and Fecha_Resultado < yyyy - mm - dd(2)`);\r\n        let url = `${environment.url}rest/api/selectQuery?maxRows=1000&query=` + query + \"&sessionId=\" + token + \"&output=json&maxRows=1\";\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get(url)\r\n                .subscribe((response: any) => {\r\n                    const result = new Array<any>();\r\n                    for (let i = 0; i < response.length; i++) {\r\n                        result.push({ 'id': response[i][0], 'nombre': response[i][1], 'apellido': response[i][2], 'cedula': response[i][3], 'email': response[i][4], 'celular': response[i][5], 'direccion': response[i][6], 'cargo': response[i][7] });\r\n                    }\r\n                    //let total = { 'consulta': product, 'cita': appoiment, 'perfil': result }; \r\n                    this.patient = result;\r\n                    //this.onProductChanged.next(total);\r\n                    //resolve(result);\r\n                    resolve(this.getDocuments(product, appoiment, this.patient));\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Save product\r\n     *\r\n     * @param product\r\n     * @returns {Promise<any>}\r\n     */\r\n    saveProduct(product): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.post('api/e-commerce-products/' + product.id, product)\r\n                .subscribe((response: any) => {\r\n                    resolve(response);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Add product\r\n     *\r\n     * @param product\r\n     * @returns {Promise<any>}\r\n     */\r\n    addProduct(product): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.post('api/e-commerce-products/', product)\r\n                .subscribe((response: any) => {\r\n                    resolve(response);\r\n                }, reject);\r\n        });\r\n    }\r\n}\r\n","import { Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { BehaviorSubject, fromEvent, merge, Observable, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseUtils } from '@fuse/utils';\r\n\r\nimport { EcommerceProductsService } from 'app/main/apps/e-commerce/products/products.service';\r\nimport { takeUntil } from 'rxjs/internal/operators';\r\nimport { ActivatedRoute } from '@angular/router';\r\n@Component({\r\n    selector     : 'e-commerce-products',\r\n    templateUrl  : './products.component.html',\r\n    styleUrls    : ['./products.component.scss'],\r\n    animations   : fuseAnimations,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class EcommerceProductsComponent implements OnInit\r\n{\r\n    dataSource: FilesDataSource | null;\r\n    displayedColumns = ['consulta', 'fecha', 'cedula', 'nombre', 'estado',  'resultado'];\r\n    title = \"Resultados\";\r\n    \r\n    @ViewChild(MatPaginator, {static: true})\r\n    paginator: MatPaginator;\r\n\r\n    @ViewChild(MatSort, {static: true})\r\n    sort: MatSort;\r\n\r\n    @ViewChild('filter', {static: true})\r\n    filter: ElementRef;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    constructor(\r\n        private _ecommerceProductsService: EcommerceProductsService,\r\n        private route: ActivatedRoute\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this.dataSource = new FilesDataSource(this._ecommerceProductsService, this.paginator, this.sort);\r\n\r\n        this.route.params.subscribe(params => {\r\n            this.displayedColumns = (params.type!='prog') ? ['consulta', 'fecha', 'cedula', 'nombre', 'estado',  'resultado'] : ['consulta', 'fecha', 'cedula', 'nombre', 'estado'];\r\n            this.title = (params.type == 'prog') ? 'Citas programadas' : 'Resultados';\r\n          });\r\n\r\n        fromEvent(this.filter.nativeElement, 'keyup')\r\n            .pipe(\r\n                takeUntil(this._unsubscribeAll),\r\n                debounceTime(150),\r\n                distinctUntilChanged()\r\n            )\r\n            .subscribe(() => {\r\n                if ( !this.dataSource )\r\n                {\r\n                    return;\r\n                }\r\n\r\n                this.dataSource.filter = this.filter.nativeElement.value;\r\n            });\r\n    }\r\n\r\n    downloadFile() {\r\n        let filename = 'consultas';\r\n        let data = this.dataSource.filteredData;\r\n        \r\n        let csvData = this.ConvertToCSV(data, ['id', 'fecha', 'nombre', 'cedula', 'estado', 'resultado', 'consulta', 'orden']);\r\n        console.log(csvData)\r\n        let blob = new Blob(['\\ufeff' + csvData], { type: 'text/csv;charset=utf-8;' });\r\n        let dwldLink = document.createElement(\"a\");\r\n        let url = URL.createObjectURL(blob);\r\n        let isSafariBrowser = navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\r\n        if (isSafariBrowser) {  //if Safari open in new window to save file with random filename.\r\n            dwldLink.setAttribute(\"target\", \"_blank\");\r\n        }\r\n        dwldLink.setAttribute(\"href\", url);\r\n        dwldLink.setAttribute(\"download\", filename + \".csv\");\r\n        dwldLink.style.visibility = \"hidden\";\r\n        document.body.appendChild(dwldLink);\r\n        dwldLink.click();\r\n        document.body.removeChild(dwldLink);\r\n    }\r\n\r\n    ConvertToCSV(objArray, headerList) {\r\n        let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\r\n        let str = '';\r\n        let row = 'S.No,';\r\n\r\n        for (let index in headerList) {\r\n            row += headerList[index] + ',';\r\n        }\r\n        row = row.slice(0, -1);\r\n        str += row + '\\r\\n';\r\n        for (let i = 0; i < array.length; i++) {\r\n            let line = (i + 1) + '';\r\n            for (let index in headerList) {\r\n                let head = headerList[index];\r\n\r\n                line += ',' + array[i][head];\r\n            }\r\n            str += line + '\\r\\n';\r\n        }\r\n        return str;\r\n    }\r\n}\r\n\r\nexport class FilesDataSource extends DataSource<any>\r\n{\r\n    private _filterChange = new BehaviorSubject('');\r\n    private _filteredDataChange = new BehaviorSubject('');\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {EcommerceProductsService} _ecommerceProductsService\r\n     * @param {MatPaginator} _matPaginator\r\n     * @param {MatSort} _matSort\r\n     */\r\n    constructor(\r\n        private _ecommerceProductsService: EcommerceProductsService,\r\n        private _matPaginator: MatPaginator,\r\n        private _matSort: MatSort\r\n    )\r\n    {\r\n        super();\r\n\r\n        this.filteredData = this._ecommerceProductsService.products;\r\n    }\r\n\r\n    downloadFile(){\r\n        \r\n    }\r\n\r\n    /**\r\n     * Connect function called by the table to retrieve one stream containing the data to render.\r\n     *\r\n     * @returns {Observable<any[]>}\r\n     */\r\n    connect(): Observable<any[]>\r\n    {\r\n        const displayDataChanges = [\r\n            this._ecommerceProductsService.onProductsChanged,\r\n            this._matPaginator.page,\r\n            this._filterChange,\r\n            this._matSort.sortChange\r\n        ];\r\n\r\n        return merge(...displayDataChanges)\r\n            .pipe(\r\n                map(() => {\r\n                        let data = this._ecommerceProductsService.products.slice();\r\n\r\n                        data = this.filterData(data);\r\n\r\n                        this.filteredData = [...data];\r\n\r\n                        data = this.sortData(data);\r\n\r\n                        // Grab the page's slice of data.\r\n                        const startIndex = this._matPaginator.pageIndex * this._matPaginator.pageSize;\r\n                        return data.splice(startIndex, this._matPaginator.pageSize);\r\n                    }\r\n                ));\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Accessors\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    // Filtered data\r\n    get filteredData(): any\r\n    {\r\n        return this._filteredDataChange.value;\r\n    }\r\n\r\n    set filteredData(value: any)\r\n    {\r\n        this._filteredDataChange.next(value);\r\n    }\r\n\r\n    // Filter\r\n    get filter(): string\r\n    {\r\n        return this._filterChange.value;\r\n    }\r\n\r\n    set filter(filter: string)\r\n    {\r\n        this._filterChange.next(filter);\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Filter data\r\n     *\r\n     * @param data\r\n     * @returns {any}\r\n     */\r\n    filterData(data): any\r\n    {\r\n        if ( !this.filter )\r\n        {\r\n            return data;\r\n        }\r\n        return FuseUtils.filterArrayByString(data, this.filter);\r\n    }\r\n\r\n    /**\r\n     * Sort data\r\n     *\r\n     * @param data\r\n     * @returns {any[]}\r\n     */\r\n    sortData(data): any[]\r\n    {\r\n        if ( !this._matSort.active || this._matSort.direction === '' )\r\n        {\r\n            return data;\r\n        }\r\n\r\n        return data.sort((a, b) => {\r\n            let propertyA: number | string = '';\r\n            let propertyB: number | string = '';\r\n\r\n            switch ( this._matSort.active )\r\n            {\r\n                case 'id':\r\n                    [propertyA, propertyB] = [a.id, b.id];\r\n                    break;\r\n                case 'fecha':\r\n                    [propertyA, propertyB] = [a.fecha, b.fecha];\r\n                    break;\r\n                case 'nombre':\r\n                    [propertyA, propertyB] = [a.nombre, b.nombre];\r\n                    break;\r\n                case 'cedula':\r\n                    [propertyA, propertyB] = [a.cedula, b.cedula];\r\n                    break; \r\n                case 'resultado':\r\n                    [propertyA, propertyB] = [a.resultado, b.resultado];\r\n                    break;\r\n                case 'estado':\r\n                    [propertyA, propertyB] = [a.estado, b.estado];\r\n                    break;\r\n                \r\n                case 'consulta':\r\n                    [propertyA, propertyB] = [a.consulta, b.consulta];\r\n                    break;\r\n                \r\n            }\r\n\r\n            const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n            const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n\r\n            return (valueA < valueB ? -1 : 1) * (this._matSort.direction === 'asc' ? 1 : -1);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Disconnect\r\n     */\r\n    disconnect(): void\r\n    {\r\n    }\r\n\r\n    \r\n}\r\n","<div id=\"products\" class=\"page-layout carded fullwidth inner-scroll\">\r\n\r\n    <!-- TOP BACKGROUND -->\r\n    <div class=\"top-bg accent\"></div>\r\n    <!-- / TOP BACKGROUND -->\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\">\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent\"\r\n             fxLayout=\"column\" fxLayoutAlign=\"center center\"\r\n             fxLayout.gt-sm=\"row\" fxLayoutAlign.gt-sm=\"space-between center\">\r\n\r\n            <!-- APP TITLE -->\r\n            <div class=\"logo mb-24 mb-md-0\"\r\n                 fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                <mat-icon class=\"logo-icon s-32 mr-16\" [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\r\n                    assignment\r\n                </mat-icon>\r\n                <span class=\"logo-text h1\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">\r\n                    {{title}}\r\n                </span>\r\n            </div>\r\n            <!-- / APP TITLE -->\r\n\r\n            <!-- SEARCH -->\r\n            <div class=\"search-wrapper mx-32 mx-md-0\">\r\n                <div class=\"search\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                    <mat-icon>search</mat-icon>\r\n                    <input #filter placeholder=\"Buscar resultados\">\r\n                </div>\r\n            </div>\r\n            <!-- / SEARCH -->\r\n\r\n            <!--ADD BUTTON-->\r\n            <button mat-icon-button\r\n                    (click)=\"downloadFile()\"\r\n                    class=\"toggle-sidebar-folded mr-8\">\r\n                <mat-icon>cloud_download</mat-icon>\r\n            </button>\r\n             <!--/ ADD BUTTON -->\r\n\r\n        </div>\r\n        <!-- / HEADER -->\r\n\r\n\r\n        <!-- CONTENT CARD -->\r\n        <div class=\"content-card\">\r\n            <mat-table class=\"products-table\"\r\n                       #table [dataSource]=\"dataSource\"\r\n                       matSort\r\n                       [@animateStagger]=\"{value:'50'}\"\r\n                       fusePerfectScrollbar>\r\n\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>ID</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let product\">\r\n                        <a class=\"nav-link\" href=\"/apps/e-commerce/products/{{product.resultado}}/{{product.consulta}}\"\r\n                            target=\"_blank\">\r\n                            <span>{{product.orden}}</span>\r\n                        </a>\r\n                    </mat-cell>\r\n                </ng-container>\r\n\r\n                <!-- consulta -->\r\n                <ng-container matColumnDef=\"consulta\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header># Consulta</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let product\">\r\n                        <a class=\"nav-link\"\r\n                            [routerLink]=\"'/apps/e-commerce/products/'+product.id+'/'+product.consulta\">\r\n                            <span>{{product.orden}}</span>\r\n                        </a>\r\n                    </mat-cell>\r\n                </ng-container>\r\n\r\n                <!-- FECHA Column -->\r\n                <ng-container matColumnDef=\"fecha\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Fecha</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let product\">\r\n                        <p class=\"text\">{{product.fecha}}</p>\r\n                    </mat-cell>\r\n                </ng-container>\r\n\r\n                 <!-- cedula Column -->\r\n                 <ng-container matColumnDef=\"cedula\">\r\n                     <mat-header-cell *matHeaderCellDef mat-sort-header>Documento</mat-header-cell>\r\n                     <mat-cell *matCellDef=\"let product\">\r\n                         <p class=\"category text-truncate\">\r\n                             {{product.cedula}}\r\n                         </p>\r\n                     </mat-cell>\r\n                 </ng-container>\r\n\r\n                <!-- Active Column -->\r\n                <ng-container matColumnDef=\"estado\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Estado</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let product\">\r\n                        \r\n        <mat-icon *ngIf=\"product.estado != 'Cumplida'\" class=\"active-icon yellow-500 s-16\">check</mat-icon>\r\n                        <p class=\"category text-truncate\">\r\n                            {{product.estado}}\r\n                        </p>\r\n                    </mat-cell>\r\n                </ng-container>\r\n\r\n                <!-- Name Column -->\r\n                <ng-container matColumnDef=\"nombre\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header fxShow.gt-md>Paciente</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let product\" fxShow.gt-md>\r\n                        <p class=\"text\">{{product.nombre}}</p>\r\n                    </mat-cell>\r\n                </ng-container>\r\n\r\n                <!-- Quantity Column -->\r\n                <ng-container matColumnDef=\"resultado\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Resultado</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let product\">\r\n\r\n                        <span class=\"quantity-indicator text-truncate\"\r\n                            [ngClass]=\"{'red-500':product.quantity <= 5, 'amber-500':product.quantity > 5 && product.quantity <= 25,'green-600':product.quantity > 25}\">\r\n                        </span>\r\n                        \r\n                        <a *ngIf=\"product.estado == 'Cumplida'\" class=\"nav-link\" href=\"{{product.resultado}}\"\r\n                            target=\"_blank\">\r\n                            <span>Ver</span>\r\n                        </a>\r\n                        \r\n                    </mat-cell>\r\n                </ng-container>\r\n\r\n\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></mat-header-row>\r\n\r\n                <mat-row *matRowDef=\"let product; columns: displayedColumns;\"\r\n                         class=\"product\"\r\n                         matRipple\r\n                         >\r\n                </mat-row>\r\n\r\n            </mat-table>\r\n\r\n            <mat-paginator #paginator\r\n                           [length]=\"dataSource.filteredData.length\"\r\n                           [pageIndex]=\"0\"\r\n                           [pageSize]=\"10\"\r\n                           [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n            </mat-paginator>\r\n\r\n        </div>\r\n        <!-- / CONTENT CARD -->\r\n    </div>\r\n    <!-- / CENTER -->\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { environment } from 'environments/environment';\r\nimport { LoginService } from 'app/main/pages/authentication/login-2/login.service';\r\nimport * as moment from 'moment';\r\n\r\n@Injectable()\r\nexport class EcommerceProductsService implements Resolve<any>\r\n{\r\n    products: any[];\r\n    onProductsChanged: BehaviorSubject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {HttpClient} _httpClient\r\n     */\r\n    constructor(\r\n        private _httpClient: HttpClient,\r\n        private _loginService: LoginService,\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.onProductsChanged = new BehaviorSubject({});\r\n        moment.locale('es')\r\n    }\r\n\r\n    /**\r\n     * Resolver\r\n     *\r\n     * @param {ActivatedRouteSnapshot} route\r\n     * @param {RouterStateSnapshot} state\r\n     * @returns {Observable<any> | Promise<any> | any}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\r\n    {\r\n        const st = route.params.type;\r\n        return new Promise((resolve, reject) => {\r\n            Promise.all([\r\n                this.getSinConcepto(st)\r\n            ]).then(\r\n                () => {\r\n                    resolve(null);\r\n                },\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    getSinConcepto(st): Promise<any>\r\n    {\r\n        const token = this._loginService.getToken();\r\n        let query = encodeURI(`SELECT id,Imagen_Sin_Concepto_URL from parametro`); // and Fecha_Resultado > yyyy - mm - dd(1) and Fecha_Resultado < yyyy - mm - dd(2)`);\r\n        let url = `${environment.url}rest/api/selectQuery?maxRows=10000&query=` + query + \"&sessionId=\" + token + \"&output=json\";\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get(url)//'api/e-commerce-products')\r\n                .subscribe((response: any) => {\r\n                    resolve(this.getProducts(st, response[0][1]));\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get products\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getProducts(st, sinConcepto): Promise<any>\r\n    {\r\n        //'Cancelado' OR 'No asistío' OR 'Agendada'\r\n        const status = (st == 'prog') ? \"Estado_Txt LIKE '%Agendada%'\" : \"(Estado_Txt LIKE '%Creado%' OR Estado_Txt LIKE '%Cumplida%' OR Estado_Txt LIKE '%Reprogramada%')\";\r\n        //const aEnabled = (st == 'prog') ? false : true;\r\n        const token = this._loginService.getToken();\r\n        const idCustomer = this._loginService.getId();\r\n        let query = encodeURI(`SELECT R15590447,Fecha_Cita,Nombre_Paciente,Cedula_Paciente,Estado_Txt,ResultadoPDF,id,name,Sin_Concepto,status FROM Consulta where R15590415 = ${idCustomer} and ${status} order by id desc`); // and Fecha_Resultado > yyyy - mm - dd(1) and Fecha_Resultado < yyyy - mm - dd(2)`);\r\n        let url = `${environment.url}rest/api/selectQuery?maxRows=10000&query=` + query + \"&sessionId=\" + token + \"&output=json\";\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get(url)//'api/e-commerce-products')\r\n                .subscribe((response: any) => {\r\n                    const result = new Array<any>();\r\n                    for (let i = 0; i < response.length; i++) {\r\n                        let fech = moment(response[i][1]).format('LLLL');\r\n                        let show = (response[i][8] == null) ? 0 : response[i][8];\r\n                        let urlDoc = (response[i][5] && response[i][5].toString().includes('amazon')) ? response[i][5] : response[i][5]  + \"&sessionId=\" + token;\r\n                        let resultado = (show == 0) ? urlDoc : sinConcepto;\r\n                        result.push({ 'id': response[i][0], 'fecha': fech, 'nombre': response[i][2], 'cedula': response[i][3], 'estado': response[i][4], \r\n                        'resultado': resultado, 'consulta': response[i][6], 'orden': response[i][7] });\r\n                    }\r\n                    this.products = result;\r\n                    this.onProductsChanged.next(this.products);\r\n                    resolve(result);\r\n                }, reject);\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * 'id'              : '1',\r\n            'name'            : 'Andres Sanchez Ruiz',\r\n            'handle'          : 'a-walk-amongst-friends-canvas-print',\r\n            'description'     : 'Officia amet eiusmod eu sunt tempor voluptate laboris velit nisi amet enim proident et. Consequat laborum non eiusmod cillum eu exercitation. Qui adipisicing est fugiat eiusmod esse. Sint aliqua cupidatat pariatur mollit ad est proident reprehenderit. Eiusmod adipisicing laborum incididunt sit aliqua ullamco.',\r\n            'categories'      : [\r\n                '105478945',\r\n                'Nature'\r\n            ],\r\n            'tags'            : [\r\n                'canvas-print',\r\n                'nature'\r\n            ],\r\n * \r\n */"],"sourceRoot":"webpack:///"}