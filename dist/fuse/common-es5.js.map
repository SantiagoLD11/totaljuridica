{"version":3,"sources":["webpack:///src/app/main/apps/file-manager/file-manager.service.ts"],"names":["FileManagerService","_httpClient","onFilesChanged","onFileSelected","route","state","Promise","resolve","reject","all","getFiles","then","files","get","subscribe","response","next"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaA,kB;;;AAKT;;;;;AAKA,kCACYC,WADZ,EACmC;AAAA;;AAAvB,aAAAA,WAAA,GAAAA,WAAA,CAAuB,CAG/B;;AACA,aAAKC,cAAL,GAAsB,IAAI,oDAAJ,CAAoB,EAApB,CAAtB;AACA,aAAKC,cAAL,GAAsB,IAAI,oDAAJ,CAAoB,EAApB,CAAtB;AACH;AAED;;;;;;;;;;;gCAOQC,K,EAA+BC,K,EAA0B;AAAA;;AAE7D,iBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC;AACAF,mBAAO,CAACG,GAAR,CAAY,CACR,KAAI,CAACC,QAAL,EADQ,CAAZ,EAEGC,IAFH,CAGI,gBAAa;AAAA;AAAA,kBAAXC,KAAW;;AACTL,qBAAO;AACV,aALL,EAMIC,MANJ;AAQH,WAVM,CAAP;AAWH;AAED;;;;;;;;mCAKQ;AAAA;;AAEJ;AACA,iBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,kBAAI,CAACP,WAAL,CAAiBY,GAAjB,CAAqB,kBAArB,EACKC,SADL,CACe,UAACC,QAAD,EAAmB;AAC1B,oBAAI,CAACb,cAAL,CAAoBc,IAApB,CAAyBD,QAAzB;;AACA,oBAAI,CAACZ,cAAL,CAAoBa,IAApB,CAAyBD,QAAQ,CAAC,CAAD,CAAjC;;AACAR,qBAAO,CAACQ,QAAD,CAAP;AACH,aALL,EAKOP,MALP;AAMH,WAPM,CAAP;AAQH;;;;;;;uBAzDQR,kB,EAAkB,uH;AAAA,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB;;;;;sEAAlBA,kB,EAAkB;cAD9B;AAC8B,Q","file":"common-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class FileManagerService implements Resolve<any>\r\n{\r\n    onFilesChanged: BehaviorSubject<any>;\r\n    onFileSelected: BehaviorSubject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {HttpClient} _httpClient\r\n     */\r\n    constructor(\r\n        private _httpClient: HttpClient\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.onFilesChanged = new BehaviorSubject({});\r\n        this.onFileSelected = new BehaviorSubject({});\r\n    }\r\n\r\n    /**\r\n     * Resolver\r\n     *\r\n     * @param {ActivatedRouteSnapshot} route\r\n     * @param {RouterStateSnapshot} state\r\n     * @returns {Observable<any> | Promise<any> | any}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            //console.log('ingresa ....');\r\n            Promise.all([\r\n                this.getFiles()\r\n            ]).then(\r\n                ([files]) => {\r\n                    resolve();\r\n                },\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get files\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getFiles(): Promise<any>\r\n    {\r\n        //console.log('ingresa !!!');\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/file-manager')\r\n                .subscribe((response: any) => {\r\n                    this.onFilesChanged.next(response);\r\n                    this.onFileSelected.next(response[0]);\r\n                    resolve(response);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n}\r\n"]}