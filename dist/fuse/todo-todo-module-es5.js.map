{"version":3,"sources":["webpack:///src/app/main/apps/todo/sidebars/main/main-sidebar.component.ts","webpack:///src/app/main/apps/todo/sidebars/main/main-sidebar.component.html","webpack:///src/app/main/apps/todo/todo-details/todo-details.component.ts","webpack:///src/app/main/apps/todo/todo-details/todo-details.component.html","webpack:///src/app/main/apps/todo/todo-list/todo-list-item/todo-list-item.component.ts","webpack:///src/app/main/apps/todo/todo-list/todo-list-item/todo-list-item.component.html","webpack:///src/app/main/apps/todo/todo-list/todo-list.component.ts","webpack:///src/app/main/apps/todo/todo-list/todo-list.component.html","webpack:///src/app/main/apps/todo/todo.component.ts","webpack:///src/app/main/apps/todo/todo.component.html","webpack:///src/app/main/apps/todo/todo.model.ts","webpack:///src/app/main/apps/todo/todo.module.ts","webpack:///src/app/main/apps/todo/todo.service.ts"],"names":["TodoMainSidebarComponent","_todoService","_router","accounts","creapond","withinpixels","selectedAccount","_unsubscribeAll","onFiltersChanged","pipe","subscribe","filters","onTagsChanged","tags","next","complete","navigate","then","setTimeout","onNewTodoClicked","newTodo","selector","templateUrl","styleUrls","encapsulation","None","animations","TodoDetailsComponent","_formBuilder","onCurrentTodoChanged","todo","formType","todoForm","createTodoForm","valueChanges","data","updateTodo","labels","id","generateGUID","focusTitleField","titleInputField","nativeElement","focus","group","title","notes","startDate","dueDate","completed","starred","important","deleted","event","stopPropagation","toggleStar","toggleImportant","toggleCompleted","toggleDeleted","tagId","toggleTagOnTodo","hasTag","getRawValue","TodoListItemComponent","_activatedRoute","snapshot","url","path","moveDisabled","onSelectedTodosChanged","selectedTodos","selected","length","toggleSelectedTodo","onSelectedChange","$event","TodoListComponent","_location","onTodosChanged","todos","currentTodo","tagHandle","params","filterHandle","go","todoId","setCurrentTodo","ev","onDrop","TodoComponent","_fuseSidebarService","searchInput","hasSelectedTodos","isIndeterminate","folders","searchText","onSearchTextChanged","toggleSelectAll","filterParameter","filterValue","selectTodos","deselectTodos","toggleTagOnSelectedTodos","name","getSidebar","toggleOpen","toggleSidebar","Todo","routes","component","resolve","redirectTo","TodoModule","forChild","declarations","imports","providers","TodoService","_httpClient","route","state","routeParams","Promise","reject","all","getFilters","getTags","getTodos","get","response","getTodosByTag","getTodosByFilter","getTodosByParams","handle","map","filterArrayByString","param","index","indexOf","splice","push","find","undefined","filter","post"],"mappings":"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","file":"todo-todo-module-es5.js","sourcesContent":["import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { TodoService } from 'app/main/apps/todo/todo.service';\r\n\r\n@Component({\r\n    selector     : 'todo-main-sidebar',\r\n    templateUrl  : './main-sidebar.component.html',\r\n    styleUrls    : ['./main-sidebar.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class TodoMainSidebarComponent implements OnInit, OnDestroy\r\n{\r\n    folders: any[];\r\n    filters: any[];\r\n    tags: any[];\r\n    accounts: object;\r\n    selectedAccount: string;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {TodoService} _todoService\r\n     * @param {Router} _router\r\n     */\r\n    constructor(\r\n        private _todoService: TodoService,\r\n        private _router: Router\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.accounts = {\r\n            creapond    : 'johndoe@creapond.com',\r\n            withinpixels: 'johndoe@withinpixels.com'\r\n        };\r\n        this.selectedAccount = 'creapond';\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._todoService.onFiltersChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(filters => {\r\n                this.filters = filters;\r\n            });\r\n\r\n        this._todoService.onTagsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(tags => {\r\n                this.tags = tags;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * New todo\r\n     */\r\n    newTodo(): void\r\n    {\r\n        this._router.navigate(['/apps/todo/all']).then(() => {\r\n            setTimeout(() => {\r\n                this._todoService.onNewTodoClicked.next('');\r\n            });\r\n        });\r\n    }\r\n}\r\n","<!-- SIDEBAR HEADER -->\r\n<div fxLayout=\"column\" fxLayoutAlign=\"space-between start\"\r\n     class=\"header accent p-24 pb-4\">\r\n    <div class=\"logo\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n        <mat-icon class=\"logo-icon s-32\" [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\r\n            check_box\r\n        </mat-icon>\r\n        <span class=\"logo-text\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">To-Do</span>\r\n    </div>\r\n\r\n    <div class=\"account\" fxLayout=\"column\" [@animate]=\"{value:'*',params:{delay:'300ms'}}\">\r\n        <div class=\"title\">John Doe</div>\r\n        <mat-form-field floatLabel=\"never\">\r\n            <mat-select class=\"account-selection\" placeholder=\"Todo Selection\"\r\n                        [ngModel]=\"selectedAccount\">\r\n                <mat-option *ngFor=\"let account of (accounts | keys)\" [value]=\"account.key\">\r\n                    {{account.value}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n</div>\r\n<!-- / SIDEBAR HEADER -->\r\n\r\n<!-- SIDEBAR CONTENT -->\r\n<div class=\"content\" fusePerfectScrollbar [@animate]=\"{value:'*',params:{y:'50px'}}\">\r\n\r\n    <div class=\"p-24\">\r\n        <button mat-raised-button\r\n                class=\"mat-accent add-todo-button w-100-p\"\r\n                (click)=\"newTodo()\"\r\n                aria-label=\"ADD TASK\">\r\n            ADD TASK\r\n        </button>\r\n    </div>\r\n\r\n    <div class=\"nav material2\">\r\n\r\n        <div class=\"nav-item\">\r\n            <a class=\"nav-link\" matRipple [routerLink]=\"'/apps/todo/all'\"\r\n               [routerLinkActive]=\"['active', 'accent']\">\r\n                <mat-icon class=\"nav-link-icon\">view_headline</mat-icon>\r\n                <span>All</span>\r\n            </a>\r\n        </div>\r\n\r\n        <div class=\"nav-subheader\">FILTERS</div>\r\n\r\n        <div class=\"nav-item\" *ngFor=\"let filter of filters\">\r\n            <a class=\"nav-link\" matRipple [routerLink]=\"'/apps/todo/filter/' + filter.handle\"\r\n               [routerLinkActive]=\"['active', 'accent']\">\r\n                <mat-icon class=\"nav-link-icon\" *ngIf=\"filter.icon\">{{filter.icon}}</mat-icon>\r\n                <span>{{filter.title}}</span>\r\n            </a>\r\n        </div>\r\n\r\n        <div class=\"nav-subheader\">TAGS</div>\r\n\r\n        <div class=\"nav-item\" *ngFor=\"let tag of tags\">\r\n            <a class=\"nav-link\" matRipple [routerLink]=\"'/apps/todo/tag/' + tag.handle\"\r\n               [routerLinkActive]=\"['active', 'accent']\">\r\n                <mat-icon class=\"nav-link-icon\" [ngStyle]=\"{'color':tag.color}\">label</mat-icon>\r\n                <span>{{tag.title}}</span>\r\n            </a>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n<!-- / SIDEBAR CONTENT -->\r\n","import { Component, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\r\n\r\nimport { FuseUtils } from '@fuse/utils';\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { Todo } from 'app/main/apps/todo/todo.model';\r\nimport { TodoService } from 'app/main/apps/todo/todo.service';\r\n\r\n@Component({\r\n    selector     : 'todo-details',\r\n    templateUrl  : './todo-details.component.html',\r\n    styleUrls    : ['./todo-details.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class TodoDetailsComponent implements OnInit, OnDestroy\r\n{\r\n    todo: Todo;\r\n    tags: any[];\r\n    formType: string;\r\n    todoForm: FormGroup;\r\n\r\n    @ViewChild('titleInput')\r\n    titleInputField;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {TodoService} _todoService\r\n     * @param {FormBuilder} _formBuilder\r\n     */\r\n    constructor(\r\n        private _todoService: TodoService,\r\n        private _formBuilder: FormBuilder\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Subscribe to update the current todo\r\n        this._todoService.onCurrentTodoChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(([todo, formType]) => {\r\n\r\n                if ( todo && formType === 'edit' )\r\n                {\r\n                    this.formType = 'edit';\r\n                    this.todo = todo;\r\n                    this.todoForm = this.createTodoForm();\r\n\r\n                    this.todoForm.valueChanges\r\n                        .pipe(\r\n                            takeUntil(this._unsubscribeAll),\r\n                            debounceTime(500),\r\n                            distinctUntilChanged()\r\n                        )\r\n                        .subscribe(data => {\r\n                            this._todoService.updateTodo(data);\r\n                        });\r\n                }\r\n            });\r\n\r\n        // Subscribe to update on tag change\r\n        this._todoService.onTagsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(labels => {\r\n                this.tags = labels;\r\n            });\r\n\r\n        // Subscribe to update on tag change\r\n        this._todoService.onNewTodoClicked\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(() => {\r\n                this.todo = new Todo({});\r\n                this.todo.id = FuseUtils.generateGUID();\r\n                this.formType = 'new';\r\n                this.todoForm = this.createTodoForm();\r\n                this.focusTitleField();\r\n                this._todoService.onCurrentTodoChanged.next([this.todo, 'new']);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Focus title field\r\n     */\r\n    focusTitleField(): void\r\n    {\r\n        setTimeout(() => {\r\n            this.titleInputField.nativeElement.focus();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create todo form\r\n     *\r\n     * @returns {FormGroup}\r\n     */\r\n    createTodoForm(): FormGroup\r\n    {\r\n        return this._formBuilder.group({\r\n            id       : [this.todo.id],\r\n            title    : [this.todo.title],\r\n            notes    : [this.todo.notes],\r\n            startDate: [this.todo.startDate],\r\n            dueDate  : [this.todo.dueDate],\r\n            completed: [this.todo.completed],\r\n            starred  : [this.todo.starred],\r\n            important: [this.todo.important],\r\n            deleted  : [this.todo.deleted],\r\n            tags     : [this.todo.tags]\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Toggle star\r\n     *\r\n     * @param event\r\n     */\r\n    toggleStar(event): void\r\n    {\r\n        event.stopPropagation();\r\n        this.todo.toggleStar();\r\n        this._todoService.updateTodo(this.todo);\r\n    }\r\n\r\n    /**\r\n     * Toggle important\r\n     *\r\n     * @param event\r\n     */\r\n    toggleImportant(event): void\r\n    {\r\n        event.stopPropagation();\r\n        this.todo.toggleImportant();\r\n        this._todoService.updateTodo(this.todo);\r\n    }\r\n\r\n    /**\r\n     * Toggle Completed\r\n     *\r\n     * @param event\r\n     */\r\n    toggleCompleted(event): void\r\n    {\r\n        event.stopPropagation();\r\n        this.todo.toggleCompleted();\r\n        this._todoService.updateTodo(this.todo);\r\n    }\r\n\r\n    /**\r\n     * Toggle Deleted\r\n     *\r\n     * @param event\r\n     */\r\n    toggleDeleted(event): void\r\n    {\r\n        event.stopPropagation();\r\n        this.todo.toggleDeleted();\r\n        this._todoService.updateTodo(this.todo);\r\n    }\r\n\r\n    /**\r\n     * Toggle tag on todo\r\n     *\r\n     * @param tagId\r\n     */\r\n    toggleTagOnTodo(tagId): void\r\n    {\r\n        this._todoService.toggleTagOnTodo(tagId, this.todo);\r\n    }\r\n\r\n    /**\r\n     * Has tag?\r\n     *\r\n     * @param tagId\r\n     * @returns {any}\r\n     */\r\n    hasTag(tagId): any\r\n    {\r\n        return this._todoService.hasTag(tagId, this.todo);\r\n    }\r\n\r\n    /**\r\n     * Add todo\r\n     */\r\n    addTodo(): void\r\n    {\r\n        this._todoService.updateTodo(this.todoForm.getRawValue());\r\n    }\r\n}\r\n","<div *ngIf=\"!todo\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFlex>\r\n    <mat-icon class=\"s-120 mb-12 select-todo-icon hint-text\"\r\n              [@animate]=\"{value:'*',params:{delay:'300ms',scale:'0.2'}}\">check_box\r\n    </mat-icon>\r\n    <span class=\"hint-text mat-h1 select-todo-text\" [@animate]=\"{value:'*',params:{delay:'400ms'}}\">\r\n        Select a todo\r\n    </span>\r\n</div>\r\n\r\n<div *ngIf=\"todo\">\r\n\r\n    <div class=\"todo-header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n\r\n        <button mat-button class=\"toggle-complete-button\" (click)=\"toggleCompleted($event)\"\r\n                aria-label=\"Toggle completed\" fxFlex=\"0 1 auto\">\r\n            <mat-icon *ngIf=\"todo.completed\">check_box</mat-icon>\r\n            <mat-icon *ngIf=\"!todo.completed\">check_box_outline_blank</mat-icon>\r\n            <span class=\"ml-8\">Mark as Done</span>\r\n        </button>\r\n\r\n        <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n            <button mat-icon-button (click)=\"toggleImportant($event)\" aria-label=\"Toggle important\">\r\n                <mat-icon class=\"red-fg\" *ngIf=\"todo.important\">error</mat-icon>\r\n                <mat-icon class=\"secondary-text\" *ngIf=\"!todo.important\">error_outline</mat-icon>\r\n            </button>\r\n\r\n            <button mat-icon-button (click)=\"toggleStar($event)\" aria-label=\"Toggle star\">\r\n                <mat-icon class=\"amber-fg\" *ngIf=\"todo.starred\">star</mat-icon>\r\n                <mat-icon class=\"secondary-text\" *ngIf=\"!todo.starred\">star_border</mat-icon>\r\n            </button>\r\n\r\n            <button mat-icon-button [matMenuTriggerFor]=\"labelMenu\" fxFlex=\"0 1 auto\">\r\n                <mat-icon class=\"secondary-text\">label</mat-icon>\r\n            </button>\r\n\r\n            <mat-menu #labelMenu=\"matMenu\">\r\n                <button mat-menu-item *ngFor=\"let tag of tags\"\r\n                        (click)=\"toggleTagOnTodo(tag.id)\">\r\n                    <mat-icon *ngIf=\"hasTag(tag.id)\">check</mat-icon>\r\n                    <mat-icon *ngIf=\"!hasTag(tag.id)\"></mat-icon>\r\n                    <span>{{tag.title}}</span>\r\n                </button>\r\n            </mat-menu>\r\n\r\n            <button mat-icon-button (click)=\"toggleDeleted($event)\" aria-label=\"Toggle delete\">\r\n                <mat-icon class=\"secondary-text\" *ngIf=\"todo.deleted\">delete_forever</mat-icon>\r\n                <mat-icon class=\"secondary-text\" *ngIf=\"!todo.deleted\">delete</mat-icon>\r\n            </button>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"todo-content\">\r\n\r\n        <form [formGroup]=\"todoForm\" (submit)=\"addTodo()\">\r\n\r\n            <div class=\"tags mb-24\" fxFlexFill fxLayout=\"row wrap\">\r\n                <div class=\"tag\" fxLayout=\"row\" fxLayoutAlign=\"start center\" *ngFor=\"let tagId of todo.tags\">\r\n                    <div class=\"tag-color\" [ngStyle]=\"{'background-color': tags | getById:tagId:'color'}\"></div>\r\n                    <div class=\"tag-label\">{{tags | getById:tagId:'title'}}</div>\r\n                </div>\r\n            </div>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"title mt-8\" fxFill>\r\n                <mat-label>Title</mat-label>\r\n                <textarea matInput\r\n                          #titleInput\r\n                          name=\"title\"\r\n                          formControlName=\"title\"\r\n                          required>\r\n                </textarea>\r\n            </mat-form-field>\r\n\r\n            <div class=\"dates\" fxFlexFill fxLayout=\"column\" fxLayout.gt-xs=\"row\">\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"mr-sm-12\" fxFlex>\r\n                    <mat-label>Start Date</mat-label>\r\n                    <input matInput [matDatepicker]=\"startDatePicker\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #startDatePicker></mat-datepicker>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"ml-sm-12\" fxFlex>\r\n                    <mat-label>Due Date</mat-label>\r\n                    <input matInput [matDatepicker]=\"dueDatePicker\" placeholder=\"Due Date\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"dueDatePicker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #dueDatePicker></mat-datepicker>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n\r\n            <mat-form-field appearance=\"outline\" fxFill>\r\n                <mat-label>Notes</mat-label>\r\n                <textarea matInput #notes\r\n                          name=\"notes\"\r\n                          formControlName=\"notes\"\r\n                          maxlength=\"500\">\r\n                </textarea>\r\n                <mat-hint align=\"end\">{{notes.value.length}} / 500</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <button *ngIf=\"formType === 'new'\"\r\n                    mat-raised-button color=\"accent\"\r\n                    [disabled]=\"todoForm.invalid\">\r\n                SAVE\r\n            </button>\r\n        </form>\r\n\r\n    </div>\r\n</div>\r\n","import { Component, HostBinding, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { Todo } from 'app/main/apps/todo/todo.model';\r\nimport { TodoService } from 'app/main/apps/todo/todo.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector     : 'todo-list-item',\r\n    templateUrl  : './todo-list-item.component.html',\r\n    styleUrls    : ['./todo-list-item.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TodoListItemComponent implements OnInit, OnDestroy\r\n{\r\n    tags: any[];\r\n\r\n    @Input()\r\n    todo: Todo;\r\n\r\n    @HostBinding('class.selected')\r\n    selected: boolean;\r\n\r\n    @HostBinding('class.completed')\r\n    completed: boolean;\r\n\r\n    @HostBinding('class.move-disabled')\r\n    moveDisabled: boolean;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {TodoService} _todoService\r\n     * @param {ActivatedRoute} _activatedRoute\r\n     */\r\n    constructor(\r\n        private _todoService: TodoService,\r\n        private _activatedRoute: ActivatedRoute\r\n    )\r\n    {\r\n        // Disable move if path is not /all\r\n        if ( _activatedRoute.snapshot.url[0].path !== 'all' )\r\n        {\r\n            this.moveDisabled = true;\r\n        }\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Set the initial values\r\n        this.todo = new Todo(this.todo);\r\n        this.completed = this.todo.completed;\r\n\r\n        // Subscribe to update on selected todo change\r\n        this._todoService.onSelectedTodosChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(selectedTodos => {\r\n                this.selected = false;\r\n\r\n                if ( selectedTodos.length > 0 )\r\n                {\r\n                    for ( const todo of selectedTodos )\r\n                    {\r\n                        if ( todo.id === this.todo.id )\r\n                        {\r\n                            this.selected = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n        // Subscribe to update on tag change\r\n        this._todoService.onTagsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(tags => {\r\n                this.tags = tags;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On selected change\r\n     */\r\n    onSelectedChange(): void\r\n    {\r\n        this._todoService.toggleSelectedTodo(this.todo.id);\r\n    }\r\n\r\n    /**\r\n     * Toggle star\r\n     */\r\n    toggleStar(event): void\r\n    {\r\n        event.stopPropagation();\r\n\r\n        this.todo.toggleStar();\r\n        this._todoService.updateTodo(this.todo);\r\n    }\r\n\r\n    /**\r\n     * Toggle Important\r\n     */\r\n    toggleImportant(event): void\r\n    {\r\n        event.stopPropagation();\r\n\r\n        this.todo.toggleImportant();\r\n        this._todoService.updateTodo(this.todo);\r\n    }\r\n\r\n    /**\r\n     * Toggle Completed\r\n     */\r\n    toggleCompleted(event): void\r\n    {\r\n        event.stopPropagation();\r\n\r\n        this.todo.toggleCompleted();\r\n        this._todoService.updateTodo(this.todo);\r\n    }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n    <mat-icon class=\"handle mr-16\" ngxDragHandle fxFlex=\"0 1 auto\" fxHide.xs>\r\n        drag_handle\r\n    </mat-icon>\r\n\r\n    <mat-checkbox [(ngModel)]=\"selected\" (ngModelChange)=\"onSelectedChange()\"\r\n                  class=\"mr-16\" fxFlex=\"0 1 auto\" (click)=\"$event.stopPropagation()\">\r\n    </mat-checkbox>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFlex>\r\n\r\n        <div class=\"info\" fxFlex fxFlexLayout=\"column\">\r\n\r\n            <div class=\"title\">\r\n                {{todo.title}}\r\n            </div>\r\n\r\n            <div class=\"notes\">\r\n                {{todo.notes}}\r\n            </div>\r\n\r\n            <div class=\"tags\" fxLayout=\"row wrap\" fxLayoutAlign=\"start center\">\r\n\r\n                <div class=\"tag\" fxLayout=\"row\" fxLayoutAlign=\"start center\" *ngFor=\"let tagId of todo.tags\">\r\n                    <div class=\"tag-color\" [ngStyle]=\"{'background-color': tags | getById:tagId:'color'}\"></div>\r\n                    <div class=\"tag-label\">{{tags | getById:tagId:'title'}}</div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n            <button mat-icon-button (click)=\"toggleImportant($event)\"\r\n                    aria-label=\"Toggle important\" fxHide.xs>\r\n                <mat-icon class=\"red-fg\" *ngIf=\"todo.important\">error</mat-icon>\r\n                <mat-icon class=\"secondary-text\" *ngIf=\"!todo.important\">error_outline</mat-icon>\r\n            </button>\r\n\r\n            <button mat-icon-button (click)=\"toggleStar($event)\"\r\n                    aria-label=\"Toggle star\" fxHide.xs>\r\n                <mat-icon class=\"amber-fg\" *ngIf=\"todo.starred\">star</mat-icon>\r\n                <mat-icon class=\"secondary-text\" *ngIf=\"!todo.starred\">star_border</mat-icon>\r\n            </button>\r\n\r\n            <button mat-icon-button [matMenuTriggerFor]=\"moreMenu\" aria-label=\"More\" (click)=\"$event.stopPropagation()\"\r\n                    fxHide.xs>\r\n                <mat-icon class=\"secondary-text\">more_vert</mat-icon>\r\n            </button>\r\n\r\n            <mat-menu #moreMenu=\"matMenu\">\r\n                <button mat-menu-item aria-label=\"toggle done\" (click)=\"toggleCompleted($event)\">\r\n                    <ng-container *ngIf=\"todo.completed\">\r\n                        <mat-icon>check_box</mat-icon>\r\n                        <span>Mark as undone</span>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"!todo.completed\">\r\n                        <mat-icon>check_box_outline_blank</mat-icon>\r\n                        <span>Mark as done</span>\r\n                    </ng-container>\r\n                </button>\r\n\r\n                <button mat-menu-item aria-label=\"toggle important\" (click)=\"toggleImportant($event)\">\r\n                    <ng-container *ngIf=\"todo.important\">\r\n                        <mat-icon>error</mat-icon>\r\n                        <span>Remove important</span>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"!todo.important\">\r\n                        <mat-icon>error_outline</mat-icon>\r\n                        <span>Mark as important</span>\r\n                    </ng-container>\r\n                </button>\r\n\r\n                <button mat-menu-item aria-label=\"toggle star\" (click)=\"toggleStar($event)\">\r\n                    <ng-container *ngIf=\"todo.starred\">\r\n                        <mat-icon>star</mat-icon>\r\n                        <span>Remove star</span>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"!todo.starred\">\r\n                        <mat-icon>star_border</mat-icon>\r\n                        <span>Add star</span>\r\n                    </ng-container>\r\n                </button>\r\n            </mat-menu>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { Todo } from 'app/main/apps/todo/todo.model';\r\nimport { TodoService } from 'app/main/apps/todo/todo.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector     : 'todo-list',\r\n    templateUrl  : './todo-list.component.html',\r\n    styleUrls    : ['./todo-list.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class TodoListComponent implements OnInit, OnDestroy\r\n{\r\n    todos: Todo[];\r\n    currentTodo: Todo;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {ActivatedRoute} _activatedRoute\r\n     * @param {TodoService} _todoService\r\n     * @param {Location} _location\r\n     */\r\n    constructor(\r\n        private _activatedRoute: ActivatedRoute,\r\n        private _todoService: TodoService,\r\n        private _location: Location\r\n    )\r\n    {\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Subscribe to update todos on changes\r\n        this._todoService.onTodosChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(todos => {\r\n                this.todos = todos;\r\n            });\r\n\r\n        // Subscribe to update current todo on changes\r\n        this._todoService.onCurrentTodoChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(currentTodo => {\r\n                if ( !currentTodo )\r\n                {\r\n                    // Set the current todo id to null to deselect the current todo\r\n                    this.currentTodo = null;\r\n\r\n                    // Handle the location changes\r\n                    const tagHandle    = this._activatedRoute.snapshot.params.tagHandle,\r\n                          filterHandle = this._activatedRoute.snapshot.params.filterHandle;\r\n\r\n                    if ( tagHandle )\r\n                    {\r\n                        this._location.go('apps/todo/tag/' + tagHandle);\r\n                    }\r\n                    else if ( filterHandle )\r\n                    {\r\n                        this._location.go('apps/todo/filter/' + filterHandle);\r\n                    }\r\n                    else\r\n                    {\r\n                        this._location.go('apps/todo/all');\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    this.currentTodo = currentTodo;\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Read todo\r\n     *\r\n     * @param todoId\r\n     */\r\n    readTodo(todoId): void\r\n    {\r\n        // Set current todo\r\n        this._todoService.setCurrentTodo(todoId);\r\n    }\r\n\r\n    /**\r\n     * On drop\r\n     *\r\n     * @param ev\r\n     */\r\n    onDrop(ev): void\r\n    {\r\n\r\n    }\r\n}\r\n","<div *ngIf=\"todos.length === 0\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFlexFill>\r\n    <span class=\"no-todos-text hint-text\">There are no todos!</span>\r\n</div>\r\n<div class=\"todo-list\" ngxDroppable [model]=\"todos\" (out)=\"onDrop($event)\" [@animateStagger]=\"{value:'50'}\">\r\n    <todo-list-item class=\"todo-list-item has-handle\"\r\n                    *ngFor=\"let todo of todos\" [todo]=\"todo\"\r\n                    ngxDraggable\r\n                    [model]=\"todo\"\r\n                    (click)=\"readTodo(todo.id)\"\r\n                    [ngClass]=\"{'current-todo':todo?.id == currentTodo?.id}\"\r\n                    [@animate]=\"{value:'*',params:{y:'100%'}}\">\r\n    </todo-list-item>\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseSidebarService } from '@fuse/components/sidebar/sidebar.service';\r\n\r\nimport { Todo } from 'app/main/apps/todo/todo.model';\r\nimport { TodoService } from 'app/main/apps/todo/todo.service';\r\n\r\n@Component({\r\n    selector     : 'todo',\r\n    templateUrl  : './todo.component.html',\r\n    styleUrls    : ['./todo.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class TodoComponent implements OnInit, OnDestroy\r\n{\r\n    hasSelectedTodos: boolean;\r\n    isIndeterminate: boolean;\r\n    filters: any[];\r\n    tags: any[];\r\n    searchInput: FormControl;\r\n    currentTodo: Todo;\r\n\r\n    // Private\r\n    private _unsubscribeAll: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {FuseSidebarService} _fuseSidebarService\r\n     * @param {TodoService} _todoService\r\n     */\r\n    constructor(\r\n        private _fuseSidebarService: FuseSidebarService,\r\n        private _todoService: TodoService\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.searchInput = new FormControl('');\r\n\r\n        // Set the private defaults\r\n        this._unsubscribeAll = new Subject();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        this._todoService.onSelectedTodosChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(selectedTodos => {\r\n\r\n                setTimeout(() => {\r\n                    this.hasSelectedTodos = selectedTodos.length > 0;\r\n                    this.isIndeterminate = (selectedTodos.length !== this._todoService.todos.length && selectedTodos.length > 0);\r\n                }, 0);\r\n            });\r\n\r\n        this._todoService.onFiltersChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(folders => {\r\n                this.filters = this._todoService.filters;\r\n            });\r\n\r\n        this._todoService.onTagsChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(tags => {\r\n                this.tags = this._todoService.tags;\r\n            });\r\n\r\n        this.searchInput.valueChanges\r\n            .pipe(\r\n                takeUntil(this._unsubscribeAll),\r\n                debounceTime(300),\r\n                distinctUntilChanged()\r\n            )\r\n            .subscribe(searchText => {\r\n                this._todoService.onSearchTextChanged.next(searchText);\r\n            });\r\n\r\n        this._todoService.onCurrentTodoChanged\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(([currentTodo, formType]) => {\r\n                if ( !currentTodo )\r\n                {\r\n                    this.currentTodo = null;\r\n                }\r\n                else\r\n                {\r\n                    this.currentTodo = currentTodo;\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next();\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Deselect current todo\r\n     */\r\n    deselectCurrentTodo(): void\r\n    {\r\n        this._todoService.onCurrentTodoChanged.next([null, null]);\r\n    }\r\n\r\n    /**\r\n     * Toggle select all\r\n     */\r\n    toggleSelectAll(): void\r\n    {\r\n        this._todoService.toggleSelectAll();\r\n    }\r\n\r\n    /**\r\n     * Select todos\r\n     *\r\n     * @param filterParameter\r\n     * @param filterValue\r\n     */\r\n    selectTodos(filterParameter?, filterValue?): void\r\n    {\r\n        this._todoService.selectTodos(filterParameter, filterValue);\r\n    }\r\n\r\n    /**\r\n     * Deselect todos\r\n     */\r\n    deselectTodos(): void\r\n    {\r\n        this._todoService.deselectTodos();\r\n    }\r\n\r\n    /**\r\n     * Toggle tag on selected todos\r\n     *\r\n     * @param tagId\r\n     */\r\n    toggleTagOnSelectedTodos(tagId): void\r\n    {\r\n        this._todoService.toggleTagOnSelectedTodos(tagId);\r\n    }\r\n\r\n    /**\r\n     * Toggle the sidebar\r\n     *\r\n     * @param name\r\n     */\r\n    toggleSidebar(name): void\r\n    {\r\n        this._fuseSidebarService.getSidebar(name).toggleOpen();\r\n    }\r\n}\r\n","<div id=\"todo\" class=\"page-layout carded left-sidebar inner-scroll\">\r\n\r\n    <!-- TOP BACKGROUND -->\r\n    <div class=\"top-bg accent\"></div>\r\n    <!-- / TOP BACKGROUND -->\r\n\r\n    <!-- SIDEBAR -->\r\n    <fuse-sidebar class=\"sidebar\" name=\"todo-main-sidebar\" position=\"left\" lockedOpen=\"gt-md\">\r\n        <todo-main-sidebar></todo-main-sidebar>\r\n    </fuse-sidebar>\r\n    <!-- / SIDEBAR -->\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\">\r\n\r\n        <!-- CONTENT HEADER -->\r\n        <div class=\"header\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n            <div class=\"search-wrapper\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n                <button mat-icon-button class=\"sidebar-toggle\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('todo-main-sidebar')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button>\r\n\r\n                <div class=\"search\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                    <mat-icon class=\"secondary-text\">search</mat-icon>\r\n                    <input [formControl]=\"searchInput\" placeholder=\"Search for a task\" fxFlex>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        <!-- / CONTENT HEADER -->\r\n\r\n        <!-- CONTENT CARD -->\r\n        <div class=\"content-card\" [ngClass]=\"{'current-todo-selected':currentTodo}\">\r\n\r\n            <!-- CONTENT TOOLBAR -->\r\n            <div class=\"toolbar px-24 py-8\">\r\n\r\n                <div class=\"todo-selection\" fxFlex=\"row\" fxLayoutAlign=\"start center\">\r\n                    <mat-checkbox (click)=\"toggleSelectAll()\" [checked]=\"hasSelectedTodos\"\r\n                                  [indeterminate]=\"isIndeterminate\"></mat-checkbox>\r\n\r\n                    <button mat-icon-button [matMenuTriggerFor]=\"selectMenu\">\r\n                        <mat-icon>arrow_drop_down</mat-icon>\r\n                    </button>\r\n                    <mat-menu #selectMenu=\"matMenu\">\r\n                        <button mat-menu-item (click)=\"selectTodos()\">All</button>\r\n                        <button mat-menu-item (click)=\"deselectTodos()\">None</button>\r\n                        <button mat-menu-item (click)=\"selectTodos('read', true)\">Read</button>\r\n                        <button mat-menu-item (click)=\"selectTodos('read', false)\">Unread</button>\r\n                        <button mat-menu-item (click)=\"selectTodos('starred', true)\">Starred</button>\r\n                        <button mat-menu-item (click)=\"selectTodos('starred', false)\">Unstarred</button>\r\n                        <button mat-menu-item (click)=\"selectTodos('important', true)\">Important</button>\r\n                        <button mat-menu-item (click)=\"selectTodos('important', false)\">Unimportant</button>\r\n                    </mat-menu>\r\n\r\n                    <div class=\"toolbar-separator\" *ngIf=\"hasSelectedTodos\"></div>\r\n\r\n                    <button mat-icon-button [matMenuTriggerFor]=\"labelMenu\" *ngIf=\"hasSelectedTodos\">\r\n                        <mat-icon class=\"secondary-text\">label</mat-icon>\r\n                    </button>\r\n                    <mat-menu #labelMenu=\"matMenu\">\r\n                        <button mat-menu-item *ngFor=\"let tag of tags\" (click)=\"toggleTagOnSelectedTodos(tag.id)\">\r\n                            {{tag.title}}\r\n                        </button>\r\n                    </mat-menu>\r\n                </div>\r\n\r\n                <div *ngIf=\"currentTodo\" fxHide.gt-lg>\r\n                    <button mat-icon-button (click)=\"deselectCurrentTodo()\">\r\n                        <mat-icon class=\"secondary-text\">arrow_back</mat-icon>\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n            <!-- / CONTENT TOOLBAR -->\r\n\r\n            <!-- CONTENT -->\r\n            <div class=\"content\" fxFlexAlign=\"row\">\r\n                <todo-list fusePerfectScrollbar fxFlex></todo-list>\r\n                <todo-details fusePerfectScrollbar fxFlex></todo-details>\r\n            </div>\r\n            <!-- / CONTENT -->\r\n\r\n        </div>\r\n        <!-- / CONTENT CARD -->\r\n\r\n    </div>\r\n    <!-- / CENTER -->\r\n\r\n</div>\r\n","export class Todo\r\n{\r\n    id: string;\r\n    title: string;\r\n    notes: string;\r\n    startDate: string;\r\n    dueDate: boolean;\r\n    completed: boolean;\r\n    starred: boolean;\r\n    important: boolean;\r\n    deleted: boolean;\r\n    tags: [\r\n        {\r\n            'id': number,\r\n            'name': string,\r\n            'label': string,\r\n            'color': string\r\n        }\r\n        ];\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param todo\r\n     */\r\n    constructor(todo)\r\n    {\r\n        {\r\n            this.id = todo.id;\r\n            this.title = todo.title;\r\n            this.notes = todo.notes;\r\n            this.startDate = todo.startDate;\r\n            this.dueDate = todo.dueDate;\r\n            this.completed = todo.completed;\r\n            this.starred = todo.starred;\r\n            this.important = todo.important;\r\n            this.deleted = todo.deleted;\r\n            this.tags = todo.tags || [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle star\r\n     */\r\n    toggleStar(): void\r\n    {\r\n        this.starred = !this.starred;\r\n    }\r\n\r\n    /**\r\n     * Toggle important\r\n     */\r\n    toggleImportant(): void\r\n    {\r\n        this.important = !this.important;\r\n    }\r\n\r\n    /**\r\n     * Toggle completed\r\n     */\r\n    toggleCompleted(): void\r\n    {\r\n        this.completed = !this.completed;\r\n    }\r\n\r\n    /**\r\n     * Toggle deleted\r\n     */\r\n    toggleDeleted(): void\r\n    {\r\n        this.deleted = !this.deleted;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { NgxDnDModule } from '@swimlane/ngx-dnd';\r\n\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { FuseSidebarModule } from '@fuse/components';\r\n\r\nimport { TodoService } from 'app/main/apps/todo/todo.service';\r\nimport { TodoComponent } from 'app/main/apps/todo/todo.component';\r\nimport { TodoMainSidebarComponent } from 'app/main/apps/todo/sidebars/main/main-sidebar.component';\r\nimport { TodoListItemComponent } from 'app/main/apps/todo/todo-list/todo-list-item/todo-list-item.component';\r\nimport { TodoListComponent } from 'app/main/apps/todo/todo-list/todo-list.component';\r\nimport { TodoDetailsComponent } from 'app/main/apps/todo/todo-details/todo-details.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path     : 'all',\r\n        component: TodoComponent,\r\n        resolve  : {\r\n            todo: TodoService\r\n        }\r\n    },\r\n    {\r\n        path     : 'all/:todoId',\r\n        component: TodoComponent,\r\n        resolve  : {\r\n            todo: TodoService\r\n        }\r\n    },\r\n    {\r\n        path     : 'tag/:tagHandle',\r\n        component: TodoComponent,\r\n        resolve  : {\r\n            todo: TodoService\r\n        }\r\n    },\r\n    {\r\n        path     : 'tag/:tagHandle/:todoId',\r\n        component: TodoComponent,\r\n        resolve  : {\r\n            todo: TodoService\r\n        }\r\n    },\r\n    {\r\n        path     : 'filter/:filterHandle',\r\n        component: TodoComponent,\r\n        resolve  : {\r\n            todo: TodoService\r\n        }\r\n    },\r\n    {\r\n        path     : 'filter/:filterHandle/:todoId',\r\n        component: TodoComponent,\r\n        resolve  : {\r\n            todo: TodoService\r\n        }\r\n    },\r\n    {\r\n        path      : '**',\r\n        redirectTo: 'all'\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        TodoComponent,\r\n        TodoMainSidebarComponent,\r\n        TodoListItemComponent,\r\n        TodoListComponent,\r\n        TodoDetailsComponent\r\n    ],\r\n    imports     : [\r\n        RouterModule.forChild(routes),\r\n\r\n        MatButtonModule,\r\n        MatCheckboxModule,\r\n        MatDatepickerModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatMenuModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n\r\n        NgxDnDModule,\r\n\r\n        FuseSharedModule,\r\n        FuseSidebarModule\r\n    ],\r\n    providers   : [\r\n        TodoService\r\n    ]\r\n})\r\nexport class TodoModule\r\n{\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\n\r\nimport { FuseUtils } from '@fuse/utils';\r\n\r\nimport { Todo } from 'app/main/apps/todo/todo.model';\r\n\r\n@Injectable()\r\nexport class TodoService implements Resolve<any>\r\n{\r\n    todos: Todo[];\r\n    selectedTodos: Todo[];\r\n    currentTodo: Todo;\r\n    searchText: string;\r\n    filters: any[];\r\n    tags: any[];\r\n    routeParams: any;\r\n\r\n    onTodosChanged: BehaviorSubject<any>;\r\n    onSelectedTodosChanged: BehaviorSubject<any>;\r\n    onCurrentTodoChanged: BehaviorSubject<any>;\r\n    onFiltersChanged: BehaviorSubject<any>;\r\n    onTagsChanged: BehaviorSubject<any>;\r\n    onSearchTextChanged: BehaviorSubject<any>;\r\n    onNewTodoClicked: Subject<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {HttpClient} _httpClient\r\n     * @param {Location} _location\r\n     */\r\n    constructor(\r\n        private _httpClient: HttpClient,\r\n        private _location: Location\r\n    )\r\n    {\r\n        // Set the defaults\r\n        this.selectedTodos = [];\r\n        this.searchText = '';\r\n        this.onTodosChanged = new BehaviorSubject([]);\r\n        this.onSelectedTodosChanged = new BehaviorSubject([]);\r\n        this.onCurrentTodoChanged = new BehaviorSubject([]);\r\n        this.onFiltersChanged = new BehaviorSubject([]);\r\n        this.onTagsChanged = new BehaviorSubject([]);\r\n        this.onSearchTextChanged = new BehaviorSubject('');\r\n        this.onNewTodoClicked = new Subject();\r\n    }\r\n\r\n    /**\r\n     * Resolver\r\n     *\r\n     * @param {ActivatedRouteSnapshot} route\r\n     * @param {RouterStateSnapshot} state\r\n     * @returns {Observable<any> | Promise<any> | any}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\r\n    {\r\n        this.routeParams = route.params;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            Promise.all([\r\n                this.getFilters(),\r\n                this.getTags(),\r\n                this.getTodos()\r\n            ]).then(\r\n                () => {\r\n                    if ( this.routeParams.todoId )\r\n                    {\r\n                        this.setCurrentTodo(this.routeParams.todoId);\r\n                    }\r\n                    else\r\n                    {\r\n                        this.setCurrentTodo(null);\r\n                    }\r\n\r\n                    this.onSearchTextChanged.subscribe(searchText => {\r\n                        if ( searchText !== '' )\r\n                        {\r\n                            this.searchText = searchText;\r\n                            this.getTodos();\r\n                        }\r\n                        else\r\n                        {\r\n                            this.searchText = searchText;\r\n                            this.getTodos();\r\n                        }\r\n                    });\r\n                    resolve();\r\n                },\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get all filters\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getFilters(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/todo-filters')\r\n                .subscribe((response: any) => {\r\n                    this.filters = response;\r\n                    this.onFiltersChanged.next(this.filters);\r\n                    resolve(this.filters);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get all tags\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getTags(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/todo-tags')\r\n                .subscribe((response: any) => {\r\n                    this.tags = response;\r\n                    this.onTagsChanged.next(this.tags);\r\n                    resolve(this.tags);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get todos\r\n     *\r\n     * @returns {Promise<Todo[]>}\r\n     */\r\n    getTodos(): Promise<Todo[]>\r\n    {\r\n        if ( this.routeParams.tagHandle )\r\n        {\r\n            return this.getTodosByTag(this.routeParams.tagHandle);\r\n        }\r\n\r\n        if ( this.routeParams.filterHandle )\r\n        {\r\n            return this.getTodosByFilter(this.routeParams.filterHandle);\r\n        }\r\n\r\n        return this.getTodosByParams(this.routeParams);\r\n    }\r\n\r\n    /**\r\n     * Get todos by params\r\n     *\r\n     * @param handle\r\n     * @returns {Promise<Todo[]>}\r\n     */\r\n    getTodosByParams(handle): Promise<Todo[]>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._httpClient.get('api/todo-todos')\r\n                .subscribe((todos: any) => {\r\n                    this.todos = todos.map(todo => {\r\n                        return new Todo(todo);\r\n                    });\r\n\r\n                    this.todos = FuseUtils.filterArrayByString(this.todos, this.searchText);\r\n\r\n                    this.onTodosChanged.next(this.todos);\r\n\r\n                    resolve(this.todos);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get todos by filter\r\n     *\r\n     * @param handle\r\n     * @returns {Promise<Todo[]>}\r\n     */\r\n    getTodosByFilter(handle): Promise<Todo[]>\r\n    {\r\n\r\n        let param = handle + '=true';\r\n\r\n        if ( handle === 'dueDate' )\r\n        {\r\n            param = handle + '=^$|\\\\s+';\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._httpClient.get('api/todo-todos?' + param)\r\n                .subscribe((todos: any) => {\r\n\r\n                    this.todos = todos.map(todo => {\r\n                        return new Todo(todo);\r\n                    });\r\n\r\n                    this.todos = FuseUtils.filterArrayByString(this.todos, this.searchText);\r\n\r\n                    this.onTodosChanged.next(this.todos);\r\n\r\n                    resolve(this.todos);\r\n\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get todos by tag\r\n     *\r\n     * @param handle\r\n     * @returns {Promise<Todo[]>}\r\n     */\r\n    getTodosByTag(handle): Promise<Todo[]>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/todo-tags?handle=' + handle)\r\n                .subscribe((tags: any) => {\r\n\r\n                    const tagId = tags[0].id;\r\n\r\n                    this._httpClient.get('api/todo-todos?tags=' + tagId)\r\n                        .subscribe((todos: any) => {\r\n\r\n                            this.todos = todos.map(todo => {\r\n                                return new Todo(todo);\r\n                            });\r\n\r\n                            this.todos = FuseUtils.filterArrayByString(this.todos, this.searchText);\r\n\r\n                            this.onTodosChanged.next(this.todos);\r\n\r\n                            resolve(this.todos);\r\n\r\n                        }, reject);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Toggle selected todo by id\r\n     *\r\n     * @param id\r\n     */\r\n    toggleSelectedTodo(id): void\r\n    {\r\n        // First, check if we already have that todo as selected...\r\n        if ( this.selectedTodos.length > 0 )\r\n        {\r\n            for ( const todo of this.selectedTodos )\r\n            {\r\n                // ...delete the selected todo\r\n                if ( todo.id === id )\r\n                {\r\n                    const index = this.selectedTodos.indexOf(todo);\r\n\r\n                    if ( index !== -1 )\r\n                    {\r\n                        this.selectedTodos.splice(index, 1);\r\n\r\n                        // Trigger the next event\r\n                        this.onSelectedTodosChanged.next(this.selectedTodos);\r\n\r\n                        // Return\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // If we don't have it, push as selected\r\n        this.selectedTodos.push(\r\n            this.todos.find(todo => {\r\n                return todo.id === id;\r\n            })\r\n        );\r\n\r\n        // Trigger the next event\r\n        this.onSelectedTodosChanged.next(this.selectedTodos);\r\n    }\r\n\r\n    /**\r\n     * Toggle select all\r\n     */\r\n    toggleSelectAll(): void\r\n    {\r\n        if ( this.selectedTodos.length > 0 )\r\n        {\r\n            this.deselectTodos();\r\n        }\r\n        else\r\n        {\r\n            this.selectTodos();\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Select todos\r\n     *\r\n     * @param filterParameter\r\n     * @param filterValue\r\n     */\r\n    selectTodos(filterParameter?, filterValue?): void\r\n    {\r\n        this.selectedTodos = [];\r\n\r\n        // If there is no filter, select all todos\r\n        if ( filterParameter === undefined || filterValue === undefined )\r\n        {\r\n            this.selectedTodos = this.todos;\r\n        }\r\n        else\r\n        {\r\n            this.selectedTodos.push(...\r\n                this.todos.filter(todo => {\r\n                    return todo[filterParameter] === filterValue;\r\n                })\r\n            );\r\n        }\r\n\r\n        // Trigger the next event\r\n        this.onSelectedTodosChanged.next(this.selectedTodos);\r\n    }\r\n\r\n    /**\r\n     * Deselect todos\r\n     */\r\n    deselectTodos(): void\r\n    {\r\n        this.selectedTodos = [];\r\n\r\n        // Trigger the next event\r\n        this.onSelectedTodosChanged.next(this.selectedTodos);\r\n    }\r\n\r\n    /**\r\n     * Set current todo by id\r\n     *\r\n     * @param id\r\n     */\r\n    setCurrentTodo(id): void\r\n    {\r\n        this.currentTodo = this.todos.find(todo => {\r\n            return todo.id === id;\r\n        });\r\n\r\n        this.onCurrentTodoChanged.next([this.currentTodo, 'edit']);\r\n\r\n        const tagHandle    = this.routeParams.tagHandle,\r\n              filterHandle = this.routeParams.filterHandle;\r\n\r\n        if ( tagHandle )\r\n        {\r\n            this._location.go('apps/todo/tag/' + tagHandle + '/' + id);\r\n        }\r\n        else if ( filterHandle )\r\n        {\r\n            this._location.go('apps/todo/filter/' + filterHandle + '/' + id);\r\n        }\r\n        else\r\n        {\r\n            this._location.go('apps/todo/all/' + id);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle tag on selected todos\r\n     *\r\n     * @param tagId\r\n     */\r\n    toggleTagOnSelectedTodos(tagId): void\r\n    {\r\n        this.selectedTodos.map(todo => {\r\n            this.toggleTagOnTodo(tagId, todo);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Toggle tag on todo\r\n     *\r\n     * @param tagId\r\n     * @param todo\r\n     */\r\n    toggleTagOnTodo(tagId, todo): void\r\n    {\r\n        const index = todo.tags.indexOf(tagId);\r\n\r\n        if ( index !== -1 )\r\n        {\r\n            todo.tags.splice(index, 1);\r\n        }\r\n        else\r\n        {\r\n            todo.tags.push(tagId);\r\n        }\r\n\r\n        this.updateTodo(todo);\r\n    }\r\n\r\n    /**\r\n     * Has tag?\r\n     *\r\n     * @param tagId\r\n     * @param todo\r\n     * @returns {boolean}\r\n     */\r\n    hasTag(tagId, todo): any\r\n    {\r\n        if ( !todo.tags )\r\n        {\r\n            return false;\r\n        }\r\n\r\n        return todo.tags.indexOf(tagId) !== -1;\r\n    }\r\n\r\n    /**\r\n     * Update the todo\r\n     *\r\n     * @param todo\r\n     * @returns {Promise<any>}\r\n     */\r\n    updateTodo(todo): any\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._httpClient.post('api/todo-todos/' + todo.id, {...todo})\r\n                .subscribe(response => {\r\n\r\n                    this.getTodos().then(todos => {\r\n\r\n                        resolve(todos);\r\n\r\n                    }, reject);\r\n                });\r\n        });\r\n    }\r\n}\r\n"]}